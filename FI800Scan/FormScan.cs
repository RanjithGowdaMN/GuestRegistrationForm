//****************************************************************************
//
//   Scanner Control SDK Test Program
//
//   Copyright PFU Limited 2009-2022
//
//****************************************************************************
using System;
using System.Drawing;
using System.Collections;
using System.ComponentModel;
using System.Windows.Forms;
using System.Data;
using System.Text;
using System.Text.RegularExpressions;
using FiScnUtildN;

namespace fiScanTest
{
    /// <summary>
    /// Summary description for FormScan.
    /// </summary>
    public class FormScan : System.Windows.Forms.Form
    {
        private System.Windows.Forms.Button ButtonScan;
        private System.Windows.Forms.Button ButtonExit;
        private System.Windows.Forms.Button ButtonReset;
        private System.Windows.Forms.TabControl tabControl1;
        private System.Windows.Forms.StatusBar statusBar1;
        private System.Windows.Forms.MainMenu mainMenu1;
        private System.Windows.Forms.MenuItem MenuItemFile;
        private System.Windows.Forms.MenuItem MenuItemExit;
        private System.Windows.Forms.MenuItem MenuItemScanner;
        private System.Windows.Forms.MenuItem MenuItemStartScan;
        private System.Windows.Forms.MenuItem MenuItemSeparator1;
        private System.Windows.Forms.MenuItem MenuItemSelectSource;
        private System.Windows.Forms.MenuItem MenuItemClearPage;
        private System.Windows.Forms.MenuItem MenuItemSeparator2;
        private System.Windows.Forms.MenuItem MenuItemOption;
        private System.Windows.Forms.MenuItem MenuItemShowSourceUI;
        private System.Windows.Forms.MenuItem MenuItemCloseSourceUI;
        internal System.Windows.Forms.MenuItem MenuItemSourceCurrentScan;
        private System.Windows.Forms.MenuItem MenuItemSilentMode;
        private System.Windows.Forms.MenuItem MenuItemReport;
        private System.Windows.Forms.MenuItem MenuItemReportOFF;
        private System.Windows.Forms.MenuItem MenuItemReportDisplay;
        private System.Windows.Forms.MenuItem MenuItemReportFile;
        private System.Windows.Forms.MenuItem MenuItemReportBoth;
        private System.Windows.Forms.MenuItem MenuItemSIPCTemplate;
        private System.Windows.Forms.MenuItem MenuItemSeparator3;
        private System.Windows.Forms.MenuItem MenuItemHelp;
        private System.Windows.Forms.MenuItem MenuItemVersion;
        private System.Windows.Forms.GroupBox groupBox1;
        private System.Windows.Forms.GroupBox groupBox2;
        private System.Windows.Forms.GroupBox groupBox3;
        private System.Windows.Forms.GroupBox groupBox4;
        private System.Windows.Forms.GroupBox groupBox5;
        private System.Windows.Forms.GroupBox groupBox7;
        private System.Windows.Forms.Label label1;
        private System.Windows.Forms.Label label2;
        private System.Windows.Forms.Label label3;
        private System.Windows.Forms.Label label4;
        private System.Windows.Forms.Label label7;
        private System.Windows.Forms.Label label5;
        private System.Windows.Forms.Label label6;
        private System.Windows.Forms.Label label8;
        private System.Windows.Forms.Label label9;
        private System.Windows.Forms.Label label10;
        private System.Windows.Forms.Label label11;
        private System.Windows.Forms.Label label12;
        private System.Windows.Forms.Label label13;
        private System.Windows.Forms.Label label14;
        private System.Windows.Forms.Label label15;
        private System.Windows.Forms.Label label16;
        private System.Windows.Forms.Label label18;
        private System.Windows.Forms.Label label17;
        private System.Windows.Forms.Label label19;
        private System.Windows.Forms.Label label20;
        private System.Windows.Forms.Label label21;
        private System.Windows.Forms.Label label25;
        private System.Windows.Forms.Label label22;
        private System.Windows.Forms.Label label24;
        private System.Windows.Forms.Label label23;
        private System.Windows.Forms.Label label26;
        private System.Windows.Forms.Label label28;
        private System.Windows.Forms.Label label27;
        private System.Windows.Forms.Label label29;
        private System.Windows.Forms.Label label30;
        private System.Windows.Forms.Label label31;
        private System.Windows.Forms.Label label32;
        private System.Windows.Forms.Label label33;
        private System.Windows.Forms.ComboBox cboScanTo;
        private System.Windows.Forms.ComboBox cboFileType;
        private System.Windows.Forms.TextBox txtFileName;
        private System.Windows.Forms.ComboBox cboOverwrite;
        private System.Windows.Forms.TextBox txtFileCounter;
        private System.Windows.Forms.ComboBox cboCompType;
        private System.Windows.Forms.ComboBox cboJpegQuality;
        private System.Windows.Forms.ComboBox cboPixelType;
        private System.Windows.Forms.ComboBox cboResolution;
        private System.Windows.Forms.TextBox txtCustomResolution;
        private System.Windows.Forms.TextBox txtScanCount;
        private System.Windows.Forms.ComboBox cboPaperSupply;
        private System.Windows.Forms.CheckBox chkLongPage;
        private System.Windows.Forms.CheckBox chkUndefinedScanning;
        private System.Windows.Forms.ComboBox cboPaperSize;
        private System.Windows.Forms.ComboBox cboOrientation;
        private System.Windows.Forms.ComboBox cboBackgroundColor;
        private System.Windows.Forms.TextBox txtCustomPaperWidth;
        private System.Windows.Forms.TextBox txtCustomPaperLength;
        private System.Windows.Forms.TextBox txtRegionLeft;
        private System.Windows.Forms.TextBox txtRegionTop;
        private System.Windows.Forms.TextBox txtRegionWidth;
        private System.Windows.Forms.TextBox txtRegionLength;
        private System.Windows.Forms.TextBox txtBrightness;
        private System.Windows.Forms.Label label34;
        private System.Windows.Forms.Label label35;
        private System.Windows.Forms.Label label36;
        private System.Windows.Forms.TextBox txtContrast;
        private System.Windows.Forms.Label label37;
        private System.Windows.Forms.Label label38;
        private System.Windows.Forms.TextBox txtThreshold;
        private System.Windows.Forms.Label label39;
        private System.Windows.Forms.CheckBox chkReverse;
        private System.Windows.Forms.CheckBox chkMirroring;
        private System.Windows.Forms.Label label41;
        private System.Windows.Forms.ComboBox cboRotation;
        private System.Windows.Forms.Label label42;
        private System.Windows.Forms.ComboBox cboBackground;
        private System.Windows.Forms.Label label43;
        private System.Windows.Forms.ComboBox cboOutline;
        private System.Windows.Forms.Label label44;
        private System.Windows.Forms.ComboBox cboAutoSeparation;
        private System.Windows.Forms.Label label45;
        private System.Windows.Forms.ComboBox cboSEE;
        private System.Windows.Forms.Label label46;
        private System.Windows.Forms.ComboBox cboHalftone;
        private System.Windows.Forms.TextBox txtHalftoneFile;
        private System.Windows.Forms.Label label47;
        private System.Windows.Forms.ComboBox cboGamma;
        private System.Windows.Forms.TextBox txtGammaFile;
        private System.Windows.Forms.Label label48;
        private System.Windows.Forms.Label label49;
        private System.Windows.Forms.TextBox txtCustomGamma;
        private System.Windows.Forms.Label label50;
        private System.Windows.Forms.ComboBox cboThresholdCurve;
        private System.Windows.Forms.Label label51;
        private System.Windows.Forms.ComboBox cboNoiseRemoval;
        private System.Windows.Forms.CheckBox chkPreFiltering;
        private System.Windows.Forms.CheckBox chkSmoothing;
        private System.Windows.Forms.Label label63;
        private System.Windows.Forms.ComboBox cboJobControl;
        private System.Windows.Forms.Label label64;
        private System.Windows.Forms.ComboBox cboBinding;
        private System.Windows.Forms.Label label65;
        private System.Windows.Forms.ComboBox cboMultiFeed;
        private System.Windows.Forms.Label label66;
        private System.Windows.Forms.ComboBox cboFilter;
        private System.Windows.Forms.Label label67;
        private System.Windows.Forms.TextBox txtSkipWhitePage;
        private System.Windows.Forms.Label label68;
        private System.Windows.Forms.Label label69;
        private System.Windows.Forms.Label label70;
        private System.Windows.Forms.TextBox txtSkipBlackPage;
        private System.Windows.Forms.Label label71;
        private System.Windows.Forms.CheckBox chkAutoBorderDetection;
        private System.Windows.Forms.MenuItem MenuItemIndicator;
        private System.Windows.Forms.ComboBox cboUnit;
        private System.Windows.Forms.Label label72;
        private System.Windows.Forms.Label label73;
        private System.Windows.Forms.TextBox txtHighlight;
        private System.Windows.Forms.Label label74;
        private System.Windows.Forms.Label label75;
        private System.Windows.Forms.TextBox txtShadow;
        private System.Windows.Forms.Label label76;
        private System.Windows.Forms.Label label77;
        private System.Windows.Forms.ComboBox cboOverScan;
        private System.Windows.Forms.Label label52;
        private System.Windows.Forms.Label label53;
        private System.Windows.Forms.MenuItem MenuItemTWAINTemplate;
        private System.Windows.Forms.MenuItem menuItemSeparator4;
        private System.Windows.Forms.MenuItem menuItemFeederLoaded;
        private System.Windows.Forms.GroupBox groupBox8;
        private System.Windows.Forms.Label label78;
        private System.Windows.Forms.Label label79;
        private System.Windows.Forms.Label label80;
        private System.Windows.Forms.Label label81;
        private System.Windows.Forms.CheckBox chkBarcodeDetection;
        private System.Windows.Forms.ComboBox cboBarcodeDirection;
        private System.Windows.Forms.TextBox txtBarcodeRegionLeft;
        private System.Windows.Forms.Label label82;
        private System.Windows.Forms.Label label83;
        private System.Windows.Forms.TextBox txtBarcodeRegionWidth;
        private System.Windows.Forms.Label label84;
        private System.Windows.Forms.Label label85;
        private System.Windows.Forms.Label label86;
        private System.Windows.Forms.Label label87;
        private System.Windows.Forms.TextBox txtBarcodeRegionLength;
        private System.Windows.Forms.TextBox txtBarcodeRegionTop;
        private System.Windows.Forms.GroupBox groupBox9;
        private System.Windows.Forms.Label label88;
        private System.Windows.Forms.Label label89;
        private System.Windows.Forms.CheckBox chkEAN8;
        private System.Windows.Forms.Label label90;
        private System.Windows.Forms.Label label91;
        private System.Windows.Forms.Label label92;
        private System.Windows.Forms.Label label93;
        private System.Windows.Forms.Label label94;
        private System.Windows.Forms.Label label95;
        private System.Windows.Forms.Label label96;
        private System.Windows.Forms.Label label97;
        private System.Windows.Forms.CheckBox chkCode128;
        private System.Windows.Forms.CheckBox chkEAN13;
        private System.Windows.Forms.CheckBox chkCode3of9;
        private System.Windows.Forms.CheckBox chkCodabar;
        private System.Windows.Forms.CheckBox chkITF;
        private System.Windows.Forms.CheckBox chkPDF417;
        private System.Windows.Forms.CheckBox chkQRCode;
        private System.Windows.Forms.CheckBox chkUPCA;
        private System.Windows.Forms.GroupBox groupBox10;
        private System.Windows.Forms.ComboBox cboPatchCodeDirection;
        private System.Windows.Forms.CheckBox chkPatchCodeDetection;
        private System.Windows.Forms.Label label98;
        private System.Windows.Forms.Label label99;
        private System.Windows.Forms.GroupBox groupBox11;
        private System.Windows.Forms.Label label100;
        private System.Windows.Forms.Label label101;
        private System.Windows.Forms.CheckBox chkPatch1;
        private System.Windows.Forms.Label label102;
        private System.Windows.Forms.CheckBox chkPatch4;
        private System.Windows.Forms.Label label103;
        private System.Windows.Forms.Label label104;
        private System.Windows.Forms.CheckBox chkPatchT;
        private System.Windows.Forms.CheckBox chkPatch2;
        private System.Windows.Forms.CheckBox chkPatch6;
        private System.Windows.Forms.Label label105;
        private System.Windows.Forms.Label label106;
        private System.Windows.Forms.CheckBox chkPatch3;
        private System.Windows.Forms.GroupBox groupBox12;
        private System.Windows.Forms.GroupBox groupBox13;
        private System.Windows.Forms.Label label107;
        private System.Windows.Forms.TextBox txtEdgeFillerTop;
        private System.Windows.Forms.Label label108;
        private System.Windows.Forms.Label label109;
        private System.Windows.Forms.Label label110;
        private System.Windows.Forms.Label label111;
        private System.Windows.Forms.TextBox txtEdgeFillerLeft;
        private System.Windows.Forms.Label label112;
        private System.Windows.Forms.Label label113;
        private System.Windows.Forms.Label label114;
        private System.Windows.Forms.Label label115;
        private System.Windows.Forms.TextBox txtEdgeFillerRight;
        private System.Windows.Forms.TextBox txtEdgeFillerBottom;
        private System.Windows.Forms.ComboBox cboEdgeFiller;
        private System.Windows.Forms.Label label116;
        private System.Windows.Forms.ComboBox cboJobControlMode;
        private System.Windows.Forms.Label label118;
        private System.Windows.Forms.Label label119;
        private System.Windows.Forms.Label label120;
        private System.Windows.Forms.TextBox txtBlankPageSkip;
        private System.Windows.Forms.CheckBox chkAutoBright;
        private System.Windows.Forms.Label label121;
        private System.Windows.Forms.Button ButtonCheckADF;
        private System.Windows.Forms.Label label122;
        private System.Windows.Forms.Label label123;
        private System.Windows.Forms.CheckBox chkAutomaticSenseMedium;
        private System.Windows.Forms.Label label125;
        private System.Windows.Forms.TextBox txtDTCSensitivity;
        private System.Windows.Forms.Label label126;
        private System.Windows.Forms.Label label127;
        private System.Windows.Forms.Label label128;
        private System.Windows.Forms.TextBox txtBackgroundThreshold;
        private System.Windows.Forms.Label label129;
        private System.Windows.Forms.Label label130;
        private System.Windows.Forms.TextBox txtCharacterThickness;
        private System.Windows.Forms.Label label131;
        private System.Windows.Forms.Label label132;
        private System.Windows.Forms.TextBox txtSDTCSensitivity;
        private System.Windows.Forms.Label label133;
        private System.Windows.Forms.Label label134;
        private System.Windows.Forms.Label label135;
        private System.Windows.Forms.TextBox txtADTCThreshold;
        private System.Windows.Forms.Label label136;
        private System.Windows.Forms.ComboBox cboSharpness;
        private System.Windows.Forms.Label label137;
        private System.Windows.Forms.Label label138;
        private System.Windows.Forms.Label label139;
        private System.Windows.Forms.TextBox txtFadingCompensation;
        private System.Windows.Forms.Label label140;
        private System.Windows.Forms.CheckBox chksRGB;
        private System.Windows.Forms.Label label141;
        private System.Windows.Forms.ComboBox cboPunchHoleRemoval;
        private System.Windows.Forms.Label label142;
        private System.Windows.Forms.TextBox txtNoiseRejection;
        private Hashtable barcodeHashTable;
        private Hashtable barcodeRotationHashTable;
        private Hashtable patchCodeHashTable;
        private Hashtable aiqcResultHashTable;
        private Hashtable multiResultHashTable;
        private Hashtable blankPageResultHashTable;
        public delegate void DetectBarcodeEventHandler(long readCount, long barcodeType, String barcodeText);
        public delegate void DetectPatchCodeEventHandler(long readCount, long patchCodeType);
        private ArrayList resultList;
        private System.Windows.Forms.Label label143;
        private System.Windows.Forms.CheckBox chkEdgeRepair;
        private System.Windows.Forms.Label label40;
        private System.Windows.Forms.ComboBox cboScanMode;
        private System.Windows.Forms.TabPage Endorser;
        private System.Windows.Forms.GroupBox groupBox6;
        private System.Windows.Forms.ComboBox cboEndorserFont;
        private System.Windows.Forms.Label label117;
        private System.Windows.Forms.ComboBox cboEndorserCountDirection;
        private System.Windows.Forms.Label label62;
        private System.Windows.Forms.ComboBox cboEndorserCountStep;
        private System.Windows.Forms.Label label61;
        private System.Windows.Forms.ComboBox cboEndorserDirection;
        private System.Windows.Forms.Label label60;
        private System.Windows.Forms.TextBox txtEndorserOffset;
        private System.Windows.Forms.Label label59;
        private System.Windows.Forms.Label label58;
        private System.Windows.Forms.TextBox txtEndorserString;
        private System.Windows.Forms.Label label57;
        private System.Windows.Forms.Label label56;
        private System.Windows.Forms.TextBox txtEndorserCounter;
        private System.Windows.Forms.Label label55;
        private System.Windows.Forms.CheckBox chkEndorser;
        private System.Windows.Forms.Label label54;
        private System.Windows.Forms.Label label144;
        private System.Windows.Forms.GroupBox groupBox14;
        private System.Windows.Forms.Label label146;
        private System.Windows.Forms.Label label147;
        private System.Windows.Forms.Label label149;
        private System.Windows.Forms.Label label150;
        private System.Windows.Forms.Label label151;
        private System.Windows.Forms.Label label152;
        private System.Windows.Forms.Label label153;
        private System.Windows.Forms.Label label154;
        private System.Windows.Forms.Label label145;
        private System.Windows.Forms.Label label148;
        private System.Windows.Forms.CheckBox chkSynchronizationDigitalEndorser;
        private System.Windows.Forms.ComboBox cboDigitalEndorserCountDirection;
        private System.Windows.Forms.ComboBox cboDigitalEndorserCountStep;
        private System.Windows.Forms.TextBox txtDigitalEndorserXOffset;
        private System.Windows.Forms.TextBox txtDigitalEndorserString;
        private System.Windows.Forms.TextBox txtDigitalEndorserCounter;
        private System.Windows.Forms.CheckBox chkDigitalEndorser;
        private System.Windows.Forms.TextBox txtDigitalEndorserYOffset;
        private System.Windows.Forms.Label label155;
        private System.Windows.Forms.TextBox txtFilterSaturationSensitivity;
        private System.Windows.Forms.Label label156;
        private System.Windows.Forms.Label label157;
        private System.Windows.Forms.CheckBox chkVerticalLineReduction;
        private System.Windows.Forms.Label label158;
        private System.Windows.Forms.Label label159;
        private System.Windows.Forms.TextBox txtBarcodeMaxSearchPriorities;
        private System.Windows.Forms.TabPage Standard;
        private System.Windows.Forms.TabPage Image;
        private System.Windows.Forms.TabPage Extention;
        private System.Windows.Forms.TabPage Barcode;
        private System.Windows.Forms.TabPage PatchCode;
        private System.Windows.Forms.TabPage EdgeFiller;
        private System.Windows.Forms.ComboBox cboBackgroundSmoothing;
        private System.Windows.Forms.Label label124;
        private System.Windows.Forms.Label label160;
        private System.Windows.Forms.TextBox txtBackgroundSmoothness;
        private System.Windows.Forms.ComboBox cboPatternRemoval;
        private System.Windows.Forms.Label label161;
        private System.Windows.Forms.Label label162;
        private System.Windows.Forms.Label label163;
        private System.Windows.Forms.ComboBox cboCropPriority;
        private System.Windows.Forms.ComboBox cboDeskew;
        private System.Windows.Forms.CheckBox chkAIQCNotice;
        private System.Windows.Forms.Label label164;
        private System.Windows.Forms.TextBox txtCropMarginSize;
        private System.Windows.Forms.Label label166;
        private System.Windows.Forms.Label label167;
        private System.Windows.Forms.TextBox txtMultiFeedModeChangeSize;
        private System.Windows.Forms.Label label168;
        private CheckBox chkDataMatrix;
        private Label label165;
        private ComboBox cboBlankPageNotice;
        private Label label170;
        private CheckBox chkHwCompression;
        private Label label171;
        private CheckBox chkScanContinue;
        private Label label169;
        private Label label173;
        private TextBox txtAutomaticColorSensitivity;
        private Label label172;
        private MenuItem MenuItemShowEvent;
        private MenuItem MenuItemSeparator5;
        private Label label174;
        private ComboBox cboLengthDetection;
        private CheckBox chkAztecCode;
        private Label label175;
        private ComboBox cboDigitalEndorserDirection;
        private Label label176;
        private MenuItem MenuItemOutputResult;
        private MenuItem MenuItemSourceList;
        private Label label178;
        private ComboBox cboDeskewBackground;
        private CheckBox chkMultiFeedNotice;
        private Label label179;
        private Button ButtonPSIPDefault;
        private Label label177;
        private ComboBox cboBlankPageSkipMode;
        private Label label180;
        private Label label182;
        private TextBox txtBlankPageIgnoreAreaSize;
        private Label label181;
        private ComboBox cboScanContinueMode;
        private Label label183;
        private Label label184;
        private ComboBox cboDeskewMode;
        private ComboBox cboBlankPageSkipTabPage;
        private Label label185;
        private ComboBox cboPunchHoleRemovalMode;
        private Label label186;
        private ComboBox cboAutomaticColorBackground;
        private ComboBox cboFrontBackMergingLocation;
        private Label label189;
        private Label label188;
        private Label label187;
        private CheckBox chkFrontBackMergingEnabled;
        private ComboBox cboFrontBackMergingRotation;
        private ComboBox cboFrontBackMergingTarget;
        private Label label190;
        private Label label191;
        private Label label193;
        private Label label192;
        private TextBox txtFrontBackMergingTargetSize;
        private ComboBox cboFrontBackMergingTargetMode;
        private Label label194;
        private ComboBox cboEndorserDialog;
        private Label label195;
        private ComboBox cboSelectOutputSize;
        private Label label196;
        private CheckBox chkDivideLongPage;
        private TabPage Image2;
        private GroupBox groupBox15;
        private Label label197;
        private ComboBox cboColorReproduction;
        private Label label198;
        private TextBox txtColorReproductionBrightness;
        private Label label200;
        private Label label199;
        private Label label207;
        private TextBox txtColorReproductionCustomGamma;
        private Label label206;
        private Label label205;
        private TextBox txtColorReproductionHighlight;
        private Label label204;
        private Label label203;
        private TextBox txtColorReproductionShadow;
        private Label label202;
        private Label label201;
        private TextBox txtColorReproductionContrast;
        private CheckBox chkAdjustRGB;
        private Label label208;
        private Label label214;
        private TextBox txtAdjustRGBB;
        private Label label213;
        private Label label212;
        private TextBox txtAdjustRGBG;
        private Label label211;
        private Label label210;
        private TextBox txtAdjustRGBR;
        private Label label209;
        private Button ButtonSerialNo;
        private Label label215;
        private CheckBox chkBarcodeNotDetectionNotice;
        private MenuItem MenuItemAutoProfile;
        private CheckBox chkStampRemoval;
        private Label label219;
        private CheckBox chkHalftoneRemoval;
        private Label label218;
        private CheckBox chkReversedTypeExtraction;
        private Label label217;
        private CheckBox chkCharacterExtraction;
        private Label label216;
        private IContainer components;
        private Label label220;
        private CheckBox chkSimpleSlicePatternRemoval;
        private ComboBox cboFrontBackDetection;
        private Label label221;
        private ComboBox cboPaperProtection;
        private Label label222;
        private TabPage Stream1;
        private GroupBox groupBox16;
        private GroupBox groupBox17;
        private GroupBox groupBox18;
        private GroupBox groupBox20;
        private GroupBox groupBox19;
        private Label label223;
        private ComboBox cboStream1FileType;
        private Label label224;
        private ComboBox cboStream1Resolution;
        private Label label225;
        private ComboBox cboStream1CompressionType;
        private Label label226;
        private TextBox txtStream1CustomResolution;
        private Label label227;
        private ComboBox cboStream1PixelType;
        private Label label228;
        private CheckBox chkStream1Reverse;
        private Label label230;
        private CheckBox chkStream1AutoBright;
        private Label label229;
        private ComboBox cboStream1Gamma;
        private Label label231;
        private ComboBox cboStream1Background;
        private Label label238;
        private Label label237;
        private TextBox txtStream1CustomGamma;
        private Label label236;
        private Label label235;
        private TextBox txtStream1Contrast;
        private Label label234;
        private Label label233;
        private TextBox txtStream1Brightness;
        private Label label232;
        private TextBox txtStream1GammaFile;
        private ComboBox cboStream1Sharpness;
        private Label label240;
        private TextBox txtStream1Threshold;
        private Label label241;
        private Label label242;
        private Label label244;
        private TextBox txtStream1DTCSensitivity;
        private Label label243;
        private Label label246;
        private TextBox txtStream1BackgroundThreshold;
        private Label label245;
        private Label label247;
        private Label label248;
        private TextBox txtStream1CharacterThickness;
        private TextBox txtStream1FadingCompensation;
        private Label label249;
        private Label label252;
        private TextBox txtStream1NoiseRejection;
        private Label label251;
        private Label label250;
        private CheckBox chkStream1CharacterExtraction;
        private Label label254;
        private ComboBox cboStream1PatternRemoval;
        private Label label253;
        private CheckBox chkStream1ReversedTypeExtraction;
        private Label label255;
        private ComboBox cboStream1SEE;
        private Label label265;
        private TextBox txtStream1HalftoneFile;
        private ComboBox cboStream1Halftone;
        private Label label264;
        private Label label263;
        private TextBox txtStream1SDTCSensitivity;
        private Label label262;
        private Label label261;
        private TextBox txtStream1ADTCThreshold;
        private Label label260;
        private CheckBox chkStream1SimpleSlicePatternRemoval;
        private Label label258;
        private CheckBox chkStream1StampRemoval;
        private Label label257;
        private CheckBox chkStream1HalftoneRemoval;
        private Label label256;
        private Label label268;
        private TextBox txtStream1ColorReproductionBrightness;
        private Label label267;
        private ComboBox cboStream1ColorReproduction;
        private Label label266;
        private Label label276;
        private TextBox txtStream1ColorReproductionShadow;
        private Label label275;
        private Label label274;
        private TextBox txtStream1ColorReproductionHighlight;
        private Label label273;
        private Label label272;
        private TextBox txtStream1ColorReproductionCustomGamma;
        private Label label271;
        private Label label270;
        private TextBox txtStream1ColorReproductionContrast;
        private Label label269;
        private Label label279;
        private TextBox txtStream1AdjustRGBR;
        private Label label278;
        private CheckBox chkStream1AdjustRGB;
        private Label label277;
        private CheckBox chkStream1sRGB;
        private Label label284;
        private Label label283;
        private TextBox txtStream1AdjustRGBB;
        private Label label282;
        private Label label281;
        private TextBox txtStream1AdjustRGBG;
        private Label label280;
        private Label label289;
        private TextBox txtStream1Highlight;
        private Label label288;
        private Label label287;
        private TextBox txtStream1FilterSaturationSensitivity;
        private Label label286;
        private ComboBox cboStream1Filter;
        private Label label285;
        private Label label294;
        private TextBox txtStream1BackgroundSmoothness;
        private Label label293;
        private ComboBox cboStream1BackgroundSmoothing;
        private Label label292;
        private Label label291;
        private TextBox txtStream1Shadow;
        private Label label290;
        private Label label259;
        private ComboBox cboMultiStreamMode;
        private GroupBox groupBox21;
        private TabPage Stream2;
        private TabPage Stream3;
        private GroupBox groupBox22;
        private ComboBox cboStream2PixelType;
        private Label label295;
        private Label label296;
        private TextBox txtStream2CustomResolution;
        private Label label297;
        private ComboBox cboStream2CompressionType;
        private Label label298;
        private ComboBox cboStream2Resolution;
        private Label label299;
        private ComboBox cboStream2FileType;
        private Label label300;
        private GroupBox groupBox23;
        private ComboBox cboStream2Sharpness;
        private Label label301;
        private ComboBox cboStream2Background;
        private Label label303;
        private Label label304;
        private TextBox txtStream2CustomGamma;
        private Label label305;
        private Label label306;
        private TextBox txtStream2Contrast;
        private Label label307;
        private Label label308;
        private TextBox txtStream2Brightness;
        private Label label309;
        private TextBox txtStream2GammaFile;
        private ComboBox cboStream2Gamma;
        private Label label310;
        private CheckBox chkStream2Reverse;
        private Label label311;
        private CheckBox chkStream2AutoBright;
        private Label label312;
        private GroupBox groupBox24;
        private ComboBox cboStream2SEE;
        private Label label313;
        private TextBox txtStream2HalftoneFile;
        private ComboBox cboStream2Halftone;
        private Label label314;
        private Label label315;
        private TextBox txtStream2SDTCSensitivity;
        private Label label316;
        private Label label317;
        private TextBox txtStream2ADTCThreshold;
        private Label label318;
        private CheckBox chkStream2SimpleSlicePatternRemoval;
        private Label label319;
        private CheckBox chkStream2StampRemoval;
        private Label label320;
        private CheckBox chkStream2HalftoneRemoval;
        private Label label321;
        private CheckBox chkStream2ReversedTypeExtraction;
        private Label label322;
        private CheckBox chkStream2CharacterExtraction;
        private Label label323;
        private ComboBox cboStream2PatternRemoval;
        private Label label324;
        private Label label325;
        private TextBox txtStream2NoiseRejection;
        private Label label326;
        private Label label327;
        private TextBox txtStream2FadingCompensation;
        private Label label328;
        private Label label329;
        private TextBox txtStream2CharacterThickness;
        private Label label330;
        private Label label331;
        private TextBox txtStream2BackgroundThreshold;
        private Label label332;
        private Label label333;
        private TextBox txtStream2DTCSensitivity;
        private Label label334;
        private Label label335;
        private TextBox txtStream2Threshold;
        private Label label336;
        private GroupBox groupBox25;
        private Label label337;
        private TextBox txtStream2FilterSaturationSensitivity;
        private Label label338;
        private ComboBox cboStream2Filter;
        private Label label339;
        private GroupBox groupBox26;
        private Label label340;
        private ComboBox cboStream2BackgroundSmoothing;
        private Label label341;
        private Label label342;
        private Label label343;
        private TextBox txtStream2Shadow;
        private TextBox txtStream2BackgroundSmoothness;
        private Label label344;
        private Label label345;
        private TextBox txtStream2Highlight;
        private Label label346;
        private GroupBox groupBox27;
        private CheckBox chkStream2sRGB;
        private Label label347;
        private Label label348;
        private TextBox txtStream2AdjustRGBB;
        private Label label349;
        private Label label350;
        private TextBox txtStream2AdjustRGBG;
        private Label label351;
        private Label label352;
        private TextBox txtStream2AdjustRGBR;
        private Label label353;
        private CheckBox chkStream2AdjustRGB;
        private Label label354;
        private Label label355;
        private TextBox txtStream2ColorReproductionShadow;
        private Label label356;
        private Label label357;
        private TextBox txtStream2ColorReproductionHighlight;
        private Label label358;
        private Label label359;
        private TextBox txtStream2ColorReproductionCustomGamma;
        private Label label360;
        private Label label361;
        private TextBox txtStream2ColorReproductionContrast;
        private Label label362;
        private Label label363;
        private TextBox txtStream2ColorReproductionBrightness;
        private Label label364;
        private ComboBox cboStream2ColorReproduction;
        private Label label365;
        private GroupBox groupBox28;
        private ComboBox cboStream3PixelType;
        private Label label366;
        private Label label367;
        private TextBox txtStream3CustomResolution;
        private Label label368;
        private ComboBox cboStream3CompressionType;
        private Label label369;
        private ComboBox cboStream3Resolution;
        private Label label370;
        private ComboBox cboStream3FileType;
        private Label label371;
        private GroupBox groupBox29;
        private ComboBox cboStream3Sharpness;
        private Label label372;
        private ComboBox cboStream3Background;
        private Label label374;
        private Label label375;
        private TextBox txtStream3CustomGamma;
        private Label label376;
        private Label label377;
        private TextBox txtStream3Contrast;
        private Label label378;
        private Label label379;
        private TextBox txtStream3Brightness;
        private Label label380;
        private TextBox txtStream3GammaFile;
        private ComboBox cboStream3Gamma;
        private Label label381;
        private CheckBox chkStream3Reverse;
        private Label label382;
        private CheckBox chkStream3AutoBright;
        private Label label383;
        private GroupBox groupBox30;
        private ComboBox cboStream3SEE;
        private Label label384;
        private TextBox txtStream3HalftoneFile;
        private ComboBox cboStream3Halftone;
        private Label label385;
        private Label label386;
        private TextBox txtStream3SDTCSensitivity;
        private Label label387;
        private Label label388;
        private TextBox txtStream3ADTCThreshold;
        private Label label389;
        private CheckBox chkStream3SimpleSlicePatternRemoval;
        private Label label390;
        private CheckBox chkStream3StampRemoval;
        private Label label391;
        private CheckBox chkStream3HalftoneRemoval;
        private Label label392;
        private CheckBox chkStream3ReversedTypeExtraction;
        private Label label393;
        private CheckBox chkStream3CharacterExtraction;
        private Label label394;
        private ComboBox cboStream3PatternRemoval;
        private Label label395;
        private Label label396;
        private TextBox txtStream3NoiseRejection;
        private Label label397;
        private Label label398;
        private TextBox txtStream3FadingCompensation;
        private Label label399;
        private Label label400;
        private TextBox txtStream3CharacterThickness;
        private Label label401;
        private Label label402;
        private TextBox txtStream3BackgroundThreshold;
        private Label label403;
        private Label label404;
        private TextBox txtStream3DTCSensitivity;
        private Label label405;
        private Label label406;
        private TextBox txtStream3Threshold;
        private Label label407;
        private GroupBox groupBox31;
        private Label label408;
        private TextBox txtStream3FilterSaturationSensitivity;
        private Label label409;
        private ComboBox cboStream3Filter;
        private Label label410;
        private GroupBox groupBox32;
        private Label label411;
        private ComboBox cboStream3BackgroundSmoothing;
        private Label label412;
        private Label label413;
        private Label label414;
        private TextBox txtStream3Shadow;
        private TextBox txtStream3BackgroundSmoothness;
        private Label label415;
        private Label label416;
        private TextBox txtStream3Highlight;
        private Label label417;
        private GroupBox groupBox33;
        private CheckBox chkStream3sRGB;
        private Label label418;
        private Label label419;
        private TextBox txtStream3AdjustRGBB;
        private Label label420;
        private Label label421;
        private TextBox txtStream3AdjustRGBG;
        private Label label422;
        private Label label423;
        private TextBox txtStream3AdjustRGBR;
        private Label label424;
        private CheckBox chkStream3AdjustRGB;
        private Label label425;
        private Label label426;
        private TextBox txtStream3ColorReproductionShadow;
        private Label label427;
        private Label label428;
        private TextBox txtStream3ColorReproductionHighlight;
        private Label label429;
        private Label label430;
        private TextBox txtStream3ColorReproductionCustomGamma;
        private Label label431;
        private Label label432;
        private TextBox txtStream3ColorReproductionContrast;
        private Label label433;
        private Label label434;
        private TextBox txtStream3ColorReproductionBrightness;
        private Label label435;
        private ComboBox cboStream3ColorReproduction;
        private Label label436;
        public AxFiScnLib.AxFiScn axFiScn1;
        private FormAutoProfile formAutoProfile;
        private Label label239;
        private ComboBox cboManualFeedMode;
        private Label label302;
        private ComboBox cboAutomaticRotateMode;
        private Label label373;
        private ComboBox cboMultiStreamFileNameMode;
        private Label label437;
        private TextBox txtFileCounter1;
        private Label label438;
        private Label label439;
        private TextBox txtFileName1;
        private Label label440;
        private TextBox txtFileCounter2;
        private Label label441;
        private Label label442;
        private TextBox txtFileName2;
        private Label label443;
        private TextBox txtFileCounter3;
        private Label label444;
        private Label label445;
        private ComboBox cboMultiStreamDefaultValueMode;
        private Label label446;
        private MenuItem MenuItemCarrierSheetClippingMode;
        private MenuItem MenuItemCarrierSheetClippingModeContent;
        private MenuItem MenuItemCarrierSheetClippingModeEdge;
        private MenuItem MenuItemCarrierSheetClippingModeDriverSetting;
        private TextBox txtFileName3;

        public FormScan()
        {
            //
            // Required for Windows Form Designer support
            //
            InitializeComponent();

            barcodeHashTable = new Hashtable();
            barcodeHashTable.Add(ModuleScan.BA_UNDEFINED, ModuleScan.BA_STR_UNDEFINED);
            barcodeHashTable.Add(ModuleScan.BA_EAN8, ModuleScan.BA_STR_EAN8);
            barcodeHashTable.Add(ModuleScan.BA_EAN13, ModuleScan.BA_STR_EAN13);
            barcodeHashTable.Add(ModuleScan.BA_CODE3OF9, ModuleScan.BA_STR_CODE3OF9);
            barcodeHashTable.Add(ModuleScan.BA_CODE128, ModuleScan.BA_STR_CODE128);
            barcodeHashTable.Add(ModuleScan.BA_ITF, ModuleScan.BA_STR_ITF);
            barcodeHashTable.Add(ModuleScan.BA_UPCA, ModuleScan.BA_STR_UPCA);
            barcodeHashTable.Add(ModuleScan.BA_CODABAR, ModuleScan.BA_STR_CODABAR);
            barcodeHashTable.Add(ModuleScan.BA_PDF417, ModuleScan.BA_STR_PDF417);
            barcodeHashTable.Add(ModuleScan.BA_QRCODE, ModuleScan.BA_STR_QRCODE);
            barcodeHashTable.Add(ModuleScan.BA_DATAMATRIX, ModuleScan.BA_STR_DATAMATRIX);
            barcodeHashTable.Add(ModuleScan.BA_AZTECCODE, ModuleScan.BA_STR_AZTECCODE);

            barcodeRotationHashTable = new Hashtable();
            barcodeRotationHashTable.Add(ModuleScan.BA_RT_0, ModuleScan.BA_RT_STR_0);
            barcodeRotationHashTable.Add(ModuleScan.BA_RT_90, ModuleScan.BA_RT_STR_90);
            barcodeRotationHashTable.Add(ModuleScan.BA_RT_180, ModuleScan.BA_RT_STR_180);
            barcodeRotationHashTable.Add(ModuleScan.BA_RT_270, ModuleScan.BA_RT_STR_270);
            barcodeRotationHashTable.Add(ModuleScan.BA_RT_X, ModuleScan.BA_RT_STR_X);

            patchCodeHashTable = new Hashtable();
            patchCodeHashTable.Add(ModuleScan.PA_PATCH1, ModuleScan.PA_STR_PATCH1);
            patchCodeHashTable.Add(ModuleScan.PA_PATCH2, ModuleScan.PA_STR_PATCH2);
            patchCodeHashTable.Add(ModuleScan.PA_PATCH3, ModuleScan.PA_STR_PATCH3);
            patchCodeHashTable.Add(ModuleScan.PA_PATCH4, ModuleScan.PA_STR_PATCH4);
            patchCodeHashTable.Add(ModuleScan.PA_PATCH6, ModuleScan.PA_STR_PATCH6);
            patchCodeHashTable.Add(ModuleScan.PA_PATCHT, ModuleScan.PA_STR_PATCHT);
 
            aiqcResultHashTable = new Hashtable();
            aiqcResultHashTable.Add(true, ModuleScan.AR_BADIMAGE);
            aiqcResultHashTable.Add(false, ModuleScan.AR_NOERROR);

            multiResultHashTable = new Hashtable();
            multiResultHashTable.Add(true, ModuleScan.MR_DETECT);
            multiResultHashTable.Add(false, ModuleScan.MR_NOT_DETECT);

            blankPageResultHashTable = new Hashtable();
            blankPageResultHashTable.Add(ModuleScan.BR_DETECTION, ModuleScan.BR_STR_DETECTION);
            blankPageResultHashTable.Add(ModuleScan.BR_NONDETECTION, ModuleScan.BR_STR_NONDETECTION);

            MenuItemShowEvent.Checked = false;
            MenuItemOutputResult.Checked = false;
          
            resultList = new ArrayList();

            formAutoProfile = new FormAutoProfile();
        }

        /// <summary>
        /// Clean up any resources being used.
        /// </summary>
        protected override void Dispose( bool disposing )
        {
            if( disposing )
            {
                if (components != null) 
                {
                    components.Dispose();
                }
            }
            base.Dispose( disposing );
        }

        #region Windows Form Designer generated code
        /// <summary>
        /// Required method for Designer support - do not modify
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
            this.components = new System.ComponentModel.Container();
            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(FormScan));
            this.ButtonScan = new System.Windows.Forms.Button();
            this.ButtonExit = new System.Windows.Forms.Button();
            this.ButtonReset = new System.Windows.Forms.Button();
            this.tabControl1 = new System.Windows.Forms.TabControl();
            this.Standard = new System.Windows.Forms.TabPage();
            this.groupBox3 = new System.Windows.Forms.GroupBox();
            this.label160 = new System.Windows.Forms.Label();
            this.txtBackgroundSmoothness = new System.Windows.Forms.TextBox();
            this.cboBackgroundSmoothing = new System.Windows.Forms.ComboBox();
            this.chkAutomaticSenseMedium = new System.Windows.Forms.CheckBox();
            this.label122 = new System.Windows.Forms.Label();
            this.label72 = new System.Windows.Forms.Label();
            this.cboUnit = new System.Windows.Forms.ComboBox();
            this.txtRegionLength = new System.Windows.Forms.TextBox();
            this.txtRegionWidth = new System.Windows.Forms.TextBox();
            this.txtRegionTop = new System.Windows.Forms.TextBox();
            this.txtRegionLeft = new System.Windows.Forms.TextBox();
            this.txtCustomPaperLength = new System.Windows.Forms.TextBox();
            this.txtCustomPaperWidth = new System.Windows.Forms.TextBox();
            this.cboBackgroundColor = new System.Windows.Forms.ComboBox();
            this.cboOrientation = new System.Windows.Forms.ComboBox();
            this.cboPaperSize = new System.Windows.Forms.ComboBox();
            this.chkUndefinedScanning = new System.Windows.Forms.CheckBox();
            this.chkLongPage = new System.Windows.Forms.CheckBox();
            this.cboPaperSupply = new System.Windows.Forms.ComboBox();
            this.txtScanCount = new System.Windows.Forms.TextBox();
            this.label32 = new System.Windows.Forms.Label();
            this.label31 = new System.Windows.Forms.Label();
            this.label30 = new System.Windows.Forms.Label();
            this.label29 = new System.Windows.Forms.Label();
            this.label27 = new System.Windows.Forms.Label();
            this.label28 = new System.Windows.Forms.Label();
            this.label26 = new System.Windows.Forms.Label();
            this.label23 = new System.Windows.Forms.Label();
            this.label24 = new System.Windows.Forms.Label();
            this.label22 = new System.Windows.Forms.Label();
            this.label25 = new System.Windows.Forms.Label();
            this.label21 = new System.Windows.Forms.Label();
            this.label20 = new System.Windows.Forms.Label();
            this.label19 = new System.Windows.Forms.Label();
            this.label17 = new System.Windows.Forms.Label();
            this.label18 = new System.Windows.Forms.Label();
            this.label16 = new System.Windows.Forms.Label();
            this.label15 = new System.Windows.Forms.Label();
            this.label14 = new System.Windows.Forms.Label();
            this.label13 = new System.Windows.Forms.Label();
            this.label123 = new System.Windows.Forms.Label();
            this.label124 = new System.Windows.Forms.Label();
            this.groupBox2 = new System.Windows.Forms.GroupBox();
            this.cboAutomaticColorBackground = new System.Windows.Forms.ComboBox();
            this.label185 = new System.Windows.Forms.Label();
            this.label173 = new System.Windows.Forms.Label();
            this.txtAutomaticColorSensitivity = new System.Windows.Forms.TextBox();
            this.label172 = new System.Windows.Forms.Label();
            this.chkAutoBright = new System.Windows.Forms.CheckBox();
            this.label121 = new System.Windows.Forms.Label();
            this.txtCustomResolution = new System.Windows.Forms.TextBox();
            this.cboResolution = new System.Windows.Forms.ComboBox();
            this.cboPixelType = new System.Windows.Forms.ComboBox();
            this.label12 = new System.Windows.Forms.Label();
            this.label11 = new System.Windows.Forms.Label();
            this.label10 = new System.Windows.Forms.Label();
            this.label9 = new System.Windows.Forms.Label();
            this.groupBox1 = new System.Windows.Forms.GroupBox();
            this.cboMultiStreamFileNameMode = new System.Windows.Forms.ComboBox();
            this.label373 = new System.Windows.Forms.Label();
            this.cboMultiStreamMode = new System.Windows.Forms.ComboBox();
            this.label259 = new System.Windows.Forms.Label();
            this.cboScanContinueMode = new System.Windows.Forms.ComboBox();
            this.label183 = new System.Windows.Forms.Label();
            this.label169 = new System.Windows.Forms.Label();
            this.chkScanContinue = new System.Windows.Forms.CheckBox();
            this.cboScanMode = new System.Windows.Forms.ComboBox();
            this.label40 = new System.Windows.Forms.Label();
            this.cboJpegQuality = new System.Windows.Forms.ComboBox();
            this.cboCompType = new System.Windows.Forms.ComboBox();
            this.txtFileCounter = new System.Windows.Forms.TextBox();
            this.cboOverwrite = new System.Windows.Forms.ComboBox();
            this.txtFileName = new System.Windows.Forms.TextBox();
            this.cboFileType = new System.Windows.Forms.ComboBox();
            this.cboScanTo = new System.Windows.Forms.ComboBox();
            this.label8 = new System.Windows.Forms.Label();
            this.label6 = new System.Windows.Forms.Label();
            this.label5 = new System.Windows.Forms.Label();
            this.label7 = new System.Windows.Forms.Label();
            this.label4 = new System.Windows.Forms.Label();
            this.label3 = new System.Windows.Forms.Label();
            this.label2 = new System.Windows.Forms.Label();
            this.label1 = new System.Windows.Forms.Label();
            this.Image = new System.Windows.Forms.TabPage();
            this.groupBox5 = new System.Windows.Forms.GroupBox();
            this.chkSmoothing = new System.Windows.Forms.CheckBox();
            this.label52 = new System.Windows.Forms.Label();
            this.chkPreFiltering = new System.Windows.Forms.CheckBox();
            this.label53 = new System.Windows.Forms.Label();
            this.cboNoiseRemoval = new System.Windows.Forms.ComboBox();
            this.label51 = new System.Windows.Forms.Label();
            this.cboThresholdCurve = new System.Windows.Forms.ComboBox();
            this.label50 = new System.Windows.Forms.Label();
            this.groupBox4 = new System.Windows.Forms.GroupBox();
            this.chkSimpleSlicePatternRemoval = new System.Windows.Forms.CheckBox();
            this.label220 = new System.Windows.Forms.Label();
            this.chkStampRemoval = new System.Windows.Forms.CheckBox();
            this.label219 = new System.Windows.Forms.Label();
            this.chkHalftoneRemoval = new System.Windows.Forms.CheckBox();
            this.label218 = new System.Windows.Forms.Label();
            this.chkReversedTypeExtraction = new System.Windows.Forms.CheckBox();
            this.label217 = new System.Windows.Forms.Label();
            this.chkCharacterExtraction = new System.Windows.Forms.CheckBox();
            this.label216 = new System.Windows.Forms.Label();
            this.cboPunchHoleRemovalMode = new System.Windows.Forms.ComboBox();
            this.label186 = new System.Windows.Forms.Label();
            this.cboPatternRemoval = new System.Windows.Forms.ComboBox();
            this.chkVerticalLineReduction = new System.Windows.Forms.CheckBox();
            this.label142 = new System.Windows.Forms.Label();
            this.cboPunchHoleRemoval = new System.Windows.Forms.ComboBox();
            this.label141 = new System.Windows.Forms.Label();
            this.chksRGB = new System.Windows.Forms.CheckBox();
            this.label140 = new System.Windows.Forms.Label();
            this.label138 = new System.Windows.Forms.Label();
            this.cboSharpness = new System.Windows.Forms.ComboBox();
            this.label137 = new System.Windows.Forms.Label();
            this.label135 = new System.Windows.Forms.Label();
            this.txtADTCThreshold = new System.Windows.Forms.TextBox();
            this.label136 = new System.Windows.Forms.Label();
            this.label133 = new System.Windows.Forms.Label();
            this.txtNoiseRejection = new System.Windows.Forms.TextBox();
            this.label134 = new System.Windows.Forms.Label();
            this.label132 = new System.Windows.Forms.Label();
            this.txtSDTCSensitivity = new System.Windows.Forms.TextBox();
            this.label131 = new System.Windows.Forms.Label();
            this.label130 = new System.Windows.Forms.Label();
            this.txtCharacterThickness = new System.Windows.Forms.TextBox();
            this.label129 = new System.Windows.Forms.Label();
            this.label126 = new System.Windows.Forms.Label();
            this.txtDTCSensitivity = new System.Windows.Forms.TextBox();
            this.label125 = new System.Windows.Forms.Label();
            this.label76 = new System.Windows.Forms.Label();
            this.txtShadow = new System.Windows.Forms.TextBox();
            this.label75 = new System.Windows.Forms.Label();
            this.label74 = new System.Windows.Forms.Label();
            this.txtHighlight = new System.Windows.Forms.TextBox();
            this.label73 = new System.Windows.Forms.Label();
            this.txtCustomGamma = new System.Windows.Forms.TextBox();
            this.label49 = new System.Windows.Forms.Label();
            this.label48 = new System.Windows.Forms.Label();
            this.txtGammaFile = new System.Windows.Forms.TextBox();
            this.cboGamma = new System.Windows.Forms.ComboBox();
            this.label47 = new System.Windows.Forms.Label();
            this.txtHalftoneFile = new System.Windows.Forms.TextBox();
            this.cboHalftone = new System.Windows.Forms.ComboBox();
            this.label46 = new System.Windows.Forms.Label();
            this.cboSEE = new System.Windows.Forms.ComboBox();
            this.label45 = new System.Windows.Forms.Label();
            this.cboAutoSeparation = new System.Windows.Forms.ComboBox();
            this.label44 = new System.Windows.Forms.Label();
            this.cboAutomaticRotateMode = new System.Windows.Forms.ComboBox();
            this.label302 = new System.Windows.Forms.Label();
            this.cboOutline = new System.Windows.Forms.ComboBox();
            this.label43 = new System.Windows.Forms.Label();
            this.cboBackground = new System.Windows.Forms.ComboBox();
            this.label42 = new System.Windows.Forms.Label();
            this.cboRotation = new System.Windows.Forms.ComboBox();
            this.label41 = new System.Windows.Forms.Label();
            this.chkMirroring = new System.Windows.Forms.CheckBox();
            this.chkReverse = new System.Windows.Forms.CheckBox();
            this.label39 = new System.Windows.Forms.Label();
            this.txtThreshold = new System.Windows.Forms.TextBox();
            this.label38 = new System.Windows.Forms.Label();
            this.label37 = new System.Windows.Forms.Label();
            this.txtContrast = new System.Windows.Forms.TextBox();
            this.label36 = new System.Windows.Forms.Label();
            this.label35 = new System.Windows.Forms.Label();
            this.label34 = new System.Windows.Forms.Label();
            this.txtBrightness = new System.Windows.Forms.TextBox();
            this.label33 = new System.Windows.Forms.Label();
            this.label127 = new System.Windows.Forms.Label();
            this.label128 = new System.Windows.Forms.Label();
            this.txtBackgroundThreshold = new System.Windows.Forms.TextBox();
            this.txtFadingCompensation = new System.Windows.Forms.TextBox();
            this.label139 = new System.Windows.Forms.Label();
            this.label143 = new System.Windows.Forms.Label();
            this.label157 = new System.Windows.Forms.Label();
            this.Image2 = new System.Windows.Forms.TabPage();
            this.groupBox15 = new System.Windows.Forms.GroupBox();
            this.label214 = new System.Windows.Forms.Label();
            this.txtAdjustRGBB = new System.Windows.Forms.TextBox();
            this.label213 = new System.Windows.Forms.Label();
            this.label212 = new System.Windows.Forms.Label();
            this.txtAdjustRGBG = new System.Windows.Forms.TextBox();
            this.label211 = new System.Windows.Forms.Label();
            this.label210 = new System.Windows.Forms.Label();
            this.txtAdjustRGBR = new System.Windows.Forms.TextBox();
            this.label209 = new System.Windows.Forms.Label();
            this.chkAdjustRGB = new System.Windows.Forms.CheckBox();
            this.label208 = new System.Windows.Forms.Label();
            this.label207 = new System.Windows.Forms.Label();
            this.txtColorReproductionCustomGamma = new System.Windows.Forms.TextBox();
            this.label206 = new System.Windows.Forms.Label();
            this.label205 = new System.Windows.Forms.Label();
            this.txtColorReproductionHighlight = new System.Windows.Forms.TextBox();
            this.label204 = new System.Windows.Forms.Label();
            this.label203 = new System.Windows.Forms.Label();
            this.txtColorReproductionShadow = new System.Windows.Forms.TextBox();
            this.label202 = new System.Windows.Forms.Label();
            this.label201 = new System.Windows.Forms.Label();
            this.txtColorReproductionContrast = new System.Windows.Forms.TextBox();
            this.label200 = new System.Windows.Forms.Label();
            this.label199 = new System.Windows.Forms.Label();
            this.txtColorReproductionBrightness = new System.Windows.Forms.TextBox();
            this.label198 = new System.Windows.Forms.Label();
            this.cboColorReproduction = new System.Windows.Forms.ComboBox();
            this.label197 = new System.Windows.Forms.Label();
            this.Extention = new System.Windows.Forms.TabPage();
            this.groupBox7 = new System.Windows.Forms.GroupBox();
            this.cboPaperProtection = new System.Windows.Forms.ComboBox();
            this.label222 = new System.Windows.Forms.Label();
            this.cboFrontBackDetection = new System.Windows.Forms.ComboBox();
            this.label239 = new System.Windows.Forms.Label();
            this.cboManualFeedMode = new System.Windows.Forms.ComboBox();
            this.label221 = new System.Windows.Forms.Label();
            this.chkDivideLongPage = new System.Windows.Forms.CheckBox();
            this.label196 = new System.Windows.Forms.Label();
            this.cboSelectOutputSize = new System.Windows.Forms.ComboBox();
            this.label195 = new System.Windows.Forms.Label();
            this.cboFrontBackMergingTargetMode = new System.Windows.Forms.ComboBox();
            this.label193 = new System.Windows.Forms.Label();
            this.label192 = new System.Windows.Forms.Label();
            this.txtFrontBackMergingTargetSize = new System.Windows.Forms.TextBox();
            this.label191 = new System.Windows.Forms.Label();
            this.cboFrontBackMergingTarget = new System.Windows.Forms.ComboBox();
            this.label190 = new System.Windows.Forms.Label();
            this.chkFrontBackMergingEnabled = new System.Windows.Forms.CheckBox();
            this.cboFrontBackMergingRotation = new System.Windows.Forms.ComboBox();
            this.cboFrontBackMergingLocation = new System.Windows.Forms.ComboBox();
            this.label189 = new System.Windows.Forms.Label();
            this.label188 = new System.Windows.Forms.Label();
            this.label187 = new System.Windows.Forms.Label();
            this.cboBlankPageSkipTabPage = new System.Windows.Forms.ComboBox();
            this.label184 = new System.Windows.Forms.Label();
            this.cboDeskewMode = new System.Windows.Forms.ComboBox();
            this.cboDeskew = new System.Windows.Forms.ComboBox();
            this.label182 = new System.Windows.Forms.Label();
            this.txtBlankPageIgnoreAreaSize = new System.Windows.Forms.TextBox();
            this.label181 = new System.Windows.Forms.Label();
            this.label180 = new System.Windows.Forms.Label();
            this.label177 = new System.Windows.Forms.Label();
            this.cboBlankPageSkipMode = new System.Windows.Forms.ComboBox();
            this.chkMultiFeedNotice = new System.Windows.Forms.CheckBox();
            this.label179 = new System.Windows.Forms.Label();
            this.label178 = new System.Windows.Forms.Label();
            this.cboDeskewBackground = new System.Windows.Forms.ComboBox();
            this.label174 = new System.Windows.Forms.Label();
            this.cboLengthDetection = new System.Windows.Forms.ComboBox();
            this.chkHwCompression = new System.Windows.Forms.CheckBox();
            this.label171 = new System.Windows.Forms.Label();
            this.cboBlankPageNotice = new System.Windows.Forms.ComboBox();
            this.label170 = new System.Windows.Forms.Label();
            this.txtMultiFeedModeChangeSize = new System.Windows.Forms.TextBox();
            this.label167 = new System.Windows.Forms.Label();
            this.txtCropMarginSize = new System.Windows.Forms.TextBox();
            this.label164 = new System.Windows.Forms.Label();
            this.cboCropPriority = new System.Windows.Forms.ComboBox();
            this.chkAIQCNotice = new System.Windows.Forms.CheckBox();
            this.txtFilterSaturationSensitivity = new System.Windows.Forms.TextBox();
            this.label156 = new System.Windows.Forms.Label();
            this.label155 = new System.Windows.Forms.Label();
            this.cboOverScan = new System.Windows.Forms.ComboBox();
            this.label77 = new System.Windows.Forms.Label();
            this.chkAutoBorderDetection = new System.Windows.Forms.CheckBox();
            this.label71 = new System.Windows.Forms.Label();
            this.txtSkipBlackPage = new System.Windows.Forms.TextBox();
            this.label70 = new System.Windows.Forms.Label();
            this.label69 = new System.Windows.Forms.Label();
            this.label68 = new System.Windows.Forms.Label();
            this.txtSkipWhitePage = new System.Windows.Forms.TextBox();
            this.label67 = new System.Windows.Forms.Label();
            this.cboFilter = new System.Windows.Forms.ComboBox();
            this.label66 = new System.Windows.Forms.Label();
            this.cboMultiFeed = new System.Windows.Forms.ComboBox();
            this.label65 = new System.Windows.Forms.Label();
            this.cboBinding = new System.Windows.Forms.ComboBox();
            this.label64 = new System.Windows.Forms.Label();
            this.cboJobControl = new System.Windows.Forms.ComboBox();
            this.label63 = new System.Windows.Forms.Label();
            this.cboJobControlMode = new System.Windows.Forms.ComboBox();
            this.label118 = new System.Windows.Forms.Label();
            this.txtBlankPageSkip = new System.Windows.Forms.TextBox();
            this.label119 = new System.Windows.Forms.Label();
            this.label120 = new System.Windows.Forms.Label();
            this.label161 = new System.Windows.Forms.Label();
            this.label162 = new System.Windows.Forms.Label();
            this.label163 = new System.Windows.Forms.Label();
            this.label166 = new System.Windows.Forms.Label();
            this.label168 = new System.Windows.Forms.Label();
            this.Endorser = new System.Windows.Forms.TabPage();
            this.groupBox6 = new System.Windows.Forms.GroupBox();
            this.cboEndorserDialog = new System.Windows.Forms.ComboBox();
            this.label194 = new System.Windows.Forms.Label();
            this.cboEndorserFont = new System.Windows.Forms.ComboBox();
            this.label117 = new System.Windows.Forms.Label();
            this.cboEndorserCountDirection = new System.Windows.Forms.ComboBox();
            this.label62 = new System.Windows.Forms.Label();
            this.cboEndorserCountStep = new System.Windows.Forms.ComboBox();
            this.label61 = new System.Windows.Forms.Label();
            this.cboEndorserDirection = new System.Windows.Forms.ComboBox();
            this.label60 = new System.Windows.Forms.Label();
            this.txtEndorserOffset = new System.Windows.Forms.TextBox();
            this.label59 = new System.Windows.Forms.Label();
            this.label58 = new System.Windows.Forms.Label();
            this.txtEndorserString = new System.Windows.Forms.TextBox();
            this.label57 = new System.Windows.Forms.Label();
            this.label56 = new System.Windows.Forms.Label();
            this.txtEndorserCounter = new System.Windows.Forms.TextBox();
            this.label55 = new System.Windows.Forms.Label();
            this.chkEndorser = new System.Windows.Forms.CheckBox();
            this.label54 = new System.Windows.Forms.Label();
            this.chkSynchronizationDigitalEndorser = new System.Windows.Forms.CheckBox();
            this.label144 = new System.Windows.Forms.Label();
            this.groupBox14 = new System.Windows.Forms.GroupBox();
            this.cboDigitalEndorserDirection = new System.Windows.Forms.ComboBox();
            this.label176 = new System.Windows.Forms.Label();
            this.cboDigitalEndorserCountDirection = new System.Windows.Forms.ComboBox();
            this.label146 = new System.Windows.Forms.Label();
            this.cboDigitalEndorserCountStep = new System.Windows.Forms.ComboBox();
            this.label147 = new System.Windows.Forms.Label();
            this.txtDigitalEndorserXOffset = new System.Windows.Forms.TextBox();
            this.label149 = new System.Windows.Forms.Label();
            this.label150 = new System.Windows.Forms.Label();
            this.txtDigitalEndorserString = new System.Windows.Forms.TextBox();
            this.label151 = new System.Windows.Forms.Label();
            this.label152 = new System.Windows.Forms.Label();
            this.txtDigitalEndorserCounter = new System.Windows.Forms.TextBox();
            this.label153 = new System.Windows.Forms.Label();
            this.chkDigitalEndorser = new System.Windows.Forms.CheckBox();
            this.label154 = new System.Windows.Forms.Label();
            this.label145 = new System.Windows.Forms.Label();
            this.label148 = new System.Windows.Forms.Label();
            this.txtDigitalEndorserYOffset = new System.Windows.Forms.TextBox();
            this.Barcode = new System.Windows.Forms.TabPage();
            this.groupBox8 = new System.Windows.Forms.GroupBox();
            this.chkBarcodeNotDetectionNotice = new System.Windows.Forms.CheckBox();
            this.label215 = new System.Windows.Forms.Label();
            this.label159 = new System.Windows.Forms.Label();
            this.txtBarcodeMaxSearchPriorities = new System.Windows.Forms.TextBox();
            this.label158 = new System.Windows.Forms.Label();
            this.groupBox9 = new System.Windows.Forms.GroupBox();
            this.chkAztecCode = new System.Windows.Forms.CheckBox();
            this.label175 = new System.Windows.Forms.Label();
            this.chkDataMatrix = new System.Windows.Forms.CheckBox();
            this.label165 = new System.Windows.Forms.Label();
            this.label88 = new System.Windows.Forms.Label();
            this.label89 = new System.Windows.Forms.Label();
            this.chkEAN8 = new System.Windows.Forms.CheckBox();
            this.label90 = new System.Windows.Forms.Label();
            this.chkCode128 = new System.Windows.Forms.CheckBox();
            this.label91 = new System.Windows.Forms.Label();
            this.chkCodabar = new System.Windows.Forms.CheckBox();
            this.label92 = new System.Windows.Forms.Label();
            this.label93 = new System.Windows.Forms.Label();
            this.label94 = new System.Windows.Forms.Label();
            this.chkITF = new System.Windows.Forms.CheckBox();
            this.chkPDF417 = new System.Windows.Forms.CheckBox();
            this.chkEAN13 = new System.Windows.Forms.CheckBox();
            this.chkQRCode = new System.Windows.Forms.CheckBox();
            this.chkUPCA = new System.Windows.Forms.CheckBox();
            this.label95 = new System.Windows.Forms.Label();
            this.label96 = new System.Windows.Forms.Label();
            this.label97 = new System.Windows.Forms.Label();
            this.chkCode3of9 = new System.Windows.Forms.CheckBox();
            this.label82 = new System.Windows.Forms.Label();
            this.txtBarcodeRegionLeft = new System.Windows.Forms.TextBox();
            this.cboBarcodeDirection = new System.Windows.Forms.ComboBox();
            this.chkBarcodeDetection = new System.Windows.Forms.CheckBox();
            this.label81 = new System.Windows.Forms.Label();
            this.label80 = new System.Windows.Forms.Label();
            this.label79 = new System.Windows.Forms.Label();
            this.label78 = new System.Windows.Forms.Label();
            this.label83 = new System.Windows.Forms.Label();
            this.txtBarcodeRegionWidth = new System.Windows.Forms.TextBox();
            this.label84 = new System.Windows.Forms.Label();
            this.label85 = new System.Windows.Forms.Label();
            this.label86 = new System.Windows.Forms.Label();
            this.label87 = new System.Windows.Forms.Label();
            this.txtBarcodeRegionLength = new System.Windows.Forms.TextBox();
            this.txtBarcodeRegionTop = new System.Windows.Forms.TextBox();
            this.PatchCode = new System.Windows.Forms.TabPage();
            this.groupBox10 = new System.Windows.Forms.GroupBox();
            this.groupBox11 = new System.Windows.Forms.GroupBox();
            this.label100 = new System.Windows.Forms.Label();
            this.label101 = new System.Windows.Forms.Label();
            this.chkPatch1 = new System.Windows.Forms.CheckBox();
            this.label102 = new System.Windows.Forms.Label();
            this.chkPatch4 = new System.Windows.Forms.CheckBox();
            this.label103 = new System.Windows.Forms.Label();
            this.label104 = new System.Windows.Forms.Label();
            this.chkPatchT = new System.Windows.Forms.CheckBox();
            this.chkPatch2 = new System.Windows.Forms.CheckBox();
            this.chkPatch6 = new System.Windows.Forms.CheckBox();
            this.label105 = new System.Windows.Forms.Label();
            this.label106 = new System.Windows.Forms.Label();
            this.chkPatch3 = new System.Windows.Forms.CheckBox();
            this.cboPatchCodeDirection = new System.Windows.Forms.ComboBox();
            this.chkPatchCodeDetection = new System.Windows.Forms.CheckBox();
            this.label98 = new System.Windows.Forms.Label();
            this.label99 = new System.Windows.Forms.Label();
            this.EdgeFiller = new System.Windows.Forms.TabPage();
            this.groupBox12 = new System.Windows.Forms.GroupBox();
            this.chkEdgeRepair = new System.Windows.Forms.CheckBox();
            this.groupBox13 = new System.Windows.Forms.GroupBox();
            this.label107 = new System.Windows.Forms.Label();
            this.txtEdgeFillerTop = new System.Windows.Forms.TextBox();
            this.cboEdgeFiller = new System.Windows.Forms.ComboBox();
            this.label108 = new System.Windows.Forms.Label();
            this.label109 = new System.Windows.Forms.Label();
            this.label110 = new System.Windows.Forms.Label();
            this.label111 = new System.Windows.Forms.Label();
            this.txtEdgeFillerLeft = new System.Windows.Forms.TextBox();
            this.label112 = new System.Windows.Forms.Label();
            this.label113 = new System.Windows.Forms.Label();
            this.label114 = new System.Windows.Forms.Label();
            this.label115 = new System.Windows.Forms.Label();
            this.txtEdgeFillerRight = new System.Windows.Forms.TextBox();
            this.txtEdgeFillerBottom = new System.Windows.Forms.TextBox();
            this.label116 = new System.Windows.Forms.Label();
            this.Stream1 = new System.Windows.Forms.TabPage();
            this.groupBox21 = new System.Windows.Forms.GroupBox();
            this.label292 = new System.Windows.Forms.Label();
            this.cboStream1BackgroundSmoothing = new System.Windows.Forms.ComboBox();
            this.label294 = new System.Windows.Forms.Label();
            this.label288 = new System.Windows.Forms.Label();
            this.label291 = new System.Windows.Forms.Label();
            this.txtStream1Shadow = new System.Windows.Forms.TextBox();
            this.txtStream1BackgroundSmoothness = new System.Windows.Forms.TextBox();
            this.label290 = new System.Windows.Forms.Label();
            this.label293 = new System.Windows.Forms.Label();
            this.txtStream1Highlight = new System.Windows.Forms.TextBox();
            this.label289 = new System.Windows.Forms.Label();
            this.groupBox20 = new System.Windows.Forms.GroupBox();
            this.label287 = new System.Windows.Forms.Label();
            this.txtStream1FilterSaturationSensitivity = new System.Windows.Forms.TextBox();
            this.label286 = new System.Windows.Forms.Label();
            this.cboStream1Filter = new System.Windows.Forms.ComboBox();
            this.label285 = new System.Windows.Forms.Label();
            this.groupBox19 = new System.Windows.Forms.GroupBox();
            this.chkStream1sRGB = new System.Windows.Forms.CheckBox();
            this.label284 = new System.Windows.Forms.Label();
            this.label283 = new System.Windows.Forms.Label();
            this.txtStream1AdjustRGBB = new System.Windows.Forms.TextBox();
            this.label282 = new System.Windows.Forms.Label();
            this.label281 = new System.Windows.Forms.Label();
            this.txtStream1AdjustRGBG = new System.Windows.Forms.TextBox();
            this.label280 = new System.Windows.Forms.Label();
            this.label279 = new System.Windows.Forms.Label();
            this.txtStream1AdjustRGBR = new System.Windows.Forms.TextBox();
            this.label278 = new System.Windows.Forms.Label();
            this.chkStream1AdjustRGB = new System.Windows.Forms.CheckBox();
            this.label277 = new System.Windows.Forms.Label();
            this.label276 = new System.Windows.Forms.Label();
            this.txtStream1ColorReproductionShadow = new System.Windows.Forms.TextBox();
            this.label275 = new System.Windows.Forms.Label();
            this.label274 = new System.Windows.Forms.Label();
            this.txtStream1ColorReproductionHighlight = new System.Windows.Forms.TextBox();
            this.label273 = new System.Windows.Forms.Label();
            this.label272 = new System.Windows.Forms.Label();
            this.txtStream1ColorReproductionCustomGamma = new System.Windows.Forms.TextBox();
            this.label271 = new System.Windows.Forms.Label();
            this.label270 = new System.Windows.Forms.Label();
            this.txtStream1ColorReproductionContrast = new System.Windows.Forms.TextBox();
            this.label269 = new System.Windows.Forms.Label();
            this.label268 = new System.Windows.Forms.Label();
            this.txtStream1ColorReproductionBrightness = new System.Windows.Forms.TextBox();
            this.label267 = new System.Windows.Forms.Label();
            this.cboStream1ColorReproduction = new System.Windows.Forms.ComboBox();
            this.label266 = new System.Windows.Forms.Label();
            this.groupBox18 = new System.Windows.Forms.GroupBox();
            this.cboStream1SEE = new System.Windows.Forms.ComboBox();
            this.label265 = new System.Windows.Forms.Label();
            this.txtStream1HalftoneFile = new System.Windows.Forms.TextBox();
            this.cboStream1Halftone = new System.Windows.Forms.ComboBox();
            this.label264 = new System.Windows.Forms.Label();
            this.label263 = new System.Windows.Forms.Label();
            this.txtStream1SDTCSensitivity = new System.Windows.Forms.TextBox();
            this.label262 = new System.Windows.Forms.Label();
            this.label261 = new System.Windows.Forms.Label();
            this.txtStream1ADTCThreshold = new System.Windows.Forms.TextBox();
            this.label260 = new System.Windows.Forms.Label();
            this.chkStream1SimpleSlicePatternRemoval = new System.Windows.Forms.CheckBox();
            this.label258 = new System.Windows.Forms.Label();
            this.chkStream1StampRemoval = new System.Windows.Forms.CheckBox();
            this.label257 = new System.Windows.Forms.Label();
            this.chkStream1HalftoneRemoval = new System.Windows.Forms.CheckBox();
            this.label256 = new System.Windows.Forms.Label();
            this.chkStream1ReversedTypeExtraction = new System.Windows.Forms.CheckBox();
            this.label255 = new System.Windows.Forms.Label();
            this.chkStream1CharacterExtraction = new System.Windows.Forms.CheckBox();
            this.label254 = new System.Windows.Forms.Label();
            this.cboStream1PatternRemoval = new System.Windows.Forms.ComboBox();
            this.label253 = new System.Windows.Forms.Label();
            this.label252 = new System.Windows.Forms.Label();
            this.txtStream1NoiseRejection = new System.Windows.Forms.TextBox();
            this.label251 = new System.Windows.Forms.Label();
            this.label250 = new System.Windows.Forms.Label();
            this.txtStream1FadingCompensation = new System.Windows.Forms.TextBox();
            this.label249 = new System.Windows.Forms.Label();
            this.label248 = new System.Windows.Forms.Label();
            this.txtStream1CharacterThickness = new System.Windows.Forms.TextBox();
            this.label247 = new System.Windows.Forms.Label();
            this.label246 = new System.Windows.Forms.Label();
            this.txtStream1BackgroundThreshold = new System.Windows.Forms.TextBox();
            this.label245 = new System.Windows.Forms.Label();
            this.label244 = new System.Windows.Forms.Label();
            this.txtStream1DTCSensitivity = new System.Windows.Forms.TextBox();
            this.label243 = new System.Windows.Forms.Label();
            this.label242 = new System.Windows.Forms.Label();
            this.txtStream1Threshold = new System.Windows.Forms.TextBox();
            this.label241 = new System.Windows.Forms.Label();
            this.groupBox17 = new System.Windows.Forms.GroupBox();
            this.cboStream1Sharpness = new System.Windows.Forms.ComboBox();
            this.label240 = new System.Windows.Forms.Label();
            this.cboStream1Background = new System.Windows.Forms.ComboBox();
            this.label238 = new System.Windows.Forms.Label();
            this.label237 = new System.Windows.Forms.Label();
            this.txtStream1CustomGamma = new System.Windows.Forms.TextBox();
            this.label236 = new System.Windows.Forms.Label();
            this.label235 = new System.Windows.Forms.Label();
            this.txtStream1Contrast = new System.Windows.Forms.TextBox();
            this.label234 = new System.Windows.Forms.Label();
            this.label233 = new System.Windows.Forms.Label();
            this.txtStream1Brightness = new System.Windows.Forms.TextBox();
            this.label232 = new System.Windows.Forms.Label();
            this.txtStream1GammaFile = new System.Windows.Forms.TextBox();
            this.cboStream1Gamma = new System.Windows.Forms.ComboBox();
            this.label231 = new System.Windows.Forms.Label();
            this.chkStream1Reverse = new System.Windows.Forms.CheckBox();
            this.label230 = new System.Windows.Forms.Label();
            this.chkStream1AutoBright = new System.Windows.Forms.CheckBox();
            this.label229 = new System.Windows.Forms.Label();
            this.groupBox16 = new System.Windows.Forms.GroupBox();
            this.label437 = new System.Windows.Forms.Label();
            this.txtFileCounter1 = new System.Windows.Forms.TextBox();
            this.label438 = new System.Windows.Forms.Label();
            this.txtFileName1 = new System.Windows.Forms.TextBox();
            this.label439 = new System.Windows.Forms.Label();
            this.cboStream1PixelType = new System.Windows.Forms.ComboBox();
            this.label228 = new System.Windows.Forms.Label();
            this.label227 = new System.Windows.Forms.Label();
            this.txtStream1CustomResolution = new System.Windows.Forms.TextBox();
            this.label226 = new System.Windows.Forms.Label();
            this.cboStream1CompressionType = new System.Windows.Forms.ComboBox();
            this.label225 = new System.Windows.Forms.Label();
            this.cboStream1Resolution = new System.Windows.Forms.ComboBox();
            this.label224 = new System.Windows.Forms.Label();
            this.cboStream1FileType = new System.Windows.Forms.ComboBox();
            this.label223 = new System.Windows.Forms.Label();
            this.Stream2 = new System.Windows.Forms.TabPage();
            this.groupBox27 = new System.Windows.Forms.GroupBox();
            this.chkStream2sRGB = new System.Windows.Forms.CheckBox();
            this.label347 = new System.Windows.Forms.Label();
            this.label348 = new System.Windows.Forms.Label();
            this.txtStream2AdjustRGBB = new System.Windows.Forms.TextBox();
            this.label349 = new System.Windows.Forms.Label();
            this.label350 = new System.Windows.Forms.Label();
            this.txtStream2AdjustRGBG = new System.Windows.Forms.TextBox();
            this.label351 = new System.Windows.Forms.Label();
            this.label352 = new System.Windows.Forms.Label();
            this.txtStream2AdjustRGBR = new System.Windows.Forms.TextBox();
            this.label353 = new System.Windows.Forms.Label();
            this.chkStream2AdjustRGB = new System.Windows.Forms.CheckBox();
            this.label354 = new System.Windows.Forms.Label();
            this.label355 = new System.Windows.Forms.Label();
            this.txtStream2ColorReproductionShadow = new System.Windows.Forms.TextBox();
            this.label356 = new System.Windows.Forms.Label();
            this.label357 = new System.Windows.Forms.Label();
            this.txtStream2ColorReproductionHighlight = new System.Windows.Forms.TextBox();
            this.label358 = new System.Windows.Forms.Label();
            this.label359 = new System.Windows.Forms.Label();
            this.txtStream2ColorReproductionCustomGamma = new System.Windows.Forms.TextBox();
            this.label360 = new System.Windows.Forms.Label();
            this.label361 = new System.Windows.Forms.Label();
            this.txtStream2ColorReproductionContrast = new System.Windows.Forms.TextBox();
            this.label362 = new System.Windows.Forms.Label();
            this.label363 = new System.Windows.Forms.Label();
            this.txtStream2ColorReproductionBrightness = new System.Windows.Forms.TextBox();
            this.label364 = new System.Windows.Forms.Label();
            this.cboStream2ColorReproduction = new System.Windows.Forms.ComboBox();
            this.label365 = new System.Windows.Forms.Label();
            this.groupBox26 = new System.Windows.Forms.GroupBox();
            this.label340 = new System.Windows.Forms.Label();
            this.cboStream2BackgroundSmoothing = new System.Windows.Forms.ComboBox();
            this.label341 = new System.Windows.Forms.Label();
            this.label342 = new System.Windows.Forms.Label();
            this.label343 = new System.Windows.Forms.Label();
            this.txtStream2Shadow = new System.Windows.Forms.TextBox();
            this.txtStream2BackgroundSmoothness = new System.Windows.Forms.TextBox();
            this.label344 = new System.Windows.Forms.Label();
            this.label345 = new System.Windows.Forms.Label();
            this.txtStream2Highlight = new System.Windows.Forms.TextBox();
            this.label346 = new System.Windows.Forms.Label();
            this.groupBox25 = new System.Windows.Forms.GroupBox();
            this.label337 = new System.Windows.Forms.Label();
            this.txtStream2FilterSaturationSensitivity = new System.Windows.Forms.TextBox();
            this.label338 = new System.Windows.Forms.Label();
            this.cboStream2Filter = new System.Windows.Forms.ComboBox();
            this.label339 = new System.Windows.Forms.Label();
            this.groupBox24 = new System.Windows.Forms.GroupBox();
            this.cboStream2SEE = new System.Windows.Forms.ComboBox();
            this.label313 = new System.Windows.Forms.Label();
            this.txtStream2HalftoneFile = new System.Windows.Forms.TextBox();
            this.cboStream2Halftone = new System.Windows.Forms.ComboBox();
            this.label314 = new System.Windows.Forms.Label();
            this.label315 = new System.Windows.Forms.Label();
            this.txtStream2SDTCSensitivity = new System.Windows.Forms.TextBox();
            this.label316 = new System.Windows.Forms.Label();
            this.label317 = new System.Windows.Forms.Label();
            this.txtStream2ADTCThreshold = new System.Windows.Forms.TextBox();
            this.label318 = new System.Windows.Forms.Label();
            this.chkStream2SimpleSlicePatternRemoval = new System.Windows.Forms.CheckBox();
            this.label319 = new System.Windows.Forms.Label();
            this.chkStream2StampRemoval = new System.Windows.Forms.CheckBox();
            this.label320 = new System.Windows.Forms.Label();
            this.chkStream2HalftoneRemoval = new System.Windows.Forms.CheckBox();
            this.label321 = new System.Windows.Forms.Label();
            this.chkStream2ReversedTypeExtraction = new System.Windows.Forms.CheckBox();
            this.label322 = new System.Windows.Forms.Label();
            this.chkStream2CharacterExtraction = new System.Windows.Forms.CheckBox();
            this.label323 = new System.Windows.Forms.Label();
            this.cboStream2PatternRemoval = new System.Windows.Forms.ComboBox();
            this.label324 = new System.Windows.Forms.Label();
            this.label325 = new System.Windows.Forms.Label();
            this.txtStream2NoiseRejection = new System.Windows.Forms.TextBox();
            this.label326 = new System.Windows.Forms.Label();
            this.label327 = new System.Windows.Forms.Label();
            this.txtStream2FadingCompensation = new System.Windows.Forms.TextBox();
            this.label328 = new System.Windows.Forms.Label();
            this.label329 = new System.Windows.Forms.Label();
            this.txtStream2CharacterThickness = new System.Windows.Forms.TextBox();
            this.label330 = new System.Windows.Forms.Label();
            this.label331 = new System.Windows.Forms.Label();
            this.txtStream2BackgroundThreshold = new System.Windows.Forms.TextBox();
            this.label332 = new System.Windows.Forms.Label();
            this.label333 = new System.Windows.Forms.Label();
            this.txtStream2DTCSensitivity = new System.Windows.Forms.TextBox();
            this.label334 = new System.Windows.Forms.Label();
            this.label335 = new System.Windows.Forms.Label();
            this.txtStream2Threshold = new System.Windows.Forms.TextBox();
            this.label336 = new System.Windows.Forms.Label();
            this.groupBox23 = new System.Windows.Forms.GroupBox();
            this.cboStream2Sharpness = new System.Windows.Forms.ComboBox();
            this.label301 = new System.Windows.Forms.Label();
            this.cboStream2Background = new System.Windows.Forms.ComboBox();
            this.label303 = new System.Windows.Forms.Label();
            this.label304 = new System.Windows.Forms.Label();
            this.txtStream2CustomGamma = new System.Windows.Forms.TextBox();
            this.label305 = new System.Windows.Forms.Label();
            this.label306 = new System.Windows.Forms.Label();
            this.txtStream2Contrast = new System.Windows.Forms.TextBox();
            this.label307 = new System.Windows.Forms.Label();
            this.label308 = new System.Windows.Forms.Label();
            this.txtStream2Brightness = new System.Windows.Forms.TextBox();
            this.label309 = new System.Windows.Forms.Label();
            this.txtStream2GammaFile = new System.Windows.Forms.TextBox();
            this.cboStream2Gamma = new System.Windows.Forms.ComboBox();
            this.label310 = new System.Windows.Forms.Label();
            this.chkStream2Reverse = new System.Windows.Forms.CheckBox();
            this.label311 = new System.Windows.Forms.Label();
            this.chkStream2AutoBright = new System.Windows.Forms.CheckBox();
            this.label312 = new System.Windows.Forms.Label();
            this.groupBox22 = new System.Windows.Forms.GroupBox();
            this.label440 = new System.Windows.Forms.Label();
            this.txtFileCounter2 = new System.Windows.Forms.TextBox();
            this.label441 = new System.Windows.Forms.Label();
            this.txtFileName2 = new System.Windows.Forms.TextBox();
            this.label442 = new System.Windows.Forms.Label();
            this.cboStream2PixelType = new System.Windows.Forms.ComboBox();
            this.label295 = new System.Windows.Forms.Label();
            this.label296 = new System.Windows.Forms.Label();
            this.txtStream2CustomResolution = new System.Windows.Forms.TextBox();
            this.label297 = new System.Windows.Forms.Label();
            this.cboStream2CompressionType = new System.Windows.Forms.ComboBox();
            this.label298 = new System.Windows.Forms.Label();
            this.cboStream2Resolution = new System.Windows.Forms.ComboBox();
            this.label299 = new System.Windows.Forms.Label();
            this.cboStream2FileType = new System.Windows.Forms.ComboBox();
            this.label300 = new System.Windows.Forms.Label();
            this.Stream3 = new System.Windows.Forms.TabPage();
            this.groupBox33 = new System.Windows.Forms.GroupBox();
            this.chkStream3sRGB = new System.Windows.Forms.CheckBox();
            this.label418 = new System.Windows.Forms.Label();
            this.label419 = new System.Windows.Forms.Label();
            this.txtStream3AdjustRGBB = new System.Windows.Forms.TextBox();
            this.label420 = new System.Windows.Forms.Label();
            this.label421 = new System.Windows.Forms.Label();
            this.txtStream3AdjustRGBG = new System.Windows.Forms.TextBox();
            this.label422 = new System.Windows.Forms.Label();
            this.label423 = new System.Windows.Forms.Label();
            this.txtStream3AdjustRGBR = new System.Windows.Forms.TextBox();
            this.label424 = new System.Windows.Forms.Label();
            this.chkStream3AdjustRGB = new System.Windows.Forms.CheckBox();
            this.label425 = new System.Windows.Forms.Label();
            this.label426 = new System.Windows.Forms.Label();
            this.txtStream3ColorReproductionShadow = new System.Windows.Forms.TextBox();
            this.label427 = new System.Windows.Forms.Label();
            this.label428 = new System.Windows.Forms.Label();
            this.txtStream3ColorReproductionHighlight = new System.Windows.Forms.TextBox();
            this.label429 = new System.Windows.Forms.Label();
            this.label430 = new System.Windows.Forms.Label();
            this.txtStream3ColorReproductionCustomGamma = new System.Windows.Forms.TextBox();
            this.label431 = new System.Windows.Forms.Label();
            this.label432 = new System.Windows.Forms.Label();
            this.txtStream3ColorReproductionContrast = new System.Windows.Forms.TextBox();
            this.label433 = new System.Windows.Forms.Label();
            this.label434 = new System.Windows.Forms.Label();
            this.txtStream3ColorReproductionBrightness = new System.Windows.Forms.TextBox();
            this.label435 = new System.Windows.Forms.Label();
            this.cboStream3ColorReproduction = new System.Windows.Forms.ComboBox();
            this.label436 = new System.Windows.Forms.Label();
            this.groupBox32 = new System.Windows.Forms.GroupBox();
            this.label411 = new System.Windows.Forms.Label();
            this.cboStream3BackgroundSmoothing = new System.Windows.Forms.ComboBox();
            this.label412 = new System.Windows.Forms.Label();
            this.label413 = new System.Windows.Forms.Label();
            this.label414 = new System.Windows.Forms.Label();
            this.txtStream3Shadow = new System.Windows.Forms.TextBox();
            this.txtStream3BackgroundSmoothness = new System.Windows.Forms.TextBox();
            this.label415 = new System.Windows.Forms.Label();
            this.label416 = new System.Windows.Forms.Label();
            this.txtStream3Highlight = new System.Windows.Forms.TextBox();
            this.label417 = new System.Windows.Forms.Label();
            this.groupBox31 = new System.Windows.Forms.GroupBox();
            this.label408 = new System.Windows.Forms.Label();
            this.txtStream3FilterSaturationSensitivity = new System.Windows.Forms.TextBox();
            this.label409 = new System.Windows.Forms.Label();
            this.cboStream3Filter = new System.Windows.Forms.ComboBox();
            this.label410 = new System.Windows.Forms.Label();
            this.groupBox30 = new System.Windows.Forms.GroupBox();
            this.cboStream3SEE = new System.Windows.Forms.ComboBox();
            this.label384 = new System.Windows.Forms.Label();
            this.txtStream3HalftoneFile = new System.Windows.Forms.TextBox();
            this.cboStream3Halftone = new System.Windows.Forms.ComboBox();
            this.label385 = new System.Windows.Forms.Label();
            this.label386 = new System.Windows.Forms.Label();
            this.txtStream3SDTCSensitivity = new System.Windows.Forms.TextBox();
            this.label387 = new System.Windows.Forms.Label();
            this.label388 = new System.Windows.Forms.Label();
            this.txtStream3ADTCThreshold = new System.Windows.Forms.TextBox();
            this.label389 = new System.Windows.Forms.Label();
            this.chkStream3SimpleSlicePatternRemoval = new System.Windows.Forms.CheckBox();
            this.label390 = new System.Windows.Forms.Label();
            this.chkStream3StampRemoval = new System.Windows.Forms.CheckBox();
            this.label391 = new System.Windows.Forms.Label();
            this.chkStream3HalftoneRemoval = new System.Windows.Forms.CheckBox();
            this.label392 = new System.Windows.Forms.Label();
            this.chkStream3ReversedTypeExtraction = new System.Windows.Forms.CheckBox();
            this.label393 = new System.Windows.Forms.Label();
            this.chkStream3CharacterExtraction = new System.Windows.Forms.CheckBox();
            this.label394 = new System.Windows.Forms.Label();
            this.cboStream3PatternRemoval = new System.Windows.Forms.ComboBox();
            this.label395 = new System.Windows.Forms.Label();
            this.label396 = new System.Windows.Forms.Label();
            this.txtStream3NoiseRejection = new System.Windows.Forms.TextBox();
            this.label397 = new System.Windows.Forms.Label();
            this.label398 = new System.Windows.Forms.Label();
            this.txtStream3FadingCompensation = new System.Windows.Forms.TextBox();
            this.label399 = new System.Windows.Forms.Label();
            this.label400 = new System.Windows.Forms.Label();
            this.txtStream3CharacterThickness = new System.Windows.Forms.TextBox();
            this.label401 = new System.Windows.Forms.Label();
            this.label402 = new System.Windows.Forms.Label();
            this.txtStream3BackgroundThreshold = new System.Windows.Forms.TextBox();
            this.label403 = new System.Windows.Forms.Label();
            this.label404 = new System.Windows.Forms.Label();
            this.txtStream3DTCSensitivity = new System.Windows.Forms.TextBox();
            this.label405 = new System.Windows.Forms.Label();
            this.label406 = new System.Windows.Forms.Label();
            this.txtStream3Threshold = new System.Windows.Forms.TextBox();
            this.label407 = new System.Windows.Forms.Label();
            this.groupBox29 = new System.Windows.Forms.GroupBox();
            this.cboStream3Sharpness = new System.Windows.Forms.ComboBox();
            this.label372 = new System.Windows.Forms.Label();
            this.cboStream3Background = new System.Windows.Forms.ComboBox();
            this.label374 = new System.Windows.Forms.Label();
            this.label375 = new System.Windows.Forms.Label();
            this.txtStream3CustomGamma = new System.Windows.Forms.TextBox();
            this.label376 = new System.Windows.Forms.Label();
            this.label377 = new System.Windows.Forms.Label();
            this.txtStream3Contrast = new System.Windows.Forms.TextBox();
            this.label378 = new System.Windows.Forms.Label();
            this.label379 = new System.Windows.Forms.Label();
            this.txtStream3Brightness = new System.Windows.Forms.TextBox();
            this.label380 = new System.Windows.Forms.Label();
            this.txtStream3GammaFile = new System.Windows.Forms.TextBox();
            this.cboStream3Gamma = new System.Windows.Forms.ComboBox();
            this.label381 = new System.Windows.Forms.Label();
            this.chkStream3Reverse = new System.Windows.Forms.CheckBox();
            this.label382 = new System.Windows.Forms.Label();
            this.chkStream3AutoBright = new System.Windows.Forms.CheckBox();
            this.label383 = new System.Windows.Forms.Label();
            this.groupBox28 = new System.Windows.Forms.GroupBox();
            this.label443 = new System.Windows.Forms.Label();
            this.txtFileCounter3 = new System.Windows.Forms.TextBox();
            this.label444 = new System.Windows.Forms.Label();
            this.txtFileName3 = new System.Windows.Forms.TextBox();
            this.label445 = new System.Windows.Forms.Label();
            this.cboStream3PixelType = new System.Windows.Forms.ComboBox();
            this.label366 = new System.Windows.Forms.Label();
            this.label367 = new System.Windows.Forms.Label();
            this.txtStream3CustomResolution = new System.Windows.Forms.TextBox();
            this.label368 = new System.Windows.Forms.Label();
            this.cboStream3CompressionType = new System.Windows.Forms.ComboBox();
            this.label369 = new System.Windows.Forms.Label();
            this.cboStream3Resolution = new System.Windows.Forms.ComboBox();
            this.label370 = new System.Windows.Forms.Label();
            this.cboStream3FileType = new System.Windows.Forms.ComboBox();
            this.label371 = new System.Windows.Forms.Label();
            this.statusBar1 = new System.Windows.Forms.StatusBar();
            this.mainMenu1 = new System.Windows.Forms.MainMenu(this.components);
            this.MenuItemFile = new System.Windows.Forms.MenuItem();
            this.MenuItemExit = new System.Windows.Forms.MenuItem();
            this.MenuItemScanner = new System.Windows.Forms.MenuItem();
            this.MenuItemStartScan = new System.Windows.Forms.MenuItem();
            this.MenuItemSeparator1 = new System.Windows.Forms.MenuItem();
            this.MenuItemSelectSource = new System.Windows.Forms.MenuItem();
            this.MenuItemSeparator2 = new System.Windows.Forms.MenuItem();
            this.MenuItemClearPage = new System.Windows.Forms.MenuItem();
            this.menuItemSeparator4 = new System.Windows.Forms.MenuItem();
            this.menuItemFeederLoaded = new System.Windows.Forms.MenuItem();
            this.MenuItemOption = new System.Windows.Forms.MenuItem();
            this.MenuItemShowSourceUI = new System.Windows.Forms.MenuItem();
            this.MenuItemCloseSourceUI = new System.Windows.Forms.MenuItem();
            this.MenuItemSourceCurrentScan = new System.Windows.Forms.MenuItem();
            this.MenuItemAutoProfile = new System.Windows.Forms.MenuItem();
            this.MenuItemSilentMode = new System.Windows.Forms.MenuItem();
            this.MenuItemIndicator = new System.Windows.Forms.MenuItem();
            this.MenuItemCarrierSheetClippingMode = new System.Windows.Forms.MenuItem();
            this.MenuItemCarrierSheetClippingModeContent = new System.Windows.Forms.MenuItem();
            this.MenuItemCarrierSheetClippingModeEdge = new System.Windows.Forms.MenuItem();
            this.MenuItemCarrierSheetClippingModeDriverSetting = new System.Windows.Forms.MenuItem();
            this.MenuItemReport = new System.Windows.Forms.MenuItem();
            this.MenuItemReportOFF = new System.Windows.Forms.MenuItem();
            this.MenuItemReportDisplay = new System.Windows.Forms.MenuItem();
            this.MenuItemReportFile = new System.Windows.Forms.MenuItem();
            this.MenuItemReportBoth = new System.Windows.Forms.MenuItem();
            this.MenuItemSeparator3 = new System.Windows.Forms.MenuItem();
            this.MenuItemSIPCTemplate = new System.Windows.Forms.MenuItem();
            this.MenuItemTWAINTemplate = new System.Windows.Forms.MenuItem();
            this.MenuItemSourceList = new System.Windows.Forms.MenuItem();
            this.MenuItemSeparator5 = new System.Windows.Forms.MenuItem();
            this.MenuItemShowEvent = new System.Windows.Forms.MenuItem();
            this.MenuItemOutputResult = new System.Windows.Forms.MenuItem();
            this.MenuItemHelp = new System.Windows.Forms.MenuItem();
            this.MenuItemVersion = new System.Windows.Forms.MenuItem();
            this.ButtonCheckADF = new System.Windows.Forms.Button();
            this.ButtonPSIPDefault = new System.Windows.Forms.Button();
            this.ButtonSerialNo = new System.Windows.Forms.Button();
            this.axFiScn1 = new AxFiScnLib.AxFiScn();
            this.cboMultiStreamDefaultValueMode = new System.Windows.Forms.ComboBox();
            this.label446 = new System.Windows.Forms.Label();
            this.tabControl1.SuspendLayout();
            this.Standard.SuspendLayout();
            this.groupBox3.SuspendLayout();
            this.groupBox2.SuspendLayout();
            this.groupBox1.SuspendLayout();
            this.Image.SuspendLayout();
            this.groupBox5.SuspendLayout();
            this.groupBox4.SuspendLayout();
            this.Image2.SuspendLayout();
            this.groupBox15.SuspendLayout();
            this.Extention.SuspendLayout();
            this.groupBox7.SuspendLayout();
            this.Endorser.SuspendLayout();
            this.groupBox6.SuspendLayout();
            this.groupBox14.SuspendLayout();
            this.Barcode.SuspendLayout();
            this.groupBox8.SuspendLayout();
            this.groupBox9.SuspendLayout();
            this.PatchCode.SuspendLayout();
            this.groupBox10.SuspendLayout();
            this.groupBox11.SuspendLayout();
            this.EdgeFiller.SuspendLayout();
            this.groupBox12.SuspendLayout();
            this.groupBox13.SuspendLayout();
            this.Stream1.SuspendLayout();
            this.groupBox21.SuspendLayout();
            this.groupBox20.SuspendLayout();
            this.groupBox19.SuspendLayout();
            this.groupBox18.SuspendLayout();
            this.groupBox17.SuspendLayout();
            this.groupBox16.SuspendLayout();
            this.Stream2.SuspendLayout();
            this.groupBox27.SuspendLayout();
            this.groupBox26.SuspendLayout();
            this.groupBox25.SuspendLayout();
            this.groupBox24.SuspendLayout();
            this.groupBox23.SuspendLayout();
            this.groupBox22.SuspendLayout();
            this.Stream3.SuspendLayout();
            this.groupBox33.SuspendLayout();
            this.groupBox32.SuspendLayout();
            this.groupBox31.SuspendLayout();
            this.groupBox30.SuspendLayout();
            this.groupBox29.SuspendLayout();
            this.groupBox28.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.axFiScn1)).BeginInit();
            this.SuspendLayout();
            // 
            // ButtonScan
            // 
            this.ButtonScan.Location = new System.Drawing.Point(758, 35);
            this.ButtonScan.Name = "ButtonScan";
            this.ButtonScan.Size = new System.Drawing.Size(102, 24);
            this.ButtonScan.TabIndex = 0;
            this.ButtonScan.Text = "Scan";
            this.ButtonScan.Click += new System.EventHandler(this.ButtonScan_Click);
            // 
            // ButtonExit
            // 
            this.ButtonExit.DialogResult = System.Windows.Forms.DialogResult.Cancel;
            this.ButtonExit.Location = new System.Drawing.Point(758, 69);
            this.ButtonExit.Name = "ButtonExit";
            this.ButtonExit.Size = new System.Drawing.Size(102, 24);
            this.ButtonExit.TabIndex = 1;
            this.ButtonExit.Text = "Exit";
            this.ButtonExit.Click += new System.EventHandler(this.ButtonExit_Click);
            // 
            // ButtonReset
            // 
            this.ButtonReset.Location = new System.Drawing.Point(758, 128);
            this.ButtonReset.Name = "ButtonReset";
            this.ButtonReset.Size = new System.Drawing.Size(102, 24);
            this.ButtonReset.TabIndex = 2;
            this.ButtonReset.Text = "Reset";
            this.ButtonReset.Click += new System.EventHandler(this.ButtonReset_Click);
            // 
            // tabControl1
            // 
            this.tabControl1.Controls.Add(this.Standard);
            this.tabControl1.Controls.Add(this.Image);
            this.tabControl1.Controls.Add(this.Image2);
            this.tabControl1.Controls.Add(this.Extention);
            this.tabControl1.Controls.Add(this.Endorser);
            this.tabControl1.Controls.Add(this.Barcode);
            this.tabControl1.Controls.Add(this.PatchCode);
            this.tabControl1.Controls.Add(this.EdgeFiller);
            this.tabControl1.Controls.Add(this.Stream1);
            this.tabControl1.Controls.Add(this.Stream2);
            this.tabControl1.Controls.Add(this.Stream3);
            this.tabControl1.Location = new System.Drawing.Point(8, 16);
            this.tabControl1.Name = "tabControl1";
            this.tabControl1.SelectedIndex = 0;
            this.tabControl1.Size = new System.Drawing.Size(736, 621);
            this.tabControl1.TabIndex = 6;
            // 
            // Standard
            // 
            this.Standard.Controls.Add(this.groupBox3);
            this.Standard.Controls.Add(this.groupBox2);
            this.Standard.Controls.Add(this.groupBox1);
            this.Standard.Location = new System.Drawing.Point(4, 22);
            this.Standard.Name = "Standard";
            this.Standard.Size = new System.Drawing.Size(728, 595);
            this.Standard.TabIndex = 0;
            this.Standard.Text = "Standard";
            // 
            // groupBox3
            // 
            this.groupBox3.Controls.Add(this.label160);
            this.groupBox3.Controls.Add(this.txtBackgroundSmoothness);
            this.groupBox3.Controls.Add(this.cboBackgroundSmoothing);
            this.groupBox3.Controls.Add(this.chkAutomaticSenseMedium);
            this.groupBox3.Controls.Add(this.label122);
            this.groupBox3.Controls.Add(this.label72);
            this.groupBox3.Controls.Add(this.cboUnit);
            this.groupBox3.Controls.Add(this.txtRegionLength);
            this.groupBox3.Controls.Add(this.txtRegionWidth);
            this.groupBox3.Controls.Add(this.txtRegionTop);
            this.groupBox3.Controls.Add(this.txtRegionLeft);
            this.groupBox3.Controls.Add(this.txtCustomPaperLength);
            this.groupBox3.Controls.Add(this.txtCustomPaperWidth);
            this.groupBox3.Controls.Add(this.cboBackgroundColor);
            this.groupBox3.Controls.Add(this.cboOrientation);
            this.groupBox3.Controls.Add(this.cboPaperSize);
            this.groupBox3.Controls.Add(this.chkUndefinedScanning);
            this.groupBox3.Controls.Add(this.chkLongPage);
            this.groupBox3.Controls.Add(this.cboPaperSupply);
            this.groupBox3.Controls.Add(this.txtScanCount);
            this.groupBox3.Controls.Add(this.label32);
            this.groupBox3.Controls.Add(this.label31);
            this.groupBox3.Controls.Add(this.label30);
            this.groupBox3.Controls.Add(this.label29);
            this.groupBox3.Controls.Add(this.label27);
            this.groupBox3.Controls.Add(this.label28);
            this.groupBox3.Controls.Add(this.label26);
            this.groupBox3.Controls.Add(this.label23);
            this.groupBox3.Controls.Add(this.label24);
            this.groupBox3.Controls.Add(this.label22);
            this.groupBox3.Controls.Add(this.label25);
            this.groupBox3.Controls.Add(this.label21);
            this.groupBox3.Controls.Add(this.label20);
            this.groupBox3.Controls.Add(this.label19);
            this.groupBox3.Controls.Add(this.label17);
            this.groupBox3.Controls.Add(this.label18);
            this.groupBox3.Controls.Add(this.label16);
            this.groupBox3.Controls.Add(this.label15);
            this.groupBox3.Controls.Add(this.label14);
            this.groupBox3.Controls.Add(this.label13);
            this.groupBox3.Controls.Add(this.label123);
            this.groupBox3.Controls.Add(this.label124);
            this.groupBox3.Location = new System.Drawing.Point(8, 314);
            this.groupBox3.Name = "groupBox3";
            this.groupBox3.Size = new System.Drawing.Size(711, 189);
            this.groupBox3.TabIndex = 2;
            this.groupBox3.TabStop = false;
            // 
            // label160
            // 
            this.label160.Location = new System.Drawing.Point(624, 134);
            this.label160.Name = "label160";
            this.label160.Size = new System.Drawing.Size(43, 16);
            this.label160.TabIndex = 35;
            this.label160.Text = "(0-10)";
            // 
            // txtBackgroundSmoothness
            // 
            this.txtBackgroundSmoothness.Location = new System.Drawing.Point(586, 131);
            this.txtBackgroundSmoothness.MaxLength = 2;
            this.txtBackgroundSmoothness.Name = "txtBackgroundSmoothness";
            this.txtBackgroundSmoothness.Size = new System.Drawing.Size(36, 19);
            this.txtBackgroundSmoothness.TabIndex = 34;
            this.txtBackgroundSmoothness.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtBackgroundSmoothness.TextChanged += new System.EventHandler(this.txtBackgroundSmoothness_TextChanged);
            // 
            // cboBackgroundSmoothing
            // 
            this.cboBackgroundSmoothing.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboBackgroundSmoothing.Items.AddRange(new object[] {
            "None",
            "Automatic",
            "White"});
            this.cboBackgroundSmoothing.Location = new System.Drawing.Point(586, 108);
            this.cboBackgroundSmoothing.MaxDropDownItems = 3;
            this.cboBackgroundSmoothing.Name = "cboBackgroundSmoothing";
            this.cboBackgroundSmoothing.Size = new System.Drawing.Size(86, 20);
            this.cboBackgroundSmoothing.TabIndex = 26;
            // 
            // chkAutomaticSenseMedium
            // 
            this.chkAutomaticSenseMedium.Location = new System.Drawing.Point(586, 89);
            this.chkAutomaticSenseMedium.Name = "chkAutomaticSenseMedium";
            this.chkAutomaticSenseMedium.Size = new System.Drawing.Size(17, 15);
            this.chkAutomaticSenseMedium.TabIndex = 18;
            // 
            // label122
            // 
            this.label122.Location = new System.Drawing.Point(457, 90);
            this.label122.Name = "label122";
            this.label122.Size = new System.Drawing.Size(130, 16);
            this.label122.TabIndex = 17;
            this.label122.Text = "AutomaticSenseMedium";
            // 
            // label72
            // 
            this.label72.Location = new System.Drawing.Point(457, 19);
            this.label72.Name = "label72";
            this.label72.Size = new System.Drawing.Size(64, 14);
            this.label72.TabIndex = 3;
            this.label72.Text = "Unit";
            // 
            // cboUnit
            // 
            this.cboUnit.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboUnit.Items.AddRange(new object[] {
            "Inches",
            "Centimeters",
            "Pixels"});
            this.cboUnit.Location = new System.Drawing.Point(586, 17);
            this.cboUnit.Name = "cboUnit";
            this.cboUnit.Size = new System.Drawing.Size(120, 20);
            this.cboUnit.TabIndex = 4;
            this.cboUnit.SelectedIndexChanged += new System.EventHandler(this.cboUnit_SelectedIndexChanged);
            // 
            // txtRegionLength
            // 
            this.txtRegionLength.Location = new System.Drawing.Point(372, 152);
            this.txtRegionLength.MaxLength = 8;
            this.txtRegionLength.Name = "txtRegionLength";
            this.txtRegionLength.Size = new System.Drawing.Size(45, 19);
            this.txtRegionLength.TabIndex = 40;
            this.txtRegionLength.Text = "0";
            this.txtRegionLength.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtRegionLength.TextChanged += new System.EventHandler(this.txtRegionLength_TextChanged);
            // 
            // txtRegionWidth
            // 
            this.txtRegionWidth.Location = new System.Drawing.Point(113, 153);
            this.txtRegionWidth.MaxLength = 8;
            this.txtRegionWidth.Name = "txtRegionWidth";
            this.txtRegionWidth.Size = new System.Drawing.Size(45, 19);
            this.txtRegionWidth.TabIndex = 37;
            this.txtRegionWidth.Text = "0";
            this.txtRegionWidth.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtRegionWidth.TextChanged += new System.EventHandler(this.txtRegionWidth_TextChanged);
            // 
            // txtRegionTop
            // 
            this.txtRegionTop.Location = new System.Drawing.Point(372, 131);
            this.txtRegionTop.MaxLength = 8;
            this.txtRegionTop.Name = "txtRegionTop";
            this.txtRegionTop.Size = new System.Drawing.Size(45, 19);
            this.txtRegionTop.TabIndex = 31;
            this.txtRegionTop.Text = "0";
            this.txtRegionTop.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtRegionTop.TextChanged += new System.EventHandler(this.txtRegionTop_TextChanged);
            // 
            // txtRegionLeft
            // 
            this.txtRegionLeft.Location = new System.Drawing.Point(113, 132);
            this.txtRegionLeft.MaxLength = 8;
            this.txtRegionLeft.Name = "txtRegionLeft";
            this.txtRegionLeft.Size = new System.Drawing.Size(45, 19);
            this.txtRegionLeft.TabIndex = 28;
            this.txtRegionLeft.Text = "0";
            this.txtRegionLeft.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtRegionLeft.TextChanged += new System.EventHandler(this.txtRegionLeft_TextChanged);
            // 
            // txtCustomPaperLength
            // 
            this.txtCustomPaperLength.Location = new System.Drawing.Point(372, 109);
            this.txtCustomPaperLength.MaxLength = 8;
            this.txtCustomPaperLength.Name = "txtCustomPaperLength";
            this.txtCustomPaperLength.Size = new System.Drawing.Size(45, 19);
            this.txtCustomPaperLength.TabIndex = 23;
            this.txtCustomPaperLength.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtCustomPaperLength.TextChanged += new System.EventHandler(this.txtCustomPaperLength_TextChanged);
            // 
            // txtCustomPaperWidth
            // 
            this.txtCustomPaperWidth.Location = new System.Drawing.Point(113, 109);
            this.txtCustomPaperWidth.MaxLength = 8;
            this.txtCustomPaperWidth.Name = "txtCustomPaperWidth";
            this.txtCustomPaperWidth.Size = new System.Drawing.Size(45, 19);
            this.txtCustomPaperWidth.TabIndex = 20;
            this.txtCustomPaperWidth.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtCustomPaperWidth.TextChanged += new System.EventHandler(this.txtCustomPaperWidth_TextChanged);
            // 
            // cboBackgroundColor
            // 
            this.cboBackgroundColor.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboBackgroundColor.Items.AddRange(new object[] {
            "OFF",
            "ON"});
            this.cboBackgroundColor.Location = new System.Drawing.Point(372, 86);
            this.cboBackgroundColor.Name = "cboBackgroundColor";
            this.cboBackgroundColor.Size = new System.Drawing.Size(64, 20);
            this.cboBackgroundColor.TabIndex = 16;
            // 
            // cboOrientation
            // 
            this.cboOrientation.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboOrientation.Items.AddRange(new object[] {
            "Portrait",
            "Landscape"});
            this.cboOrientation.Location = new System.Drawing.Point(113, 85);
            this.cboOrientation.Name = "cboOrientation";
            this.cboOrientation.Size = new System.Drawing.Size(105, 20);
            this.cboOrientation.TabIndex = 14;
            this.cboOrientation.SelectedIndexChanged += new System.EventHandler(this.cboOrientation_SelectedIndexChanged);
            // 
            // cboPaperSize
            // 
            this.cboPaperSize.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboPaperSize.Items.AddRange(new object[] {
            "A3(297x420mm)",
            "A4(210x297mm)",
            "A5(148x210mm)",
            "A6(105x148mm)",
            "B4(JIS)(257x364mm)",
            "B5(JIS)(182x257mm)",
            "B6(JIS)(128x182mm)",
            "Letter(8.5x11inch)",
            "Legal(8.5x14inch)",
            "Executive(7.25x10.5inch)",
            "Double Letter(11x17inch)",
            "PostCard(100x149mm)",
            "Photo(89x127mm)",
            "Card(55x91mm)",
            "Custom",
            "C4(229x324mm)",
            "C5(162x229mm)",
            "C6(114x162mm)",
            "B4(ISO)(250x353mm)",
            "B5(ISO)(176x250mm)",
            "B6(ISO)(125x176mm)",
            "8.5 x 17inch",
            "8.5 x 34inch",
            "8.5 x 106.3inch",
            "8.5 x 125inch",
            "8.5 x 160inch",
            "8.5 x 215inch",
            "8.5 x 220inch",
            "11.7 x 17inch",
            "11.7 x 34inch",
            "12 x 17inch",
            "12 x 34inch",
            "12 x 125inch",
            "MaxSize",
            "12 x 106.3inch",
            "12 x 160inch",
            "12 x 215inch",
            "12 x 220inch",
            "8.5 x 240inch"});
            this.cboPaperSize.Location = new System.Drawing.Point(113, 63);
            this.cboPaperSize.MaxDropDownItems = 20;
            this.cboPaperSize.Name = "cboPaperSize";
            this.cboPaperSize.Size = new System.Drawing.Size(194, 20);
            this.cboPaperSize.TabIndex = 8;
            this.cboPaperSize.SelectedIndexChanged += new System.EventHandler(this.cboPaperSize_SelectedIndexChanged);
            // 
            // chkUndefinedScanning
            // 
            this.chkUndefinedScanning.Location = new System.Drawing.Point(422, 66);
            this.chkUndefinedScanning.Name = "chkUndefinedScanning";
            this.chkUndefinedScanning.Size = new System.Drawing.Size(17, 15);
            this.chkUndefinedScanning.TabIndex = 10;
            // 
            // chkLongPage
            // 
            this.chkLongPage.Location = new System.Drawing.Point(586, 66);
            this.chkLongPage.Name = "chkLongPage";
            this.chkLongPage.Size = new System.Drawing.Size(17, 15);
            this.chkLongPage.TabIndex = 12;
            // 
            // cboPaperSupply
            // 
            this.cboPaperSupply.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboPaperSupply.Items.AddRange(new object[] {
            "Flatbed",
            "ADF",
            "ADF(Duplex)",
            "ADF(BackSide)",
            "ADF(CarrierSheet Spread A3)",
            "ADF(CarrierSheet Spread DL)",
            "ADF(CarrierSheet Spread B4)",
            "ADF(CarrierSheet Clipping)",
            "ADF(CarrierSheet Spread A3)",
            "ADF(CarrierSheet Spread DL)",
            "ADF(CarrierSheet Spread B4)",
            "ADF(CarrierSheet Spread Auto)",
            "ADF(CarrierSheet Clipping All)",
            "ADF(CarrierSheet Clipping A4)",
            "ADF(CarrierSheet Clipping A5)",
            "ADF(CarrierSheet Clipping A6)",
            "ADF(CarrierSheet Clipping POST)",
            "ADF(CarrierSheet Clipping B5)",
            "ADF(CarrierSheet Clipping B6)",
            "ADF(CarrierSheet Clipping LT)",
            "ADF(CarrierSheet Clipping CARD_T)",
            "ADF(CarrierSheet Clipping CARD_Y)",
            "ADF(CarrierSheet Clipping PHOTO_ET)",
            "ADF(CarrierSheet Clipping PHOTO_EY)",
            "ADF(CarrierSheet Clipping PHOTO_LT)",
            "ADF(CarrierSheet Clipping PHOTO_LY)",
            "ADF(CarrierSheet Clipping PHOTO_LLT)",
            "ADF(CarrierSheet Clipping PHOTO_LLY)",
            "ADF(CarrierSheet Clipping Auto)",
            "ADF(CarrierSheet Clipping Custom)",
            "ADF(CarrierSheet Clipping Duplex All)",
            "ADF(CarrierSheet Clipping Duplex A4)",
            "ADF(CarrierSheet Clipping Duplex A5)",
            "ADF(CarrierSheet Clipping Duplex A6)",
            "ADF(CarrierSheet Clipping Duplex POST)",
            "ADF(CarrierSheet Clipping Duplex B5)",
            "ADF(CarrierSheet Clipping Duplex B6)",
            "ADF(CarrierSheet Clipping Duplex LT)",
            "ADF(CarrierSheet Clipping Duplex CARD_T)",
            "ADF(CarrierSheet Clipping Duplex CARD_Y)",
            "ADF(CarrierSheet Clipping Duplex PHOTO_ET)",
            "ADF(CarrierSheet Clipping Duplex PHOTO_EY)",
            "ADF(CarrierSheet Clipping Duplex PHOTO_LT)",
            "ADF(CarrierSheet Clipping Duplex PHOTO_LY)",
            "ADF(CarrierSheet Clipping Duplex PHOTO_LLT)",
            "ADF(CarrierSheet Clipping Duplex PHOTO_LLY)",
            "ADF(CarrierSheet Clipping Duplex Auto)",
            "ADF(CarrierSheet Clipping Duplex Custom)"});
            this.cboPaperSupply.Location = new System.Drawing.Point(113, 40);
            this.cboPaperSupply.MaxDropDownItems = 20;
            this.cboPaperSupply.Name = "cboPaperSupply";
            this.cboPaperSupply.Size = new System.Drawing.Size(300, 20);
            this.cboPaperSupply.TabIndex = 6;
            this.cboPaperSupply.SelectedIndexChanged += new System.EventHandler(this.cboPaperSupply_SelectedIndexChanged);
            // 
            // txtScanCount
            // 
            this.txtScanCount.Location = new System.Drawing.Point(113, 17);
            this.txtScanCount.MaxLength = 5;
            this.txtScanCount.Name = "txtScanCount";
            this.txtScanCount.Size = new System.Drawing.Size(45, 19);
            this.txtScanCount.TabIndex = 1;
            this.txtScanCount.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtScanCount.TextChanged += new System.EventHandler(this.txtScanCount_TextChanged);
            // 
            // label32
            // 
            this.label32.Location = new System.Drawing.Point(8, 155);
            this.label32.Name = "label32";
            this.label32.Size = new System.Drawing.Size(106, 16);
            this.label32.TabIndex = 36;
            this.label32.Text = "RegionWidth";
            // 
            // label31
            // 
            this.label31.Location = new System.Drawing.Point(163, 156);
            this.label31.Name = "label31";
            this.label31.Size = new System.Drawing.Size(36, 16);
            this.label31.TabIndex = 38;
            this.label31.Text = "inch";
            // 
            // label30
            // 
            this.label30.Location = new System.Drawing.Point(262, 154);
            this.label30.Name = "label30";
            this.label30.Size = new System.Drawing.Size(106, 16);
            this.label30.TabIndex = 39;
            this.label30.Text = "RegionLength";
            // 
            // label29
            // 
            this.label29.Location = new System.Drawing.Point(422, 155);
            this.label29.Name = "label29";
            this.label29.Size = new System.Drawing.Size(36, 16);
            this.label29.TabIndex = 41;
            this.label29.Text = "inch";
            // 
            // label27
            // 
            this.label27.Location = new System.Drawing.Point(422, 134);
            this.label27.Name = "label27";
            this.label27.Size = new System.Drawing.Size(36, 16);
            this.label27.TabIndex = 32;
            this.label27.Text = "inch";
            // 
            // label28
            // 
            this.label28.Location = new System.Drawing.Point(262, 133);
            this.label28.Name = "label28";
            this.label28.Size = new System.Drawing.Size(106, 16);
            this.label28.TabIndex = 30;
            this.label28.Text = "RegionTop";
            // 
            // label26
            // 
            this.label26.Location = new System.Drawing.Point(163, 135);
            this.label26.Name = "label26";
            this.label26.Size = new System.Drawing.Size(36, 16);
            this.label26.TabIndex = 29;
            this.label26.Text = "inch";
            // 
            // label23
            // 
            this.label23.Location = new System.Drawing.Point(422, 112);
            this.label23.Name = "label23";
            this.label23.Size = new System.Drawing.Size(36, 16);
            this.label23.TabIndex = 24;
            this.label23.Text = "inch";
            // 
            // label24
            // 
            this.label24.Location = new System.Drawing.Point(262, 112);
            this.label24.Name = "label24";
            this.label24.Size = new System.Drawing.Size(112, 16);
            this.label24.TabIndex = 22;
            this.label24.Text = "CustomPaperLength";
            // 
            // label22
            // 
            this.label22.Location = new System.Drawing.Point(163, 113);
            this.label22.Name = "label22";
            this.label22.Size = new System.Drawing.Size(36, 16);
            this.label22.TabIndex = 21;
            this.label22.Text = "inch";
            // 
            // label25
            // 
            this.label25.Location = new System.Drawing.Point(8, 134);
            this.label25.Name = "label25";
            this.label25.Size = new System.Drawing.Size(106, 16);
            this.label25.TabIndex = 27;
            this.label25.Text = "RegionLeft";
            // 
            // label21
            // 
            this.label21.Location = new System.Drawing.Point(8, 112);
            this.label21.Name = "label21";
            this.label21.Size = new System.Drawing.Size(106, 16);
            this.label21.TabIndex = 19;
            this.label21.Text = "CustomPaperWidth";
            // 
            // label20
            // 
            this.label20.Location = new System.Drawing.Point(262, 90);
            this.label20.Name = "label20";
            this.label20.Size = new System.Drawing.Size(97, 16);
            this.label20.TabIndex = 15;
            this.label20.Text = "BackgroundColor";
            // 
            // label19
            // 
            this.label19.Location = new System.Drawing.Point(8, 89);
            this.label19.Name = "label19";
            this.label19.Size = new System.Drawing.Size(85, 16);
            this.label19.TabIndex = 13;
            this.label19.Text = "Orientation";
            // 
            // label17
            // 
            this.label17.Location = new System.Drawing.Point(312, 66);
            this.label17.Name = "label17";
            this.label17.Size = new System.Drawing.Size(105, 16);
            this.label17.TabIndex = 9;
            this.label17.Text = "UndefinedScanning";
            // 
            // label18
            // 
            this.label18.Location = new System.Drawing.Point(8, 66);
            this.label18.Name = "label18";
            this.label18.Size = new System.Drawing.Size(85, 16);
            this.label18.TabIndex = 7;
            this.label18.Text = "PaperSize";
            // 
            // label16
            // 
            this.label16.Location = new System.Drawing.Point(457, 67);
            this.label16.Name = "label16";
            this.label16.Size = new System.Drawing.Size(60, 16);
            this.label16.TabIndex = 11;
            this.label16.Text = "LongPage";
            // 
            // label15
            // 
            this.label15.Location = new System.Drawing.Point(8, 42);
            this.label15.Name = "label15";
            this.label15.Size = new System.Drawing.Size(85, 16);
            this.label15.TabIndex = 5;
            this.label15.Text = "PaperSupply";
            // 
            // label14
            // 
            this.label14.Location = new System.Drawing.Point(162, 21);
            this.label14.Name = "label14";
            this.label14.Size = new System.Drawing.Size(76, 16);
            this.label14.TabIndex = 2;
            this.label14.Text = "(-1, 1-32767)";
            // 
            // label13
            // 
            this.label13.Location = new System.Drawing.Point(8, 19);
            this.label13.Name = "label13";
            this.label13.Size = new System.Drawing.Size(85, 16);
            this.label13.TabIndex = 0;
            this.label13.Text = "ScanCount";
            // 
            // label123
            // 
            this.label123.Location = new System.Drawing.Point(457, 112);
            this.label123.Name = "label123";
            this.label123.Size = new System.Drawing.Size(126, 16);
            this.label123.TabIndex = 25;
            this.label123.Text = "BackgroundSmoothing";
            // 
            // label124
            // 
            this.label124.Location = new System.Drawing.Point(457, 135);
            this.label124.Name = "label124";
            this.label124.Size = new System.Drawing.Size(133, 16);
            this.label124.TabIndex = 33;
            this.label124.Text = "BackgroundSmoothness";
            // 
            // groupBox2
            // 
            this.groupBox2.Controls.Add(this.cboAutomaticColorBackground);
            this.groupBox2.Controls.Add(this.label185);
            this.groupBox2.Controls.Add(this.label173);
            this.groupBox2.Controls.Add(this.txtAutomaticColorSensitivity);
            this.groupBox2.Controls.Add(this.label172);
            this.groupBox2.Controls.Add(this.chkAutoBright);
            this.groupBox2.Controls.Add(this.label121);
            this.groupBox2.Controls.Add(this.txtCustomResolution);
            this.groupBox2.Controls.Add(this.cboResolution);
            this.groupBox2.Controls.Add(this.cboPixelType);
            this.groupBox2.Controls.Add(this.label12);
            this.groupBox2.Controls.Add(this.label11);
            this.groupBox2.Controls.Add(this.label10);
            this.groupBox2.Controls.Add(this.label9);
            this.groupBox2.Location = new System.Drawing.Point(8, 191);
            this.groupBox2.Name = "groupBox2";
            this.groupBox2.Size = new System.Drawing.Size(711, 117);
            this.groupBox2.TabIndex = 1;
            this.groupBox2.TabStop = false;
            // 
            // cboAutomaticColorBackground
            // 
            this.cboAutomaticColorBackground.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboAutomaticColorBackground.FormattingEnabled = true;
            this.cboAutomaticColorBackground.Items.AddRange(new object[] {
            "Include Backgroud Color",
            "Ignore Backgroud Color"});
            this.cboAutomaticColorBackground.Location = new System.Drawing.Point(164, 90);
            this.cboAutomaticColorBackground.Name = "cboAutomaticColorBackground";
            this.cboAutomaticColorBackground.Size = new System.Drawing.Size(173, 20);
            this.cboAutomaticColorBackground.TabIndex = 13;
            // 
            // label185
            // 
            this.label185.AutoSize = true;
            this.label185.Location = new System.Drawing.Point(8, 91);
            this.label185.Name = "label185";
            this.label185.Size = new System.Drawing.Size(144, 12);
            this.label185.TabIndex = 12;
            this.label185.Text = "AutomaticColorBackground";
            // 
            // label173
            // 
            this.label173.Location = new System.Drawing.Point(202, 68);
            this.label173.Name = "label173";
            this.label173.Size = new System.Drawing.Size(63, 19);
            this.label173.TabIndex = 11;
            this.label173.Text = "(-7 - 7)";
            // 
            // txtAutomaticColorSensitivity
            // 
            this.txtAutomaticColorSensitivity.Location = new System.Drawing.Point(164, 65);
            this.txtAutomaticColorSensitivity.MaxLength = 2;
            this.txtAutomaticColorSensitivity.Name = "txtAutomaticColorSensitivity";
            this.txtAutomaticColorSensitivity.Size = new System.Drawing.Size(36, 19);
            this.txtAutomaticColorSensitivity.TabIndex = 10;
            this.txtAutomaticColorSensitivity.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtAutomaticColorSensitivity.TextChanged += new System.EventHandler(this.txtAutomaticColorSensitivity_TextChanged);
            // 
            // label172
            // 
            this.label172.AutoSize = true;
            this.label172.Location = new System.Drawing.Point(8, 67);
            this.label172.Name = "label172";
            this.label172.Size = new System.Drawing.Size(138, 12);
            this.label172.TabIndex = 9;
            this.label172.Text = "AutomaticColorSensitivity";
            // 
            // chkAutoBright
            // 
            this.chkAutoBright.Location = new System.Drawing.Point(422, 16);
            this.chkAutoBright.Name = "chkAutoBright";
            this.chkAutoBright.Size = new System.Drawing.Size(17, 15);
            this.chkAutoBright.TabIndex = 3;
            // 
            // label121
            // 
            this.label121.Location = new System.Drawing.Point(311, 16);
            this.label121.Name = "label121";
            this.label121.Size = new System.Drawing.Size(105, 16);
            this.label121.TabIndex = 2;
            this.label121.Text = "AutoBright";
            // 
            // txtCustomResolution
            // 
            this.txtCustomResolution.Location = new System.Drawing.Point(422, 35);
            this.txtCustomResolution.MaxLength = 4;
            this.txtCustomResolution.Name = "txtCustomResolution";
            this.txtCustomResolution.Size = new System.Drawing.Size(45, 19);
            this.txtCustomResolution.TabIndex = 7;
            this.txtCustomResolution.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtCustomResolution.TextChanged += new System.EventHandler(this.txtCustomResolution_TextChanged);
            // 
            // cboResolution
            // 
            this.cboResolution.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboResolution.Items.AddRange(new object[] {
            "200dpi",
            "240dpi",
            "300dpi",
            "400dpi",
            "500dpi",
            "600dpi",
            "700dpi",
            "800dpi",
            "1200dpi",
            "Custom"});
            this.cboResolution.Location = new System.Drawing.Point(113, 37);
            this.cboResolution.MaxDropDownItems = 10;
            this.cboResolution.Name = "cboResolution";
            this.cboResolution.Size = new System.Drawing.Size(105, 20);
            this.cboResolution.TabIndex = 5;
            this.cboResolution.SelectedIndexChanged += new System.EventHandler(this.cboResolution_SelectedIndexChanged);
            // 
            // cboPixelType
            // 
            this.cboPixelType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboPixelType.Items.AddRange(new object[] {
            "Black&White",
            "Grayscale",
            "RGB",
            "Automatic",
            "SwitchByCodeSheet"});
            this.cboPixelType.Location = new System.Drawing.Point(113, 13);
            this.cboPixelType.MaxDropDownItems = 5;
            this.cboPixelType.Name = "cboPixelType";
            this.cboPixelType.Size = new System.Drawing.Size(194, 20);
            this.cboPixelType.TabIndex = 1;
            this.cboPixelType.SelectedIndexChanged += new System.EventHandler(this.cboPixelType_SelectedIndexChanged);
            // 
            // label12
            // 
            this.label12.Location = new System.Drawing.Point(472, 39);
            this.label12.Name = "label12";
            this.label12.Size = new System.Drawing.Size(76, 16);
            this.label12.TabIndex = 8;
            this.label12.Text = "(50-600dpi)";
            // 
            // label11
            // 
            this.label11.Location = new System.Drawing.Point(312, 39);
            this.label11.Name = "label11";
            this.label11.Size = new System.Drawing.Size(110, 16);
            this.label11.TabIndex = 6;
            this.label11.Text = "CustomResolution";
            // 
            // label10
            // 
            this.label10.Location = new System.Drawing.Point(8, 40);
            this.label10.Name = "label10";
            this.label10.Size = new System.Drawing.Size(85, 16);
            this.label10.TabIndex = 4;
            this.label10.Text = "Resolution";
            // 
            // label9
            // 
            this.label9.Location = new System.Drawing.Point(8, 17);
            this.label9.Name = "label9";
            this.label9.Size = new System.Drawing.Size(85, 16);
            this.label9.TabIndex = 0;
            this.label9.Text = "PixelType";
            // 
            // groupBox1
            // 
            this.groupBox1.Controls.Add(this.cboMultiStreamDefaultValueMode);
            this.groupBox1.Controls.Add(this.label446);
            this.groupBox1.Controls.Add(this.cboMultiStreamFileNameMode);
            this.groupBox1.Controls.Add(this.label373);
            this.groupBox1.Controls.Add(this.cboMultiStreamMode);
            this.groupBox1.Controls.Add(this.label259);
            this.groupBox1.Controls.Add(this.cboScanContinueMode);
            this.groupBox1.Controls.Add(this.label183);
            this.groupBox1.Controls.Add(this.label169);
            this.groupBox1.Controls.Add(this.chkScanContinue);
            this.groupBox1.Controls.Add(this.cboScanMode);
            this.groupBox1.Controls.Add(this.label40);
            this.groupBox1.Controls.Add(this.cboJpegQuality);
            this.groupBox1.Controls.Add(this.cboCompType);
            this.groupBox1.Controls.Add(this.txtFileCounter);
            this.groupBox1.Controls.Add(this.cboOverwrite);
            this.groupBox1.Controls.Add(this.txtFileName);
            this.groupBox1.Controls.Add(this.cboFileType);
            this.groupBox1.Controls.Add(this.cboScanTo);
            this.groupBox1.Controls.Add(this.label8);
            this.groupBox1.Controls.Add(this.label6);
            this.groupBox1.Controls.Add(this.label5);
            this.groupBox1.Controls.Add(this.label7);
            this.groupBox1.Controls.Add(this.label4);
            this.groupBox1.Controls.Add(this.label3);
            this.groupBox1.Controls.Add(this.label2);
            this.groupBox1.Controls.Add(this.label1);
            this.groupBox1.Location = new System.Drawing.Point(8, 8);
            this.groupBox1.Name = "groupBox1";
            this.groupBox1.Size = new System.Drawing.Size(711, 183);
            this.groupBox1.TabIndex = 0;
            this.groupBox1.TabStop = false;
            // 
            // cboMultiStreamDefaultValueMode
            // 
            this.cboMultiStreamDefaultValueMode.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboMultiStreamDefaultValueMode.Items.AddRange(new object[] {
            "OFF",
            "ON"});
            this.cboMultiStreamDefaultValueMode.Location = new System.Drawing.Point(477, 152);
            this.cboMultiStreamDefaultValueMode.MaxDropDownItems = 2;
            this.cboMultiStreamDefaultValueMode.Name = "cboMultiStreamDefaultValueMode";
            this.cboMultiStreamDefaultValueMode.Size = new System.Drawing.Size(146, 20);
            this.cboMultiStreamDefaultValueMode.TabIndex = 26;
            // 
            // label446
            // 
            this.label446.Location = new System.Drawing.Point(312, 155);
            this.label446.Name = "label446";
            this.label446.Size = new System.Drawing.Size(166, 16);
            this.label446.TabIndex = 25;
            this.label446.Text = "MultiStreamDefaultValueMode";
            // 
            // cboMultiStreamFileNameMode
            // 
            this.cboMultiStreamFileNameMode.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboMultiStreamFileNameMode.Items.AddRange(new object[] {
            "OFF",
            "ON"});
            this.cboMultiStreamFileNameMode.Location = new System.Drawing.Point(461, 129);
            this.cboMultiStreamFileNameMode.MaxDropDownItems = 2;
            this.cboMultiStreamFileNameMode.Name = "cboMultiStreamFileNameMode";
            this.cboMultiStreamFileNameMode.Size = new System.Drawing.Size(146, 20);
            this.cboMultiStreamFileNameMode.TabIndex = 24;
            // 
            // label373
            // 
            this.label373.Location = new System.Drawing.Point(312, 132);
            this.label373.Name = "label373";
            this.label373.Size = new System.Drawing.Size(146, 16);
            this.label373.TabIndex = 23;
            this.label373.Text = "MultiStreamFileNameMode";
            // 
            // cboMultiStreamMode
            // 
            this.cboMultiStreamMode.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboMultiStreamMode.Items.AddRange(new object[] {
            "OFF",
            "2 MultiImage",
            "3 MultiImage"});
            this.cboMultiStreamMode.Location = new System.Drawing.Point(422, 106);
            this.cboMultiStreamMode.MaxDropDownItems = 3;
            this.cboMultiStreamMode.Name = "cboMultiStreamMode";
            this.cboMultiStreamMode.Size = new System.Drawing.Size(146, 20);
            this.cboMultiStreamMode.TabIndex = 20;
            // 
            // label259
            // 
            this.label259.Location = new System.Drawing.Point(312, 109);
            this.label259.Name = "label259";
            this.label259.Size = new System.Drawing.Size(108, 16);
            this.label259.TabIndex = 19;
            this.label259.Text = "MultiStreamMode";
            // 
            // cboScanContinueMode
            // 
            this.cboScanContinueMode.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboScanContinueMode.Enabled = false;
            this.cboScanContinueMode.Items.AddRange(new object[] {
            "Manual",
            "Automatic"});
            this.cboScanContinueMode.Location = new System.Drawing.Point(586, 37);
            this.cboScanContinueMode.Name = "cboScanContinueMode";
            this.cboScanContinueMode.Size = new System.Drawing.Size(117, 20);
            this.cboScanContinueMode.TabIndex = 9;
            // 
            // label183
            // 
            this.label183.Location = new System.Drawing.Point(472, 40);
            this.label183.Name = "label183";
            this.label183.Size = new System.Drawing.Size(113, 16);
            this.label183.TabIndex = 8;
            this.label183.Text = "ScanContinueMode";
            // 
            // label169
            // 
            this.label169.Location = new System.Drawing.Point(312, 40);
            this.label169.Name = "label169";
            this.label169.Size = new System.Drawing.Size(85, 20);
            this.label169.TabIndex = 6;
            this.label169.Text = "ScanContinue";
            // 
            // chkScanContinue
            // 
            this.chkScanContinue.Location = new System.Drawing.Point(424, 40);
            this.chkScanContinue.Name = "chkScanContinue";
            this.chkScanContinue.Size = new System.Drawing.Size(17, 15);
            this.chkScanContinue.TabIndex = 7;
            this.chkScanContinue.UseVisualStyleBackColor = true;
            // 
            // cboScanMode
            // 
            this.cboScanMode.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboScanMode.Enabled = false;
            this.cboScanMode.Items.AddRange(new object[] {
            "Normal Scan",
            "Assist Scan"});
            this.cboScanMode.Location = new System.Drawing.Point(422, 15);
            this.cboScanMode.Name = "cboScanMode";
            this.cboScanMode.Size = new System.Drawing.Size(117, 20);
            this.cboScanMode.TabIndex = 3;
            // 
            // label40
            // 
            this.label40.Location = new System.Drawing.Point(312, 18);
            this.label40.Name = "label40";
            this.label40.Size = new System.Drawing.Size(73, 16);
            this.label40.TabIndex = 2;
            this.label40.Text = "ScanMode";
            // 
            // cboJpegQuality
            // 
            this.cboJpegQuality.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboJpegQuality.Items.AddRange(new object[] {
            "Level1",
            "Level2",
            "Level3",
            "Level4",
            "Level5",
            "Level6",
            "Level7"});
            this.cboJpegQuality.Location = new System.Drawing.Point(113, 129);
            this.cboJpegQuality.Name = "cboJpegQuality";
            this.cboJpegQuality.Size = new System.Drawing.Size(103, 20);
            this.cboJpegQuality.TabIndex = 22;
            // 
            // cboCompType
            // 
            this.cboCompType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboCompType.Items.AddRange(new object[] {
            "No Compress",
            "CCITT G3(1D)",
            "CCITT G3(2D)(KFactor=2)",
            "CCITT G3(2D)(KFactor=4)",
            "CCITT G4",
            "JPEG",
            "Old JPEG"});
            this.cboCompType.Location = new System.Drawing.Point(113, 106);
            this.cboCompType.Name = "cboCompType";
            this.cboCompType.Size = new System.Drawing.Size(161, 20);
            this.cboCompType.TabIndex = 18;
            // 
            // txtFileCounter
            // 
            this.txtFileCounter.Location = new System.Drawing.Point(422, 83);
            this.txtFileCounter.MaxLength = 5;
            this.txtFileCounter.Name = "txtFileCounter";
            this.txtFileCounter.Size = new System.Drawing.Size(45, 19);
            this.txtFileCounter.TabIndex = 15;
            this.txtFileCounter.Text = "-1";
            this.txtFileCounter.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtFileCounter.TextChanged += new System.EventHandler(this.txtFileCounter_TextChanged);
            // 
            // cboOverwrite
            // 
            this.cboOverwrite.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboOverwrite.Items.AddRange(new object[] {
            "OFF(Mode0)",
            "On",
            "Confirm(Mode0)",
            "OFF(Mode1)",
            "Confirm(Mode1)"});
            this.cboOverwrite.Location = new System.Drawing.Point(113, 83);
            this.cboOverwrite.Name = "cboOverwrite";
            this.cboOverwrite.Size = new System.Drawing.Size(121, 20);
            this.cboOverwrite.TabIndex = 13;
            // 
            // txtFileName
            // 
            this.txtFileName.Location = new System.Drawing.Point(113, 60);
            this.txtFileName.MaxLength = 254;
            this.txtFileName.Name = "txtFileName";
            this.txtFileName.Size = new System.Drawing.Size(430, 19);
            this.txtFileName.TabIndex = 11;
            // 
            // cboFileType
            // 
            this.cboFileType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboFileType.Items.AddRange(new object[] {
            "BMP",
            "TIFF",
            "MultipageTIFF",
            "JPEG",
            "PDF",
            "MultipagePDF",
            "Multi Image Output",
            "Auto Color Detection"});
            this.cboFileType.Location = new System.Drawing.Point(113, 37);
            this.cboFileType.Name = "cboFileType";
            this.cboFileType.Size = new System.Drawing.Size(161, 20);
            this.cboFileType.TabIndex = 5;
            this.cboFileType.SelectedIndexChanged += new System.EventHandler(this.cboFileType_SelectedIndexChanged);
            // 
            // cboScanTo
            // 
            this.cboScanTo.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboScanTo.Items.AddRange(new object[] {
            "File",
            "Dib Handle",
            "RAW Image Handle"});
            this.cboScanTo.Location = new System.Drawing.Point(113, 14);
            this.cboScanTo.Name = "cboScanTo";
            this.cboScanTo.Size = new System.Drawing.Size(125, 20);
            this.cboScanTo.TabIndex = 1;
            this.cboScanTo.SelectedIndexChanged += new System.EventHandler(this.cboScanTo_SelectedIndexChanged);
            // 
            // label8
            // 
            this.label8.Location = new System.Drawing.Point(8, 132);
            this.label8.Name = "label8";
            this.label8.Size = new System.Drawing.Size(98, 16);
            this.label8.TabIndex = 21;
            this.label8.Text = "JpegQuality";
            // 
            // label6
            // 
            this.label6.Location = new System.Drawing.Point(472, 86);
            this.label6.Name = "label6";
            this.label6.Size = new System.Drawing.Size(86, 16);
            this.label6.TabIndex = 16;
            this.label6.Text = "(-1,0-65535)";
            // 
            // label5
            // 
            this.label5.Location = new System.Drawing.Point(312, 87);
            this.label5.Name = "label5";
            this.label5.Size = new System.Drawing.Size(67, 16);
            this.label5.TabIndex = 14;
            this.label5.Text = "FileCounter";
            // 
            // label7
            // 
            this.label7.Location = new System.Drawing.Point(8, 109);
            this.label7.Name = "label7";
            this.label7.Size = new System.Drawing.Size(98, 16);
            this.label7.TabIndex = 17;
            this.label7.Text = "CompressionType";
            // 
            // label4
            // 
            this.label4.Location = new System.Drawing.Point(8, 86);
            this.label4.Name = "label4";
            this.label4.Size = new System.Drawing.Size(58, 16);
            this.label4.TabIndex = 12;
            this.label4.Text = "Overwrite";
            // 
            // label3
            // 
            this.label3.Location = new System.Drawing.Point(8, 63);
            this.label3.Name = "label3";
            this.label3.Size = new System.Drawing.Size(54, 16);
            this.label3.TabIndex = 10;
            this.label3.Text = "FileName";
            // 
            // label2
            // 
            this.label2.Location = new System.Drawing.Point(8, 40);
            this.label2.Name = "label2";
            this.label2.Size = new System.Drawing.Size(54, 16);
            this.label2.TabIndex = 4;
            this.label2.Text = "FileType";
            // 
            // label1
            // 
            this.label1.Location = new System.Drawing.Point(8, 17);
            this.label1.Name = "label1";
            this.label1.Size = new System.Drawing.Size(48, 16);
            this.label1.TabIndex = 0;
            this.label1.Text = "ScanTo";
            // 
            // Image
            // 
            this.Image.Controls.Add(this.groupBox5);
            this.Image.Controls.Add(this.groupBox4);
            this.Image.Location = new System.Drawing.Point(4, 22);
            this.Image.Name = "Image";
            this.Image.Size = new System.Drawing.Size(728, 595);
            this.Image.TabIndex = 1;
            this.Image.Text = "Image";
            // 
            // groupBox5
            // 
            this.groupBox5.Controls.Add(this.chkSmoothing);
            this.groupBox5.Controls.Add(this.label52);
            this.groupBox5.Controls.Add(this.chkPreFiltering);
            this.groupBox5.Controls.Add(this.label53);
            this.groupBox5.Controls.Add(this.cboNoiseRemoval);
            this.groupBox5.Controls.Add(this.label51);
            this.groupBox5.Controls.Add(this.cboThresholdCurve);
            this.groupBox5.Controls.Add(this.label50);
            this.groupBox5.Location = new System.Drawing.Point(8, 340);
            this.groupBox5.Name = "groupBox5";
            this.groupBox5.Size = new System.Drawing.Size(711, 109);
            this.groupBox5.TabIndex = 1;
            this.groupBox5.TabStop = false;
            // 
            // chkSmoothing
            // 
            this.chkSmoothing.Location = new System.Drawing.Point(113, 85);
            this.chkSmoothing.Name = "chkSmoothing";
            this.chkSmoothing.Size = new System.Drawing.Size(15, 14);
            this.chkSmoothing.TabIndex = 7;
            // 
            // label52
            // 
            this.label52.Location = new System.Drawing.Point(8, 84);
            this.label52.Name = "label52";
            this.label52.Size = new System.Drawing.Size(76, 16);
            this.label52.TabIndex = 6;
            this.label52.Text = "Smoothing";
            // 
            // chkPreFiltering
            // 
            this.chkPreFiltering.Location = new System.Drawing.Point(113, 62);
            this.chkPreFiltering.Name = "chkPreFiltering";
            this.chkPreFiltering.Size = new System.Drawing.Size(15, 14);
            this.chkPreFiltering.TabIndex = 5;
            // 
            // label53
            // 
            this.label53.Location = new System.Drawing.Point(8, 61);
            this.label53.Name = "label53";
            this.label53.Size = new System.Drawing.Size(76, 16);
            this.label53.TabIndex = 4;
            this.label53.Text = "PreFiltering";
            // 
            // cboNoiseRemoval
            // 
            this.cboNoiseRemoval.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboNoiseRemoval.Items.AddRange(new object[] {
            "None",
            "Matrix2",
            "Matrix3",
            "Matrix4",
            "Matrix5"});
            this.cboNoiseRemoval.Location = new System.Drawing.Point(113, 37);
            this.cboNoiseRemoval.Name = "cboNoiseRemoval";
            this.cboNoiseRemoval.Size = new System.Drawing.Size(62, 20);
            this.cboNoiseRemoval.TabIndex = 3;
            // 
            // label51
            // 
            this.label51.Location = new System.Drawing.Point(8, 38);
            this.label51.Name = "label51";
            this.label51.Size = new System.Drawing.Size(86, 16);
            this.label51.TabIndex = 2;
            this.label51.Text = "NoiseRemoval";
            // 
            // cboThresholdCurve
            // 
            this.cboThresholdCurve.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboThresholdCurve.Items.AddRange(new object[] {
            "Curve1",
            "Curve2",
            "Curve3",
            "Curve4",
            "Curve5",
            "Curve6",
            "Curve7",
            "Curve8"});
            this.cboThresholdCurve.Location = new System.Drawing.Point(113, 11);
            this.cboThresholdCurve.Name = "cboThresholdCurve";
            this.cboThresholdCurve.Size = new System.Drawing.Size(62, 20);
            this.cboThresholdCurve.TabIndex = 1;
            // 
            // label50
            // 
            this.label50.Location = new System.Drawing.Point(8, 15);
            this.label50.Name = "label50";
            this.label50.Size = new System.Drawing.Size(86, 16);
            this.label50.TabIndex = 0;
            this.label50.Text = "ThresholdCurve";
            // 
            // groupBox4
            // 
            this.groupBox4.Controls.Add(this.chkSimpleSlicePatternRemoval);
            this.groupBox4.Controls.Add(this.label220);
            this.groupBox4.Controls.Add(this.chkStampRemoval);
            this.groupBox4.Controls.Add(this.label219);
            this.groupBox4.Controls.Add(this.chkHalftoneRemoval);
            this.groupBox4.Controls.Add(this.label218);
            this.groupBox4.Controls.Add(this.chkReversedTypeExtraction);
            this.groupBox4.Controls.Add(this.label217);
            this.groupBox4.Controls.Add(this.chkCharacterExtraction);
            this.groupBox4.Controls.Add(this.label216);
            this.groupBox4.Controls.Add(this.cboPunchHoleRemovalMode);
            this.groupBox4.Controls.Add(this.label186);
            this.groupBox4.Controls.Add(this.cboPatternRemoval);
            this.groupBox4.Controls.Add(this.chkVerticalLineReduction);
            this.groupBox4.Controls.Add(this.label142);
            this.groupBox4.Controls.Add(this.cboPunchHoleRemoval);
            this.groupBox4.Controls.Add(this.label141);
            this.groupBox4.Controls.Add(this.chksRGB);
            this.groupBox4.Controls.Add(this.label140);
            this.groupBox4.Controls.Add(this.label138);
            this.groupBox4.Controls.Add(this.cboSharpness);
            this.groupBox4.Controls.Add(this.label137);
            this.groupBox4.Controls.Add(this.label135);
            this.groupBox4.Controls.Add(this.txtADTCThreshold);
            this.groupBox4.Controls.Add(this.label136);
            this.groupBox4.Controls.Add(this.label133);
            this.groupBox4.Controls.Add(this.txtNoiseRejection);
            this.groupBox4.Controls.Add(this.label134);
            this.groupBox4.Controls.Add(this.label132);
            this.groupBox4.Controls.Add(this.txtSDTCSensitivity);
            this.groupBox4.Controls.Add(this.label131);
            this.groupBox4.Controls.Add(this.label130);
            this.groupBox4.Controls.Add(this.txtCharacterThickness);
            this.groupBox4.Controls.Add(this.label129);
            this.groupBox4.Controls.Add(this.label126);
            this.groupBox4.Controls.Add(this.txtDTCSensitivity);
            this.groupBox4.Controls.Add(this.label125);
            this.groupBox4.Controls.Add(this.label76);
            this.groupBox4.Controls.Add(this.txtShadow);
            this.groupBox4.Controls.Add(this.label75);
            this.groupBox4.Controls.Add(this.label74);
            this.groupBox4.Controls.Add(this.txtHighlight);
            this.groupBox4.Controls.Add(this.label73);
            this.groupBox4.Controls.Add(this.txtCustomGamma);
            this.groupBox4.Controls.Add(this.label49);
            this.groupBox4.Controls.Add(this.label48);
            this.groupBox4.Controls.Add(this.txtGammaFile);
            this.groupBox4.Controls.Add(this.cboGamma);
            this.groupBox4.Controls.Add(this.label47);
            this.groupBox4.Controls.Add(this.txtHalftoneFile);
            this.groupBox4.Controls.Add(this.cboHalftone);
            this.groupBox4.Controls.Add(this.label46);
            this.groupBox4.Controls.Add(this.cboSEE);
            this.groupBox4.Controls.Add(this.label45);
            this.groupBox4.Controls.Add(this.cboAutoSeparation);
            this.groupBox4.Controls.Add(this.label44);
            this.groupBox4.Controls.Add(this.cboAutomaticRotateMode);
            this.groupBox4.Controls.Add(this.label302);
            this.groupBox4.Controls.Add(this.cboOutline);
            this.groupBox4.Controls.Add(this.label43);
            this.groupBox4.Controls.Add(this.cboBackground);
            this.groupBox4.Controls.Add(this.label42);
            this.groupBox4.Controls.Add(this.cboRotation);
            this.groupBox4.Controls.Add(this.label41);
            this.groupBox4.Controls.Add(this.chkMirroring);
            this.groupBox4.Controls.Add(this.chkReverse);
            this.groupBox4.Controls.Add(this.label39);
            this.groupBox4.Controls.Add(this.txtThreshold);
            this.groupBox4.Controls.Add(this.label38);
            this.groupBox4.Controls.Add(this.label37);
            this.groupBox4.Controls.Add(this.txtContrast);
            this.groupBox4.Controls.Add(this.label36);
            this.groupBox4.Controls.Add(this.label35);
            this.groupBox4.Controls.Add(this.label34);
            this.groupBox4.Controls.Add(this.txtBrightness);
            this.groupBox4.Controls.Add(this.label33);
            this.groupBox4.Controls.Add(this.label127);
            this.groupBox4.Controls.Add(this.label128);
            this.groupBox4.Controls.Add(this.txtBackgroundThreshold);
            this.groupBox4.Controls.Add(this.txtFadingCompensation);
            this.groupBox4.Controls.Add(this.label139);
            this.groupBox4.Controls.Add(this.label143);
            this.groupBox4.Controls.Add(this.label157);
            this.groupBox4.Location = new System.Drawing.Point(8, 8);
            this.groupBox4.Name = "groupBox4";
            this.groupBox4.Size = new System.Drawing.Size(711, 332);
            this.groupBox4.TabIndex = 0;
            this.groupBox4.TabStop = false;
            // 
            // chkSimpleSlicePatternRemoval
            // 
            this.chkSimpleSlicePatternRemoval.Location = new System.Drawing.Point(592, 291);
            this.chkSimpleSlicePatternRemoval.Name = "chkSimpleSlicePatternRemoval";
            this.chkSimpleSlicePatternRemoval.Size = new System.Drawing.Size(15, 14);
            this.chkSimpleSlicePatternRemoval.TabIndex = 82;
            this.chkSimpleSlicePatternRemoval.UseVisualStyleBackColor = true;
            // 
            // label220
            // 
            this.label220.Location = new System.Drawing.Point(433, 292);
            this.label220.Name = "label220";
            this.label220.Size = new System.Drawing.Size(155, 16);
            this.label220.TabIndex = 81;
            this.label220.Text = "SimpleSlicePatternRemoval";
            // 
            // chkStampRemoval
            // 
            this.chkStampRemoval.Location = new System.Drawing.Point(684, 216);
            this.chkStampRemoval.Name = "chkStampRemoval";
            this.chkStampRemoval.Size = new System.Drawing.Size(15, 14);
            this.chkStampRemoval.TabIndex = 69;
            this.chkStampRemoval.UseVisualStyleBackColor = true;
            // 
            // label219
            // 
            this.label219.Location = new System.Drawing.Point(584, 217);
            this.label219.Name = "label219";
            this.label219.Size = new System.Drawing.Size(95, 16);
            this.label219.TabIndex = 68;
            this.label219.Text = "StampRemoval";
            // 
            // chkHalftoneRemoval
            // 
            this.chkHalftoneRemoval.Location = new System.Drawing.Point(549, 216);
            this.chkHalftoneRemoval.Name = "chkHalftoneRemoval";
            this.chkHalftoneRemoval.Size = new System.Drawing.Size(15, 14);
            this.chkHalftoneRemoval.TabIndex = 67;
            this.chkHalftoneRemoval.UseVisualStyleBackColor = true;
            // 
            // label218
            // 
            this.label218.Location = new System.Drawing.Point(433, 217);
            this.label218.Name = "label218";
            this.label218.Size = new System.Drawing.Size(105, 16);
            this.label218.TabIndex = 66;
            this.label218.Text = "HalftoneRemoval";
            // 
            // chkReversedTypeExtraction
            // 
            this.chkReversedTypeExtraction.Location = new System.Drawing.Point(398, 216);
            this.chkReversedTypeExtraction.Name = "chkReversedTypeExtraction";
            this.chkReversedTypeExtraction.Size = new System.Drawing.Size(15, 14);
            this.chkReversedTypeExtraction.TabIndex = 65;
            this.chkReversedTypeExtraction.UseVisualStyleBackColor = true;
            // 
            // label217
            // 
            this.label217.Location = new System.Drawing.Point(249, 217);
            this.label217.Name = "label217";
            this.label217.Size = new System.Drawing.Size(146, 16);
            this.label217.TabIndex = 64;
            this.label217.Text = "ReversedTypeExtraction";
            // 
            // chkCharacterExtraction
            // 
            this.chkCharacterExtraction.Location = new System.Drawing.Point(364, 192);
            this.chkCharacterExtraction.Name = "chkCharacterExtraction";
            this.chkCharacterExtraction.Size = new System.Drawing.Size(15, 14);
            this.chkCharacterExtraction.TabIndex = 59;
            this.chkCharacterExtraction.UseVisualStyleBackColor = true;
            // 
            // label216
            // 
            this.label216.Location = new System.Drawing.Point(249, 193);
            this.label216.Name = "label216";
            this.label216.Size = new System.Drawing.Size(113, 16);
            this.label216.TabIndex = 58;
            this.label216.Text = "CharacterExtraction";
            // 
            // cboPunchHoleRemovalMode
            // 
            this.cboPunchHoleRemovalMode.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboPunchHoleRemovalMode.FormattingEnabled = true;
            this.cboPunchHoleRemovalMode.Items.AddRange(new object[] {
            "Standard",
            "Advanced"});
            this.cboPunchHoleRemovalMode.Location = new System.Drawing.Point(142, 214);
            this.cboPunchHoleRemovalMode.Name = "cboPunchHoleRemovalMode";
            this.cboPunchHoleRemovalMode.Size = new System.Drawing.Size(96, 20);
            this.cboPunchHoleRemovalMode.TabIndex = 63;
            // 
            // label186
            // 
            this.label186.Location = new System.Drawing.Point(8, 217);
            this.label186.Name = "label186";
            this.label186.Size = new System.Drawing.Size(135, 16);
            this.label186.TabIndex = 62;
            this.label186.Text = "PunchHoleRemovalMode";
            // 
            // cboPatternRemoval
            // 
            this.cboPatternRemoval.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboPatternRemoval.Items.AddRange(new object[] {
            "OFF",
            "Standard",
            "Advanced",
            "Strong"});
            this.cboPatternRemoval.Location = new System.Drawing.Point(549, 189);
            this.cboPatternRemoval.MaxDropDownItems = 4;
            this.cboPatternRemoval.Name = "cboPatternRemoval";
            this.cboPatternRemoval.Size = new System.Drawing.Size(91, 20);
            this.cboPatternRemoval.TabIndex = 61;
            // 
            // chkVerticalLineReduction
            // 
            this.chkVerticalLineReduction.Location = new System.Drawing.Point(371, 291);
            this.chkVerticalLineReduction.Name = "chkVerticalLineReduction";
            this.chkVerticalLineReduction.Size = new System.Drawing.Size(15, 14);
            this.chkVerticalLineReduction.TabIndex = 80;
            // 
            // label142
            // 
            this.label142.Location = new System.Drawing.Point(433, 193);
            this.label142.Name = "label142";
            this.label142.Size = new System.Drawing.Size(99, 16);
            this.label142.TabIndex = 60;
            this.label142.Text = "PatternRemoval";
            // 
            // cboPunchHoleRemoval
            // 
            this.cboPunchHoleRemoval.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboPunchHoleRemoval.Items.AddRange(new object[] {
            "Do not remove",
            "White",
            "Background color"});
            this.cboPunchHoleRemoval.Location = new System.Drawing.Point(113, 188);
            this.cboPunchHoleRemoval.Name = "cboPunchHoleRemoval";
            this.cboPunchHoleRemoval.Size = new System.Drawing.Size(125, 20);
            this.cboPunchHoleRemoval.TabIndex = 57;
            // 
            // label141
            // 
            this.label141.Location = new System.Drawing.Point(8, 192);
            this.label141.Name = "label141";
            this.label141.Size = new System.Drawing.Size(106, 16);
            this.label141.TabIndex = 56;
            this.label141.Text = "PunchHoleRemoval";
            // 
            // chksRGB
            // 
            this.chksRGB.Location = new System.Drawing.Point(549, 167);
            this.chksRGB.Name = "chksRGB";
            this.chksRGB.Size = new System.Drawing.Size(15, 14);
            this.chksRGB.TabIndex = 55;
            // 
            // label140
            // 
            this.label140.Location = new System.Drawing.Point(464, 167);
            this.label140.Name = "label140";
            this.label140.Size = new System.Drawing.Size(51, 16);
            this.label140.TabIndex = 54;
            this.label140.Text = "sRGB";
            // 
            // label138
            // 
            this.label138.Location = new System.Drawing.Point(249, 167);
            this.label138.Name = "label138";
            this.label138.Size = new System.Drawing.Size(113, 16);
            this.label138.TabIndex = 51;
            this.label138.Text = "FadingCompensation";
            // 
            // cboSharpness
            // 
            this.cboSharpness.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboSharpness.Items.AddRange(new object[] {
            "None",
            "Emphasis Low",
            "Emphasis Mid",
            "Emphasis High",
            "Edge Extract",
            "Level 1",
            "Level 2",
            "Level 3",
            "Level 4"});
            this.cboSharpness.Location = new System.Drawing.Point(113, 165);
            this.cboSharpness.MaxDropDownItems = 9;
            this.cboSharpness.Name = "cboSharpness";
            this.cboSharpness.Size = new System.Drawing.Size(125, 20);
            this.cboSharpness.TabIndex = 50;
            // 
            // label137
            // 
            this.label137.Location = new System.Drawing.Point(8, 167);
            this.label137.Name = "label137";
            this.label137.Size = new System.Drawing.Size(76, 16);
            this.label137.TabIndex = 49;
            this.label137.Text = "Sharpness";
            // 
            // label135
            // 
            this.label135.Location = new System.Drawing.Point(586, 142);
            this.label135.Name = "label135";
            this.label135.Size = new System.Drawing.Size(43, 16);
            this.label135.TabIndex = 48;
            this.label135.Text = "(1-255)";
            // 
            // txtADTCThreshold
            // 
            this.txtADTCThreshold.Location = new System.Drawing.Point(549, 137);
            this.txtADTCThreshold.MaxLength = 3;
            this.txtADTCThreshold.Name = "txtADTCThreshold";
            this.txtADTCThreshold.Size = new System.Drawing.Size(36, 19);
            this.txtADTCThreshold.TabIndex = 47;
            this.txtADTCThreshold.Text = "83";
            this.txtADTCThreshold.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtADTCThreshold.TextChanged += new System.EventHandler(this.txtADTCThreshold_TextChanged);
            // 
            // label136
            // 
            this.label136.Location = new System.Drawing.Point(433, 140);
            this.label136.Name = "label136";
            this.label136.Size = new System.Drawing.Size(116, 16);
            this.label136.TabIndex = 46;
            this.label136.Text = "ADTCThreshold";
            // 
            // label133
            // 
            this.label133.Location = new System.Drawing.Point(376, 140);
            this.label133.Name = "label133";
            this.label133.Size = new System.Drawing.Size(43, 16);
            this.label133.TabIndex = 45;
            this.label133.Text = "(0-20)";
            // 
            // txtNoiseRejection
            // 
            this.txtNoiseRejection.Location = new System.Drawing.Point(338, 137);
            this.txtNoiseRejection.MaxLength = 3;
            this.txtNoiseRejection.Name = "txtNoiseRejection";
            this.txtNoiseRejection.Size = new System.Drawing.Size(36, 19);
            this.txtNoiseRejection.TabIndex = 44;
            this.txtNoiseRejection.Text = "0";
            this.txtNoiseRejection.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtNoiseRejection.TextChanged += new System.EventHandler(this.txtNoiseRejection_TextChanged);
            // 
            // label134
            // 
            this.label134.Location = new System.Drawing.Point(226, 140);
            this.label134.Name = "label134";
            this.label134.Size = new System.Drawing.Size(116, 16);
            this.label134.TabIndex = 43;
            this.label134.Text = "NoiseRejection";
            // 
            // label132
            // 
            this.label132.Location = new System.Drawing.Point(585, 119);
            this.label132.Name = "label132";
            this.label132.Size = new System.Drawing.Size(43, 16);
            this.label132.TabIndex = 39;
            this.label132.Text = "(1-3)";
            // 
            // txtSDTCSensitivity
            // 
            this.txtSDTCSensitivity.Location = new System.Drawing.Point(549, 113);
            this.txtSDTCSensitivity.MaxLength = 3;
            this.txtSDTCSensitivity.Name = "txtSDTCSensitivity";
            this.txtSDTCSensitivity.Size = new System.Drawing.Size(36, 19);
            this.txtSDTCSensitivity.TabIndex = 38;
            this.txtSDTCSensitivity.Text = "2";
            this.txtSDTCSensitivity.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtSDTCSensitivity.TextChanged += new System.EventHandler(this.txtSDTCSensitivity_TextChanged);
            // 
            // label131
            // 
            this.label131.Location = new System.Drawing.Point(433, 117);
            this.label131.Name = "label131";
            this.label131.Size = new System.Drawing.Size(116, 16);
            this.label131.TabIndex = 37;
            this.label131.Text = "SDTCSensitivity";
            // 
            // label130
            // 
            this.label130.Location = new System.Drawing.Point(376, 116);
            this.label130.Name = "label130";
            this.label130.Size = new System.Drawing.Size(43, 16);
            this.label130.TabIndex = 36;
            this.label130.Text = "(0-10)";
            // 
            // txtCharacterThickness
            // 
            this.txtCharacterThickness.Location = new System.Drawing.Point(338, 113);
            this.txtCharacterThickness.MaxLength = 3;
            this.txtCharacterThickness.Name = "txtCharacterThickness";
            this.txtCharacterThickness.Size = new System.Drawing.Size(36, 19);
            this.txtCharacterThickness.TabIndex = 35;
            this.txtCharacterThickness.Text = "5";
            this.txtCharacterThickness.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtCharacterThickness.TextChanged += new System.EventHandler(this.txtCharacterThickness_TextChanged);
            // 
            // label129
            // 
            this.label129.Location = new System.Drawing.Point(226, 117);
            this.label129.Name = "label129";
            this.label129.Size = new System.Drawing.Size(116, 16);
            this.label129.TabIndex = 34;
            this.label129.Text = "CharacterThickness";
            // 
            // label126
            // 
            this.label126.Location = new System.Drawing.Point(376, 94);
            this.label126.Name = "label126";
            this.label126.Size = new System.Drawing.Size(43, 16);
            this.label126.TabIndex = 27;
            this.label126.Text = "(0-100)";
            // 
            // txtDTCSensitivity
            // 
            this.txtDTCSensitivity.Location = new System.Drawing.Point(338, 89);
            this.txtDTCSensitivity.MaxLength = 3;
            this.txtDTCSensitivity.Name = "txtDTCSensitivity";
            this.txtDTCSensitivity.Size = new System.Drawing.Size(36, 19);
            this.txtDTCSensitivity.TabIndex = 26;
            this.txtDTCSensitivity.Text = "50";
            this.txtDTCSensitivity.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtDTCSensitivity.TextChanged += new System.EventHandler(this.txtDTCSensitivity_TextChanged);
            // 
            // label125
            // 
            this.label125.Location = new System.Drawing.Point(226, 92);
            this.label125.Name = "label125";
            this.label125.Size = new System.Drawing.Size(107, 16);
            this.label125.TabIndex = 25;
            this.label125.Text = "DTCSensitivity";
            // 
            // label76
            // 
            this.label76.Location = new System.Drawing.Point(153, 141);
            this.label76.Name = "label76";
            this.label76.Size = new System.Drawing.Size(49, 16);
            this.label76.TabIndex = 42;
            this.label76.Text = "(0-254)";
            // 
            // txtShadow
            // 
            this.txtShadow.Location = new System.Drawing.Point(113, 137);
            this.txtShadow.MaxLength = 3;
            this.txtShadow.Name = "txtShadow";
            this.txtShadow.Size = new System.Drawing.Size(36, 19);
            this.txtShadow.TabIndex = 41;
            this.txtShadow.Text = "10";
            this.txtShadow.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtShadow.TextChanged += new System.EventHandler(this.txtShadow_TextChanged);
            // 
            // label75
            // 
            this.label75.Location = new System.Drawing.Point(8, 142);
            this.label75.Name = "label75";
            this.label75.Size = new System.Drawing.Size(76, 16);
            this.label75.TabIndex = 40;
            this.label75.Text = "Shadow";
            // 
            // label74
            // 
            this.label74.Location = new System.Drawing.Point(153, 116);
            this.label74.Name = "label74";
            this.label74.Size = new System.Drawing.Size(49, 16);
            this.label74.TabIndex = 33;
            this.label74.Text = "(1-255)";
            // 
            // txtHighlight
            // 
            this.txtHighlight.Location = new System.Drawing.Point(113, 113);
            this.txtHighlight.MaxLength = 3;
            this.txtHighlight.Name = "txtHighlight";
            this.txtHighlight.Size = new System.Drawing.Size(36, 19);
            this.txtHighlight.TabIndex = 32;
            this.txtHighlight.Text = "230";
            this.txtHighlight.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtHighlight.TextChanged += new System.EventHandler(this.txtHighlight_TextChanged);
            // 
            // label73
            // 
            this.label73.Location = new System.Drawing.Point(8, 117);
            this.label73.Name = "label73";
            this.label73.Size = new System.Drawing.Size(76, 16);
            this.label73.TabIndex = 31;
            this.label73.Text = "Highlight";
            // 
            // txtCustomGamma
            // 
            this.txtCustomGamma.Location = new System.Drawing.Point(113, 292);
            this.txtCustomGamma.MaxLength = 4;
            this.txtCustomGamma.Name = "txtCustomGamma";
            this.txtCustomGamma.Size = new System.Drawing.Size(36, 19);
            this.txtCustomGamma.TabIndex = 77;
            this.txtCustomGamma.Text = "2.2";
            this.txtCustomGamma.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtCustomGamma.TextChanged += new System.EventHandler(this.txtCustomGamma_TextChanged);
            // 
            // label49
            // 
            this.label49.Location = new System.Drawing.Point(8, 292);
            this.label49.Name = "label49";
            this.label49.Size = new System.Drawing.Size(87, 16);
            this.label49.TabIndex = 76;
            this.label49.Text = "CustomGamma";
            // 
            // label48
            // 
            this.label48.Location = new System.Drawing.Point(153, 295);
            this.label48.Name = "label48";
            this.label48.Size = new System.Drawing.Size(62, 16);
            this.label48.TabIndex = 78;
            this.label48.Text = "(0.1-10.0)";
            // 
            // txtGammaFile
            // 
            this.txtGammaFile.Location = new System.Drawing.Point(241, 265);
            this.txtGammaFile.MaxLength = 254;
            this.txtGammaFile.Name = "txtGammaFile";
            this.txtGammaFile.Size = new System.Drawing.Size(305, 19);
            this.txtGammaFile.TabIndex = 75;
            // 
            // cboGamma
            // 
            this.cboGamma.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboGamma.Items.AddRange(new object[] {
            "None",
            "Soft",
            "Sharp",
            "GammaPatternFile",
            "Custom",
            "Bright",
            "Standard"});
            this.cboGamma.Location = new System.Drawing.Point(113, 265);
            this.cboGamma.Name = "cboGamma";
            this.cboGamma.Size = new System.Drawing.Size(125, 20);
            this.cboGamma.TabIndex = 74;
            this.cboGamma.SelectedIndexChanged += new System.EventHandler(this.cboGamma_SelectedIndexChanged);
            // 
            // label47
            // 
            this.label47.Location = new System.Drawing.Point(8, 267);
            this.label47.Name = "label47";
            this.label47.Size = new System.Drawing.Size(76, 16);
            this.label47.TabIndex = 73;
            this.label47.Text = "Gamma";
            // 
            // txtHalftoneFile
            // 
            this.txtHalftoneFile.Location = new System.Drawing.Point(241, 239);
            this.txtHalftoneFile.MaxLength = 254;
            this.txtHalftoneFile.Name = "txtHalftoneFile";
            this.txtHalftoneFile.Size = new System.Drawing.Size(305, 19);
            this.txtHalftoneFile.TabIndex = 72;
            // 
            // cboHalftone
            // 
            this.cboHalftone.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboHalftone.Items.AddRange(new object[] {
            "None",
            "DitherPattern0",
            "DitherPattern1",
            "DitherPattern2",
            "DitherPattern3",
            "DitherPatternFile",
            "ErrorDiffusion"});
            this.cboHalftone.Location = new System.Drawing.Point(113, 239);
            this.cboHalftone.Name = "cboHalftone";
            this.cboHalftone.Size = new System.Drawing.Size(125, 20);
            this.cboHalftone.TabIndex = 71;
            this.cboHalftone.SelectedIndexChanged += new System.EventHandler(this.cboHalftone_SelectedIndexChanged);
            // 
            // label46
            // 
            this.label46.Location = new System.Drawing.Point(8, 242);
            this.label46.Name = "label46";
            this.label46.Size = new System.Drawing.Size(76, 16);
            this.label46.TabIndex = 70;
            this.label46.Text = "Halftone";
            // 
            // cboSEE
            // 
            this.cboSEE.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboSEE.Items.AddRange(new object[] {
            "OFF",
            "ON"});
            this.cboSEE.Location = new System.Drawing.Point(549, 64);
            this.cboSEE.Name = "cboSEE";
            this.cboSEE.Size = new System.Drawing.Size(57, 20);
            this.cboSEE.TabIndex = 21;
            // 
            // label45
            // 
            this.label45.Location = new System.Drawing.Point(433, 67);
            this.label45.Name = "label45";
            this.label45.Size = new System.Drawing.Size(76, 16);
            this.label45.TabIndex = 20;
            this.label45.Text = "SEE";
            // 
            // cboAutoSeparation
            // 
            this.cboAutoSeparation.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboAutoSeparation.Items.AddRange(new object[] {
            "OFF",
            "ON"});
            this.cboAutoSeparation.Location = new System.Drawing.Point(338, 64);
            this.cboAutoSeparation.Name = "cboAutoSeparation";
            this.cboAutoSeparation.Size = new System.Drawing.Size(57, 20);
            this.cboAutoSeparation.TabIndex = 19;
            // 
            // label44
            // 
            this.label44.Location = new System.Drawing.Point(226, 67);
            this.label44.Name = "label44";
            this.label44.Size = new System.Drawing.Size(86, 16);
            this.label44.TabIndex = 18;
            this.label44.Text = "AutoSeparation";
            // 
            // cboAutomaticRotateMode
            // 
            this.cboAutomaticRotateMode.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboAutomaticRotateMode.Items.AddRange(new object[] {
            "Standard",
            "Custom"});
            this.cboAutomaticRotateMode.Location = new System.Drawing.Point(549, 15);
            this.cboAutomaticRotateMode.MaxDropDownItems = 2;
            this.cboAutomaticRotateMode.Name = "cboAutomaticRotateMode";
            this.cboAutomaticRotateMode.Size = new System.Drawing.Size(152, 20);
            this.cboAutomaticRotateMode.TabIndex = 7;
            // 
            // label302
            // 
            this.label302.Location = new System.Drawing.Point(433, 17);
            this.label302.Name = "label302";
            this.label302.Size = new System.Drawing.Size(120, 16);
            this.label302.TabIndex = 6;
            this.label302.Text = "AutomaticRotateMode";
            // 
            // cboOutline
            // 
            this.cboOutline.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboOutline.Items.AddRange(new object[] {
            "None",
            "Outline Emphasis Low",
            "Outline Emphasis Mid",
            "Outline Emphasis High",
            "Outline Smooth",
            "Edge Extract"});
            this.cboOutline.Location = new System.Drawing.Point(549, 40);
            this.cboOutline.Name = "cboOutline";
            this.cboOutline.Size = new System.Drawing.Size(152, 20);
            this.cboOutline.TabIndex = 14;
            // 
            // label43
            // 
            this.label43.Location = new System.Drawing.Point(433, 42);
            this.label43.Name = "label43";
            this.label43.Size = new System.Drawing.Size(76, 16);
            this.label43.TabIndex = 13;
            this.label43.Text = "Outline";
            // 
            // cboBackground
            // 
            this.cboBackground.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboBackground.Items.AddRange(new object[] {
            "OFF",
            "ON",
            "AUTO"});
            this.cboBackground.Location = new System.Drawing.Point(338, 40);
            this.cboBackground.Name = "cboBackground";
            this.cboBackground.Size = new System.Drawing.Size(57, 20);
            this.cboBackground.TabIndex = 12;
            // 
            // label42
            // 
            this.label42.Location = new System.Drawing.Point(226, 42);
            this.label42.Name = "label42";
            this.label42.Size = new System.Drawing.Size(76, 16);
            this.label42.TabIndex = 11;
            this.label42.Text = "Background";
            // 
            // cboRotation
            // 
            this.cboRotation.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboRotation.Items.AddRange(new object[] {
            "None",
            "R90",
            "R180",
            "R270",
            "Automatic"});
            this.cboRotation.Location = new System.Drawing.Point(338, 15);
            this.cboRotation.Name = "cboRotation";
            this.cboRotation.Size = new System.Drawing.Size(95, 20);
            this.cboRotation.TabIndex = 5;
            // 
            // label41
            // 
            this.label41.Location = new System.Drawing.Point(285, 17);
            this.label41.Name = "label41";
            this.label41.Size = new System.Drawing.Size(50, 16);
            this.label41.TabIndex = 4;
            this.label41.Text = "Rotation";
            // 
            // chkMirroring
            // 
            this.chkMirroring.Location = new System.Drawing.Point(244, 17);
            this.chkMirroring.Name = "chkMirroring";
            this.chkMirroring.Size = new System.Drawing.Size(15, 14);
            this.chkMirroring.TabIndex = 3;
            // 
            // chkReverse
            // 
            this.chkReverse.Location = new System.Drawing.Point(113, 17);
            this.chkReverse.Name = "chkReverse";
            this.chkReverse.Size = new System.Drawing.Size(15, 14);
            this.chkReverse.TabIndex = 1;
            // 
            // label39
            // 
            this.label39.Location = new System.Drawing.Point(8, 17);
            this.label39.Name = "label39";
            this.label39.Size = new System.Drawing.Size(76, 16);
            this.label39.TabIndex = 0;
            this.label39.Text = "Reverse";
            // 
            // txtThreshold
            // 
            this.txtThreshold.Location = new System.Drawing.Point(113, 88);
            this.txtThreshold.MaxLength = 3;
            this.txtThreshold.Name = "txtThreshold";
            this.txtThreshold.Size = new System.Drawing.Size(36, 19);
            this.txtThreshold.TabIndex = 23;
            this.txtThreshold.Text = "128";
            this.txtThreshold.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtThreshold.TextChanged += new System.EventHandler(this.txtThreshold_TextChanged);
            // 
            // label38
            // 
            this.label38.Location = new System.Drawing.Point(8, 92);
            this.label38.Name = "label38";
            this.label38.Size = new System.Drawing.Size(76, 16);
            this.label38.TabIndex = 22;
            this.label38.Text = "Threshold";
            // 
            // label37
            // 
            this.label37.Location = new System.Drawing.Point(153, 91);
            this.label37.Name = "label37";
            this.label37.Size = new System.Drawing.Size(76, 16);
            this.label37.TabIndex = 24;
            this.label37.Text = "(-2,-1,0-255)";
            // 
            // txtContrast
            // 
            this.txtContrast.Location = new System.Drawing.Point(113, 64);
            this.txtContrast.MaxLength = 3;
            this.txtContrast.Name = "txtContrast";
            this.txtContrast.Size = new System.Drawing.Size(36, 19);
            this.txtContrast.TabIndex = 16;
            this.txtContrast.Text = "128";
            this.txtContrast.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtContrast.TextChanged += new System.EventHandler(this.txtContrast_TextChanged);
            // 
            // label36
            // 
            this.label36.Location = new System.Drawing.Point(8, 67);
            this.label36.Name = "label36";
            this.label36.Size = new System.Drawing.Size(76, 16);
            this.label36.TabIndex = 15;
            this.label36.Text = "Contrast";
            // 
            // label35
            // 
            this.label35.Location = new System.Drawing.Point(153, 68);
            this.label35.Name = "label35";
            this.label35.Size = new System.Drawing.Size(49, 16);
            this.label35.TabIndex = 17;
            this.label35.Text = "(1-255)";
            // 
            // label34
            // 
            this.label34.Location = new System.Drawing.Point(153, 44);
            this.label34.Name = "label34";
            this.label34.Size = new System.Drawing.Size(49, 16);
            this.label34.TabIndex = 10;
            this.label34.Text = "(1-255)";
            // 
            // txtBrightness
            // 
            this.txtBrightness.Location = new System.Drawing.Point(113, 40);
            this.txtBrightness.MaxLength = 3;
            this.txtBrightness.Name = "txtBrightness";
            this.txtBrightness.Size = new System.Drawing.Size(36, 19);
            this.txtBrightness.TabIndex = 9;
            this.txtBrightness.Text = "128";
            this.txtBrightness.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtBrightness.TextChanged += new System.EventHandler(this.txtBrightness_TextChanged);
            // 
            // label33
            // 
            this.label33.Location = new System.Drawing.Point(8, 42);
            this.label33.Name = "label33";
            this.label33.Size = new System.Drawing.Size(76, 16);
            this.label33.TabIndex = 8;
            this.label33.Text = "Brightness";
            // 
            // label127
            // 
            this.label127.Location = new System.Drawing.Point(433, 92);
            this.label127.Name = "label127";
            this.label127.Size = new System.Drawing.Size(116, 16);
            this.label127.TabIndex = 28;
            this.label127.Text = "BackgroundThreshold";
            // 
            // label128
            // 
            this.label128.Location = new System.Drawing.Point(585, 94);
            this.label128.Name = "label128";
            this.label128.Size = new System.Drawing.Size(43, 16);
            this.label128.TabIndex = 30;
            this.label128.Text = "(0-100)";
            // 
            // txtBackgroundThreshold
            // 
            this.txtBackgroundThreshold.Location = new System.Drawing.Point(549, 89);
            this.txtBackgroundThreshold.MaxLength = 3;
            this.txtBackgroundThreshold.Name = "txtBackgroundThreshold";
            this.txtBackgroundThreshold.Size = new System.Drawing.Size(36, 19);
            this.txtBackgroundThreshold.TabIndex = 29;
            this.txtBackgroundThreshold.Text = "50";
            this.txtBackgroundThreshold.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtBackgroundThreshold.TextChanged += new System.EventHandler(this.txtBackgroundThreshold_TextChanged);
            // 
            // txtFadingCompensation
            // 
            this.txtFadingCompensation.Location = new System.Drawing.Point(364, 165);
            this.txtFadingCompensation.MaxLength = 3;
            this.txtFadingCompensation.Name = "txtFadingCompensation";
            this.txtFadingCompensation.Size = new System.Drawing.Size(36, 19);
            this.txtFadingCompensation.TabIndex = 52;
            this.txtFadingCompensation.Text = "0";
            this.txtFadingCompensation.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtFadingCompensation.TextChanged += new System.EventHandler(this.txtFadingCompensation_TextChanged);
            // 
            // label139
            // 
            this.label139.Location = new System.Drawing.Point(402, 170);
            this.label139.Name = "label139";
            this.label139.Size = new System.Drawing.Size(43, 16);
            this.label139.TabIndex = 53;
            this.label139.Text = "(0-5)";
            // 
            // label143
            // 
            this.label143.Location = new System.Drawing.Point(164, 17);
            this.label143.Name = "label143";
            this.label143.Size = new System.Drawing.Size(76, 16);
            this.label143.TabIndex = 2;
            this.label143.Text = "Mirroing";
            // 
            // label157
            // 
            this.label157.Location = new System.Drawing.Point(249, 292);
            this.label157.Name = "label157";
            this.label157.Size = new System.Drawing.Size(121, 16);
            this.label157.TabIndex = 79;
            this.label157.Text = "VerticalLineReduction";
            // 
            // Image2
            // 
            this.Image2.BackColor = System.Drawing.SystemColors.Control;
            this.Image2.Controls.Add(this.groupBox15);
            this.Image2.Location = new System.Drawing.Point(4, 22);
            this.Image2.Name = "Image2";
            this.Image2.Size = new System.Drawing.Size(728, 595);
            this.Image2.TabIndex = 2;
            this.Image2.Text = "Image2";
            // 
            // groupBox15
            // 
            this.groupBox15.Controls.Add(this.label214);
            this.groupBox15.Controls.Add(this.txtAdjustRGBB);
            this.groupBox15.Controls.Add(this.label213);
            this.groupBox15.Controls.Add(this.label212);
            this.groupBox15.Controls.Add(this.txtAdjustRGBG);
            this.groupBox15.Controls.Add(this.label211);
            this.groupBox15.Controls.Add(this.label210);
            this.groupBox15.Controls.Add(this.txtAdjustRGBR);
            this.groupBox15.Controls.Add(this.label209);
            this.groupBox15.Controls.Add(this.chkAdjustRGB);
            this.groupBox15.Controls.Add(this.label208);
            this.groupBox15.Controls.Add(this.label207);
            this.groupBox15.Controls.Add(this.txtColorReproductionCustomGamma);
            this.groupBox15.Controls.Add(this.label206);
            this.groupBox15.Controls.Add(this.label205);
            this.groupBox15.Controls.Add(this.txtColorReproductionHighlight);
            this.groupBox15.Controls.Add(this.label204);
            this.groupBox15.Controls.Add(this.label203);
            this.groupBox15.Controls.Add(this.txtColorReproductionShadow);
            this.groupBox15.Controls.Add(this.label202);
            this.groupBox15.Controls.Add(this.label201);
            this.groupBox15.Controls.Add(this.txtColorReproductionContrast);
            this.groupBox15.Controls.Add(this.label200);
            this.groupBox15.Controls.Add(this.label199);
            this.groupBox15.Controls.Add(this.txtColorReproductionBrightness);
            this.groupBox15.Controls.Add(this.label198);
            this.groupBox15.Controls.Add(this.cboColorReproduction);
            this.groupBox15.Controls.Add(this.label197);
            this.groupBox15.Location = new System.Drawing.Point(8, 8);
            this.groupBox15.Name = "groupBox15";
            this.groupBox15.Size = new System.Drawing.Size(711, 176);
            this.groupBox15.TabIndex = 0;
            this.groupBox15.TabStop = false;
            // 
            // label214
            // 
            this.label214.Location = new System.Drawing.Point(562, 92);
            this.label214.Name = "label214";
            this.label214.Size = new System.Drawing.Size(49, 16);
            this.label214.TabIndex = 21;
            this.label214.Text = "(1-255)";
            // 
            // txtAdjustRGBB
            // 
            this.txtAdjustRGBB.Location = new System.Drawing.Point(522, 89);
            this.txtAdjustRGBB.MaxLength = 3;
            this.txtAdjustRGBB.Name = "txtAdjustRGBB";
            this.txtAdjustRGBB.Size = new System.Drawing.Size(36, 19);
            this.txtAdjustRGBB.TabIndex = 20;
            this.txtAdjustRGBB.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtAdjustRGBB.TextChanged += new System.EventHandler(this.txtAdjustRGBB_TextChanged);
            // 
            // label213
            // 
            this.label213.Location = new System.Drawing.Point(406, 92);
            this.label213.Name = "label213";
            this.label213.Size = new System.Drawing.Size(80, 16);
            this.label213.TabIndex = 19;
            this.label213.Text = "AdjustRGBB";
            // 
            // label212
            // 
            this.label212.Location = new System.Drawing.Point(562, 67);
            this.label212.Name = "label212";
            this.label212.Size = new System.Drawing.Size(49, 16);
            this.label212.TabIndex = 15;
            this.label212.Text = "(1-255)";
            // 
            // txtAdjustRGBG
            // 
            this.txtAdjustRGBG.Location = new System.Drawing.Point(522, 64);
            this.txtAdjustRGBG.MaxLength = 3;
            this.txtAdjustRGBG.Name = "txtAdjustRGBG";
            this.txtAdjustRGBG.Size = new System.Drawing.Size(36, 19);
            this.txtAdjustRGBG.TabIndex = 14;
            this.txtAdjustRGBG.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtAdjustRGBG.TextChanged += new System.EventHandler(this.txtAdjustRGBG_TextChanged);
            // 
            // label211
            // 
            this.label211.Location = new System.Drawing.Point(406, 67);
            this.label211.Name = "label211";
            this.label211.Size = new System.Drawing.Size(80, 16);
            this.label211.TabIndex = 13;
            this.label211.Text = "AdjustRGBG";
            // 
            // label210
            // 
            this.label210.Location = new System.Drawing.Point(562, 42);
            this.label210.Name = "label210";
            this.label210.Size = new System.Drawing.Size(49, 16);
            this.label210.TabIndex = 9;
            this.label210.Text = "(1-255)";
            // 
            // txtAdjustRGBR
            // 
            this.txtAdjustRGBR.Location = new System.Drawing.Point(522, 39);
            this.txtAdjustRGBR.MaxLength = 3;
            this.txtAdjustRGBR.Name = "txtAdjustRGBR";
            this.txtAdjustRGBR.Size = new System.Drawing.Size(36, 19);
            this.txtAdjustRGBR.TabIndex = 8;
            this.txtAdjustRGBR.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtAdjustRGBR.TextChanged += new System.EventHandler(this.txtAdjustRGBR_TextChanged);
            // 
            // label209
            // 
            this.label209.Location = new System.Drawing.Point(406, 42);
            this.label209.Name = "label209";
            this.label209.Size = new System.Drawing.Size(80, 16);
            this.label209.TabIndex = 7;
            this.label209.Text = "AdjustRGBR";
            // 
            // chkAdjustRGB
            // 
            this.chkAdjustRGB.Location = new System.Drawing.Point(522, 17);
            this.chkAdjustRGB.Name = "chkAdjustRGB";
            this.chkAdjustRGB.Size = new System.Drawing.Size(15, 14);
            this.chkAdjustRGB.TabIndex = 3;
            this.chkAdjustRGB.UseVisualStyleBackColor = true;
            // 
            // label208
            // 
            this.label208.Location = new System.Drawing.Point(406, 19);
            this.label208.Name = "label208";
            this.label208.Size = new System.Drawing.Size(80, 16);
            this.label208.TabIndex = 2;
            this.label208.Text = "AdjustRGB";
            // 
            // label207
            // 
            this.label207.Location = new System.Drawing.Point(240, 142);
            this.label207.Name = "label207";
            this.label207.Size = new System.Drawing.Size(62, 16);
            this.label207.TabIndex = 27;
            this.label207.Text = "(0.1-10.0)";
            // 
            // txtColorReproductionCustomGamma
            // 
            this.txtColorReproductionCustomGamma.Location = new System.Drawing.Point(200, 139);
            this.txtColorReproductionCustomGamma.MaxLength = 4;
            this.txtColorReproductionCustomGamma.Name = "txtColorReproductionCustomGamma";
            this.txtColorReproductionCustomGamma.Size = new System.Drawing.Size(36, 19);
            this.txtColorReproductionCustomGamma.TabIndex = 26;
            this.txtColorReproductionCustomGamma.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtColorReproductionCustomGamma.TextChanged += new System.EventHandler(this.txtColorReproductionCustomGamma_TextChanged);
            // 
            // label206
            // 
            this.label206.Location = new System.Drawing.Point(8, 142);
            this.label206.Name = "label206";
            this.label206.Size = new System.Drawing.Size(180, 16);
            this.label206.TabIndex = 25;
            this.label206.Text = "ColorReproductionCustomGamma";
            // 
            // label205
            // 
            this.label205.Location = new System.Drawing.Point(240, 117);
            this.label205.Name = "label205";
            this.label205.Size = new System.Drawing.Size(49, 16);
            this.label205.TabIndex = 24;
            this.label205.Text = "(1-255)";
            // 
            // txtColorReproductionHighlight
            // 
            this.txtColorReproductionHighlight.Location = new System.Drawing.Point(200, 114);
            this.txtColorReproductionHighlight.MaxLength = 3;
            this.txtColorReproductionHighlight.Name = "txtColorReproductionHighlight";
            this.txtColorReproductionHighlight.Size = new System.Drawing.Size(36, 19);
            this.txtColorReproductionHighlight.TabIndex = 23;
            this.txtColorReproductionHighlight.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtColorReproductionHighlight.TextChanged += new System.EventHandler(this.txtColorReproductionHighlight_TextChanged);
            // 
            // label204
            // 
            this.label204.Location = new System.Drawing.Point(8, 117);
            this.label204.Name = "label204";
            this.label204.Size = new System.Drawing.Size(155, 16);
            this.label204.TabIndex = 22;
            this.label204.Text = "ColorReproductionHighlight";
            // 
            // label203
            // 
            this.label203.Location = new System.Drawing.Point(240, 92);
            this.label203.Name = "label203";
            this.label203.Size = new System.Drawing.Size(49, 16);
            this.label203.TabIndex = 18;
            this.label203.Text = "(0-254)";
            // 
            // txtColorReproductionShadow
            // 
            this.txtColorReproductionShadow.Location = new System.Drawing.Point(200, 89);
            this.txtColorReproductionShadow.MaxLength = 3;
            this.txtColorReproductionShadow.Name = "txtColorReproductionShadow";
            this.txtColorReproductionShadow.Size = new System.Drawing.Size(36, 19);
            this.txtColorReproductionShadow.TabIndex = 17;
            this.txtColorReproductionShadow.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtColorReproductionShadow.TextChanged += new System.EventHandler(this.txtColorReproductionShadow_TextChanged);
            // 
            // label202
            // 
            this.label202.Location = new System.Drawing.Point(8, 92);
            this.label202.Name = "label202";
            this.label202.Size = new System.Drawing.Size(155, 16);
            this.label202.TabIndex = 16;
            this.label202.Text = "ColorReproductionShadow";
            // 
            // label201
            // 
            this.label201.Location = new System.Drawing.Point(240, 67);
            this.label201.Name = "label201";
            this.label201.Size = new System.Drawing.Size(49, 16);
            this.label201.TabIndex = 12;
            this.label201.Text = "(1-255)";
            // 
            // txtColorReproductionContrast
            // 
            this.txtColorReproductionContrast.Location = new System.Drawing.Point(200, 64);
            this.txtColorReproductionContrast.MaxLength = 3;
            this.txtColorReproductionContrast.Name = "txtColorReproductionContrast";
            this.txtColorReproductionContrast.Size = new System.Drawing.Size(36, 19);
            this.txtColorReproductionContrast.TabIndex = 11;
            this.txtColorReproductionContrast.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtColorReproductionContrast.TextChanged += new System.EventHandler(this.txtColorReproductionContrast_TextChanged);
            // 
            // label200
            // 
            this.label200.Location = new System.Drawing.Point(8, 67);
            this.label200.Name = "label200";
            this.label200.Size = new System.Drawing.Size(155, 16);
            this.label200.TabIndex = 10;
            this.label200.Text = "ColorReproductionContrast";
            // 
            // label199
            // 
            this.label199.Location = new System.Drawing.Point(240, 42);
            this.label199.Name = "label199";
            this.label199.Size = new System.Drawing.Size(49, 16);
            this.label199.TabIndex = 6;
            this.label199.Text = "(1-255)";
            // 
            // txtColorReproductionBrightness
            // 
            this.txtColorReproductionBrightness.Location = new System.Drawing.Point(200, 39);
            this.txtColorReproductionBrightness.MaxLength = 3;
            this.txtColorReproductionBrightness.Name = "txtColorReproductionBrightness";
            this.txtColorReproductionBrightness.Size = new System.Drawing.Size(36, 19);
            this.txtColorReproductionBrightness.TabIndex = 5;
            this.txtColorReproductionBrightness.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtColorReproductionBrightness.TextChanged += new System.EventHandler(this.txtColorReproductionBrightness_TextChanged);
            // 
            // label198
            // 
            this.label198.Location = new System.Drawing.Point(8, 42);
            this.label198.Name = "label198";
            this.label198.Size = new System.Drawing.Size(160, 16);
            this.label198.TabIndex = 4;
            this.label198.Text = "ColorReproductionBrightness";
            // 
            // cboColorReproduction
            // 
            this.cboColorReproduction.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboColorReproduction.DropDownWidth = 125;
            this.cboColorReproduction.Items.AddRange(new object[] {
            "Contrast",
            "Hue"});
            this.cboColorReproduction.Location = new System.Drawing.Point(200, 13);
            this.cboColorReproduction.MaxDropDownItems = 2;
            this.cboColorReproduction.Name = "cboColorReproduction";
            this.cboColorReproduction.Size = new System.Drawing.Size(121, 20);
            this.cboColorReproduction.TabIndex = 1;
            // 
            // label197
            // 
            this.label197.Location = new System.Drawing.Point(8, 17);
            this.label197.Name = "label197";
            this.label197.Size = new System.Drawing.Size(110, 16);
            this.label197.TabIndex = 0;
            this.label197.Text = "ColorReproduction";
            // 
            // Extention
            // 
            this.Extention.Controls.Add(this.groupBox7);
            this.Extention.Location = new System.Drawing.Point(4, 22);
            this.Extention.Name = "Extention";
            this.Extention.Size = new System.Drawing.Size(728, 595);
            this.Extention.TabIndex = 3;
            this.Extention.Text = "Extension";
            // 
            // groupBox7
            // 
            this.groupBox7.Controls.Add(this.cboPaperProtection);
            this.groupBox7.Controls.Add(this.label222);
            this.groupBox7.Controls.Add(this.cboFrontBackDetection);
            this.groupBox7.Controls.Add(this.label239);
            this.groupBox7.Controls.Add(this.cboManualFeedMode);
            this.groupBox7.Controls.Add(this.label221);
            this.groupBox7.Controls.Add(this.chkDivideLongPage);
            this.groupBox7.Controls.Add(this.label196);
            this.groupBox7.Controls.Add(this.cboSelectOutputSize);
            this.groupBox7.Controls.Add(this.label195);
            this.groupBox7.Controls.Add(this.cboFrontBackMergingTargetMode);
            this.groupBox7.Controls.Add(this.label193);
            this.groupBox7.Controls.Add(this.label192);
            this.groupBox7.Controls.Add(this.txtFrontBackMergingTargetSize);
            this.groupBox7.Controls.Add(this.label191);
            this.groupBox7.Controls.Add(this.cboFrontBackMergingTarget);
            this.groupBox7.Controls.Add(this.label190);
            this.groupBox7.Controls.Add(this.chkFrontBackMergingEnabled);
            this.groupBox7.Controls.Add(this.cboFrontBackMergingRotation);
            this.groupBox7.Controls.Add(this.cboFrontBackMergingLocation);
            this.groupBox7.Controls.Add(this.label189);
            this.groupBox7.Controls.Add(this.label188);
            this.groupBox7.Controls.Add(this.label187);
            this.groupBox7.Controls.Add(this.cboBlankPageSkipTabPage);
            this.groupBox7.Controls.Add(this.label184);
            this.groupBox7.Controls.Add(this.cboDeskewMode);
            this.groupBox7.Controls.Add(this.cboDeskew);
            this.groupBox7.Controls.Add(this.label182);
            this.groupBox7.Controls.Add(this.txtBlankPageIgnoreAreaSize);
            this.groupBox7.Controls.Add(this.label181);
            this.groupBox7.Controls.Add(this.label180);
            this.groupBox7.Controls.Add(this.label177);
            this.groupBox7.Controls.Add(this.cboBlankPageSkipMode);
            this.groupBox7.Controls.Add(this.chkMultiFeedNotice);
            this.groupBox7.Controls.Add(this.label179);
            this.groupBox7.Controls.Add(this.label178);
            this.groupBox7.Controls.Add(this.cboDeskewBackground);
            this.groupBox7.Controls.Add(this.label174);
            this.groupBox7.Controls.Add(this.cboLengthDetection);
            this.groupBox7.Controls.Add(this.chkHwCompression);
            this.groupBox7.Controls.Add(this.label171);
            this.groupBox7.Controls.Add(this.cboBlankPageNotice);
            this.groupBox7.Controls.Add(this.label170);
            this.groupBox7.Controls.Add(this.txtMultiFeedModeChangeSize);
            this.groupBox7.Controls.Add(this.label167);
            this.groupBox7.Controls.Add(this.txtCropMarginSize);
            this.groupBox7.Controls.Add(this.label164);
            this.groupBox7.Controls.Add(this.cboCropPriority);
            this.groupBox7.Controls.Add(this.chkAIQCNotice);
            this.groupBox7.Controls.Add(this.txtFilterSaturationSensitivity);
            this.groupBox7.Controls.Add(this.label156);
            this.groupBox7.Controls.Add(this.label155);
            this.groupBox7.Controls.Add(this.cboOverScan);
            this.groupBox7.Controls.Add(this.label77);
            this.groupBox7.Controls.Add(this.chkAutoBorderDetection);
            this.groupBox7.Controls.Add(this.label71);
            this.groupBox7.Controls.Add(this.txtSkipBlackPage);
            this.groupBox7.Controls.Add(this.label70);
            this.groupBox7.Controls.Add(this.label69);
            this.groupBox7.Controls.Add(this.label68);
            this.groupBox7.Controls.Add(this.txtSkipWhitePage);
            this.groupBox7.Controls.Add(this.label67);
            this.groupBox7.Controls.Add(this.cboFilter);
            this.groupBox7.Controls.Add(this.label66);
            this.groupBox7.Controls.Add(this.cboMultiFeed);
            this.groupBox7.Controls.Add(this.label65);
            this.groupBox7.Controls.Add(this.cboBinding);
            this.groupBox7.Controls.Add(this.label64);
            this.groupBox7.Controls.Add(this.cboJobControl);
            this.groupBox7.Controls.Add(this.label63);
            this.groupBox7.Controls.Add(this.cboJobControlMode);
            this.groupBox7.Controls.Add(this.label118);
            this.groupBox7.Controls.Add(this.txtBlankPageSkip);
            this.groupBox7.Controls.Add(this.label119);
            this.groupBox7.Controls.Add(this.label120);
            this.groupBox7.Controls.Add(this.label161);
            this.groupBox7.Controls.Add(this.label162);
            this.groupBox7.Controls.Add(this.label163);
            this.groupBox7.Controls.Add(this.label166);
            this.groupBox7.Controls.Add(this.label168);
            this.groupBox7.Location = new System.Drawing.Point(8, 8);
            this.groupBox7.Name = "groupBox7";
            this.groupBox7.Size = new System.Drawing.Size(711, 498);
            this.groupBox7.TabIndex = 0;
            this.groupBox7.TabStop = false;
            // 
            // cboPaperProtection
            // 
            this.cboPaperProtection.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboPaperProtection.FormattingEnabled = true;
            this.cboPaperProtection.Items.AddRange(new object[] {
            "OFF",
            "ON",
            "Hardware Setting",
            "Driver Setting"});
            this.cboPaperProtection.Location = new System.Drawing.Point(568, 467);
            this.cboPaperProtection.MaxDropDownItems = 4;
            this.cboPaperProtection.Name = "cboPaperProtection";
            this.cboPaperProtection.Size = new System.Drawing.Size(137, 20);
            this.cboPaperProtection.TabIndex = 79;
            // 
            // label222
            // 
            this.label222.Location = new System.Drawing.Point(406, 470);
            this.label222.Name = "label222";
            this.label222.Size = new System.Drawing.Size(110, 16);
            this.label222.TabIndex = 78;
            this.label222.Text = "PaperProtection";
            // 
            // cboFrontBackDetection
            // 
            this.cboFrontBackDetection.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboFrontBackDetection.FormattingEnabled = true;
            this.cboFrontBackDetection.Items.AddRange(new object[] {
            "None",
            "Swap",
            "Swap & Remove Back Side"});
            this.cboFrontBackDetection.Location = new System.Drawing.Point(171, 439);
            this.cboFrontBackDetection.MaxDropDownItems = 3;
            this.cboFrontBackDetection.Name = "cboFrontBackDetection";
            this.cboFrontBackDetection.Size = new System.Drawing.Size(200, 20);
            this.cboFrontBackDetection.TabIndex = 75;
            // 
            // label221
            // 
            this.label221.Location = new System.Drawing.Point(9, 443);
            this.label221.Name = "label221";
            this.label221.Size = new System.Drawing.Size(133, 14);
            this.label221.TabIndex = 74;
            this.label221.Text = "FrontBackDetection";
            // 
            // cboManualFeedMode
            // 
            this.cboManualFeedMode.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboManualFeedMode.Items.AddRange(new object[] {
            "ON",
            "Hardware Setting"});
            this.cboManualFeedMode.Location = new System.Drawing.Point(171, 467);
            this.cboManualFeedMode.MaxDropDownItems = 2;
            this.cboManualFeedMode.Name = "cboManualFeedMode";
            this.cboManualFeedMode.Size = new System.Drawing.Size(148, 20);
            this.cboManualFeedMode.TabIndex = 77;
            // 
            // label239
            // 
            this.label239.Location = new System.Drawing.Point(9, 470);
            this.label239.Name = "label239";
            this.label239.Size = new System.Drawing.Size(133, 14);
            this.label239.TabIndex = 76;
            this.label239.Text = "ManualFeedMode";
            // 
            // chkDivideLongPage
            // 
            this.chkDivideLongPage.Location = new System.Drawing.Point(568, 399);
            this.chkDivideLongPage.Name = "chkDivideLongPage";
            this.chkDivideLongPage.Size = new System.Drawing.Size(18, 16);
            this.chkDivideLongPage.TabIndex = 71;
            // 
            // label196
            // 
            this.label196.Location = new System.Drawing.Point(406, 399);
            this.label196.Name = "label196";
            this.label196.Size = new System.Drawing.Size(110, 16);
            this.label196.TabIndex = 70;
            this.label196.Text = "DivideLongPage";
            // 
            // cboSelectOutputSize
            // 
            this.cboSelectOutputSize.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboSelectOutputSize.FormattingEnabled = true;
            this.cboSelectOutputSize.Items.AddRange(new object[] {
            "Margin",
            "ScanningArea"});
            this.cboSelectOutputSize.Location = new System.Drawing.Point(171, 351);
            this.cboSelectOutputSize.MaxDropDownItems = 2;
            this.cboSelectOutputSize.Name = "cboSelectOutputSize";
            this.cboSelectOutputSize.Size = new System.Drawing.Size(150, 20);
            this.cboSelectOutputSize.TabIndex = 61;
            // 
            // label195
            // 
            this.label195.Location = new System.Drawing.Point(9, 355);
            this.label195.Name = "label195";
            this.label195.Size = new System.Drawing.Size(121, 16);
            this.label195.TabIndex = 60;
            this.label195.Text = "SelectOutputSize";
            // 
            // cboFrontBackMergingTargetMode
            // 
            this.cboFrontBackMergingTargetMode.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboFrontBackMergingTargetMode.FormattingEnabled = true;
            this.cboFrontBackMergingTargetMode.Items.AddRange(new object[] {
            "Custom",
            "CardSize"});
            this.cboFrontBackMergingTargetMode.Location = new System.Drawing.Point(568, 330);
            this.cboFrontBackMergingTargetMode.MaxDropDownItems = 2;
            this.cboFrontBackMergingTargetMode.Name = "cboFrontBackMergingTargetMode";
            this.cboFrontBackMergingTargetMode.Size = new System.Drawing.Size(97, 20);
            this.cboFrontBackMergingTargetMode.TabIndex = 59;
            // 
            // label193
            // 
            this.label193.AutoSize = true;
            this.label193.Location = new System.Drawing.Point(628, 355);
            this.label193.Name = "label193";
            this.label193.Size = new System.Drawing.Size(26, 12);
            this.label193.TabIndex = 64;
            this.label193.Text = "inch";
            // 
            // label192
            // 
            this.label192.AutoSize = true;
            this.label192.Location = new System.Drawing.Point(406, 354);
            this.label192.Name = "label192";
            this.label192.Size = new System.Drawing.Size(152, 12);
            this.label192.TabIndex = 62;
            this.label192.Text = "FrontBackMergingTargetSize";
            // 
            // txtFrontBackMergingTargetSize
            // 
            this.txtFrontBackMergingTargetSize.Location = new System.Drawing.Point(568, 352);
            this.txtFrontBackMergingTargetSize.MaxLength = 8;
            this.txtFrontBackMergingTargetSize.Name = "txtFrontBackMergingTargetSize";
            this.txtFrontBackMergingTargetSize.Size = new System.Drawing.Size(54, 19);
            this.txtFrontBackMergingTargetSize.TabIndex = 63;
            this.txtFrontBackMergingTargetSize.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtFrontBackMergingTargetSize.TextChanged += new System.EventHandler(this.txtFrontBackMergingTargetSize_TextChanged);
            // 
            // label191
            // 
            this.label191.AutoSize = true;
            this.label191.Location = new System.Drawing.Point(406, 333);
            this.label191.Name = "label191";
            this.label191.Size = new System.Drawing.Size(158, 12);
            this.label191.TabIndex = 58;
            this.label191.Text = "FrontBackMergingTargetMode";
            // 
            // cboFrontBackMergingTarget
            // 
            this.cboFrontBackMergingTarget.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboFrontBackMergingTarget.FormattingEnabled = true;
            this.cboFrontBackMergingTarget.Items.AddRange(new object[] {
            "All",
            "Short",
            "Long"});
            this.cboFrontBackMergingTarget.Location = new System.Drawing.Point(568, 308);
            this.cboFrontBackMergingTarget.MaxDropDownItems = 3;
            this.cboFrontBackMergingTarget.Name = "cboFrontBackMergingTarget";
            this.cboFrontBackMergingTarget.Size = new System.Drawing.Size(97, 20);
            this.cboFrontBackMergingTarget.TabIndex = 54;
            // 
            // label190
            // 
            this.label190.AutoSize = true;
            this.label190.Location = new System.Drawing.Point(406, 311);
            this.label190.Name = "label190";
            this.label190.Size = new System.Drawing.Size(131, 12);
            this.label190.TabIndex = 53;
            this.label190.Text = "FrontBackMergingTarget";
            // 
            // chkFrontBackMergingEnabled
            // 
            this.chkFrontBackMergingEnabled.Location = new System.Drawing.Point(568, 244);
            this.chkFrontBackMergingEnabled.Name = "chkFrontBackMergingEnabled";
            this.chkFrontBackMergingEnabled.Size = new System.Drawing.Size(18, 16);
            this.chkFrontBackMergingEnabled.TabIndex = 42;
            // 
            // cboFrontBackMergingRotation
            // 
            this.cboFrontBackMergingRotation.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboFrontBackMergingRotation.Items.AddRange(new object[] {
            "None",
            "R180"});
            this.cboFrontBackMergingRotation.Location = new System.Drawing.Point(568, 285);
            this.cboFrontBackMergingRotation.MaxDropDownItems = 2;
            this.cboFrontBackMergingRotation.Name = "cboFrontBackMergingRotation";
            this.cboFrontBackMergingRotation.Size = new System.Drawing.Size(97, 20);
            this.cboFrontBackMergingRotation.TabIndex = 50;
            // 
            // cboFrontBackMergingLocation
            // 
            this.cboFrontBackMergingLocation.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboFrontBackMergingLocation.Items.AddRange(new object[] {
            "Upper",
            "Lower",
            "Left",
            "Right"});
            this.cboFrontBackMergingLocation.Location = new System.Drawing.Point(568, 263);
            this.cboFrontBackMergingLocation.MaxDropDownItems = 4;
            this.cboFrontBackMergingLocation.Name = "cboFrontBackMergingLocation";
            this.cboFrontBackMergingLocation.Size = new System.Drawing.Size(97, 20);
            this.cboFrontBackMergingLocation.TabIndex = 46;
            // 
            // label189
            // 
            this.label189.AutoSize = true;
            this.label189.Location = new System.Drawing.Point(406, 288);
            this.label189.Name = "label189";
            this.label189.Size = new System.Drawing.Size(141, 12);
            this.label189.TabIndex = 49;
            this.label189.Text = "FrontBackMergingRotation";
            // 
            // label188
            // 
            this.label188.AutoSize = true;
            this.label188.Location = new System.Drawing.Point(406, 267);
            this.label188.Name = "label188";
            this.label188.Size = new System.Drawing.Size(141, 12);
            this.label188.TabIndex = 45;
            this.label188.Text = "FrontBackMergingLocation";
            // 
            // label187
            // 
            this.label187.AutoSize = true;
            this.label187.Location = new System.Drawing.Point(406, 246);
            this.label187.Name = "label187";
            this.label187.Size = new System.Drawing.Size(138, 12);
            this.label187.TabIndex = 41;
            this.label187.Text = "FrontBackMergingEnabled";
            // 
            // cboBlankPageSkipTabPage
            // 
            this.cboBlankPageSkipTabPage.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboBlankPageSkipTabPage.Items.AddRange(new object[] {
            "All Pages",
            "Skip Tab Pages"});
            this.cboBlankPageSkipTabPage.Location = new System.Drawing.Point(568, 175);
            this.cboBlankPageSkipTabPage.MaxDropDownItems = 2;
            this.cboBlankPageSkipTabPage.Name = "cboBlankPageSkipTabPage";
            this.cboBlankPageSkipTabPage.Size = new System.Drawing.Size(137, 20);
            this.cboBlankPageSkipTabPage.TabIndex = 29;
            // 
            // label184
            // 
            this.label184.Location = new System.Drawing.Point(406, 66);
            this.label184.Name = "label184";
            this.label184.Size = new System.Drawing.Size(136, 14);
            this.label184.TabIndex = 10;
            this.label184.Text = "DeskewMode";
            // 
            // cboDeskewMode
            // 
            this.cboDeskewMode.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboDeskewMode.Items.AddRange(new object[] {
            "OFF",
            "ON"});
            this.cboDeskewMode.Location = new System.Drawing.Point(568, 60);
            this.cboDeskewMode.MaxDropDownItems = 2;
            this.cboDeskewMode.Name = "cboDeskewMode";
            this.cboDeskewMode.Size = new System.Drawing.Size(97, 20);
            this.cboDeskewMode.TabIndex = 11;
            // 
            // cboDeskew
            // 
            this.cboDeskew.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboDeskew.Items.AddRange(new object[] {
            "Edge",
            "Documents",
            "OFF"});
            this.cboDeskew.Location = new System.Drawing.Point(568, 13);
            this.cboDeskew.MaxDropDownItems = 3;
            this.cboDeskew.Name = "cboDeskew";
            this.cboDeskew.Size = new System.Drawing.Size(97, 20);
            this.cboDeskew.TabIndex = 3;
            // 
            // label182
            // 
            this.label182.Location = new System.Drawing.Point(628, 201);
            this.label182.Name = "label182";
            this.label182.Size = new System.Drawing.Size(62, 14);
            this.label182.TabIndex = 35;
            this.label182.Text = "(0-16)";
            // 
            // txtBlankPageIgnoreAreaSize
            // 
            this.txtBlankPageIgnoreAreaSize.Location = new System.Drawing.Point(568, 197);
            this.txtBlankPageIgnoreAreaSize.MaxLength = 2;
            this.txtBlankPageIgnoreAreaSize.Name = "txtBlankPageIgnoreAreaSize";
            this.txtBlankPageIgnoreAreaSize.Size = new System.Drawing.Size(54, 19);
            this.txtBlankPageIgnoreAreaSize.TabIndex = 34;
            this.txtBlankPageIgnoreAreaSize.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtBlankPageIgnoreAreaSize.TextChanged += new System.EventHandler(this.txtBlankPageIgnoreAreaSize_TextChanged);
            // 
            // label181
            // 
            this.label181.Location = new System.Drawing.Point(406, 201);
            this.label181.Name = "label181";
            this.label181.Size = new System.Drawing.Size(170, 14);
            this.label181.TabIndex = 33;
            this.label181.Text = "BlankPageIgnoreAreaSize";
            // 
            // label180
            // 
            this.label180.Location = new System.Drawing.Point(406, 178);
            this.label180.Name = "label180";
            this.label180.Size = new System.Drawing.Size(150, 14);
            this.label180.TabIndex = 28;
            this.label180.Text = "BlankPageSkipTabPage";
            // 
            // label177
            // 
            this.label177.Location = new System.Drawing.Point(406, 156);
            this.label177.Name = "label177";
            this.label177.Size = new System.Drawing.Size(121, 14);
            this.label177.TabIndex = 24;
            this.label177.Text = "BlankPageSkipMode";
            // 
            // cboBlankPageSkipMode
            // 
            this.cboBlankPageSkipMode.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboBlankPageSkipMode.Items.AddRange(new object[] {
            "Sensitivity",
            "Black & White Dots Ratio"});
            this.cboBlankPageSkipMode.Location = new System.Drawing.Point(533, 150);
            this.cboBlankPageSkipMode.MaxDropDownItems = 2;
            this.cboBlankPageSkipMode.Name = "cboBlankPageSkipMode";
            this.cboBlankPageSkipMode.Size = new System.Drawing.Size(172, 20);
            this.cboBlankPageSkipMode.TabIndex = 25;
            // 
            // chkMultiFeedNotice
            // 
            this.chkMultiFeedNotice.Location = new System.Drawing.Point(568, 87);
            this.chkMultiFeedNotice.Name = "chkMultiFeedNotice";
            this.chkMultiFeedNotice.Size = new System.Drawing.Size(18, 16);
            this.chkMultiFeedNotice.TabIndex = 15;
            // 
            // label179
            // 
            this.label179.Location = new System.Drawing.Point(406, 89);
            this.label179.Name = "label179";
            this.label179.Size = new System.Drawing.Size(99, 14);
            this.label179.TabIndex = 14;
            this.label179.Text = "MultiFeedNotice";
            // 
            // label178
            // 
            this.label178.Location = new System.Drawing.Point(406, 42);
            this.label178.Name = "label178";
            this.label178.Size = new System.Drawing.Size(121, 14);
            this.label178.TabIndex = 6;
            this.label178.Text = "DeskewBackground";
            // 
            // cboDeskewBackground
            // 
            this.cboDeskewBackground.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboDeskewBackground.Items.AddRange(new object[] {
            "None",
            "Background"});
            this.cboDeskewBackground.Location = new System.Drawing.Point(568, 36);
            this.cboDeskewBackground.MaxDropDownItems = 2;
            this.cboDeskewBackground.Name = "cboDeskewBackground";
            this.cboDeskewBackground.Size = new System.Drawing.Size(97, 20);
            this.cboDeskewBackground.TabIndex = 7;
            // 
            // label174
            // 
            this.label174.Location = new System.Drawing.Point(9, 399);
            this.label174.Name = "label174";
            this.label174.Size = new System.Drawing.Size(121, 14);
            this.label174.TabIndex = 68;
            this.label174.Text = "LengthDetection";
            // 
            // cboLengthDetection
            // 
            this.cboLengthDetection.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboLengthDetection.Items.AddRange(new object[] {
            "None",
            "LengthBlack",
            "LengthBlackOVS"});
            this.cboLengthDetection.Location = new System.Drawing.Point(171, 396);
            this.cboLengthDetection.MaxDropDownItems = 3;
            this.cboLengthDetection.Name = "cboLengthDetection";
            this.cboLengthDetection.Size = new System.Drawing.Size(150, 20);
            this.cboLengthDetection.TabIndex = 69;
            // 
            // chkHwCompression
            // 
            this.chkHwCompression.Location = new System.Drawing.Point(171, 420);
            this.chkHwCompression.Name = "chkHwCompression";
            this.chkHwCompression.Size = new System.Drawing.Size(18, 16);
            this.chkHwCompression.TabIndex = 73;
            // 
            // label171
            // 
            this.label171.Location = new System.Drawing.Point(9, 421);
            this.label171.Name = "label171";
            this.label171.Size = new System.Drawing.Size(99, 14);
            this.label171.TabIndex = 72;
            this.label171.Text = "HwCompression";
            // 
            // cboBlankPageNotice
            // 
            this.cboBlankPageNotice.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboBlankPageNotice.Items.AddRange(new object[] {
            "OFF",
            "ON"});
            this.cboBlankPageNotice.Location = new System.Drawing.Point(172, 175);
            this.cboBlankPageNotice.Name = "cboBlankPageNotice";
            this.cboBlankPageNotice.Size = new System.Drawing.Size(79, 20);
            this.cboBlankPageNotice.TabIndex = 27;
            // 
            // label170
            // 
            this.label170.Location = new System.Drawing.Point(9, 178);
            this.label170.Name = "label170";
            this.label170.Size = new System.Drawing.Size(99, 14);
            this.label170.TabIndex = 26;
            this.label170.Text = "BlankPageNotice";
            // 
            // txtMultiFeedModeChangeSize
            // 
            this.txtMultiFeedModeChangeSize.Location = new System.Drawing.Point(172, 374);
            this.txtMultiFeedModeChangeSize.MaxLength = 8;
            this.txtMultiFeedModeChangeSize.Name = "txtMultiFeedModeChangeSize";
            this.txtMultiFeedModeChangeSize.Size = new System.Drawing.Size(45, 19);
            this.txtMultiFeedModeChangeSize.TabIndex = 66;
            this.txtMultiFeedModeChangeSize.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtMultiFeedModeChangeSize.TextChanged += new System.EventHandler(this.txtMultiFeedModeChangeSize_TextChanged);
            // 
            // label167
            // 
            this.label167.Location = new System.Drawing.Point(221, 377);
            this.label167.Name = "label167";
            this.label167.Size = new System.Drawing.Size(36, 16);
            this.label167.TabIndex = 67;
            this.label167.Text = "inch";
            // 
            // txtCropMarginSize
            // 
            this.txtCropMarginSize.Location = new System.Drawing.Point(171, 329);
            this.txtCropMarginSize.MaxLength = 4;
            this.txtCropMarginSize.Name = "txtCropMarginSize";
            this.txtCropMarginSize.Size = new System.Drawing.Size(36, 19);
            this.txtCropMarginSize.TabIndex = 56;
            this.txtCropMarginSize.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtCropMarginSize.TextChanged += new System.EventHandler(this.txtCropMarginSize_TextChanged);
            // 
            // label164
            // 
            this.label164.Location = new System.Drawing.Point(9, 333);
            this.label164.Name = "label164";
            this.label164.Size = new System.Drawing.Size(87, 16);
            this.label164.TabIndex = 55;
            this.label164.Text = "CropMarginSize";
            // 
            // cboCropPriority
            // 
            this.cboCropPriority.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboCropPriority.Items.AddRange(new object[] {
            "Speed",
            "Accuracy"});
            this.cboCropPriority.Location = new System.Drawing.Point(172, 305);
            this.cboCropPriority.MaxDropDownItems = 2;
            this.cboCropPriority.Name = "cboCropPriority";
            this.cboCropPriority.Size = new System.Drawing.Size(79, 20);
            this.cboCropPriority.TabIndex = 52;
            // 
            // chkAIQCNotice
            // 
            this.chkAIQCNotice.Location = new System.Drawing.Point(172, 286);
            this.chkAIQCNotice.Name = "chkAIQCNotice";
            this.chkAIQCNotice.Size = new System.Drawing.Size(18, 16);
            this.chkAIQCNotice.TabIndex = 48;
            // 
            // txtFilterSaturationSensitivity
            // 
            this.txtFilterSaturationSensitivity.Location = new System.Drawing.Point(172, 129);
            this.txtFilterSaturationSensitivity.MaxLength = 3;
            this.txtFilterSaturationSensitivity.Name = "txtFilterSaturationSensitivity";
            this.txtFilterSaturationSensitivity.Size = new System.Drawing.Size(54, 19);
            this.txtFilterSaturationSensitivity.TabIndex = 19;
            this.txtFilterSaturationSensitivity.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtFilterSaturationSensitivity.TextChanged += new System.EventHandler(this.txtFilterSaturationSensitivity_TextChanged);
            // 
            // label156
            // 
            this.label156.Location = new System.Drawing.Point(232, 132);
            this.label156.Name = "label156";
            this.label156.Size = new System.Drawing.Size(62, 14);
            this.label156.TabIndex = 20;
            this.label156.Text = "(0-100)";
            // 
            // label155
            // 
            this.label155.Location = new System.Drawing.Point(9, 132);
            this.label155.Name = "label155";
            this.label155.Size = new System.Drawing.Size(176, 14);
            this.label155.TabIndex = 18;
            this.label155.Text = "FilterSaturationSensitivity ";
            // 
            // cboOverScan
            // 
            this.cboOverScan.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboOverScan.Items.AddRange(new object[] {
            "OFF",
            "ON"});
            this.cboOverScan.Location = new System.Drawing.Point(171, 264);
            this.cboOverScan.Name = "cboOverScan";
            this.cboOverScan.Size = new System.Drawing.Size(79, 20);
            this.cboOverScan.TabIndex = 44;
            // 
            // label77
            // 
            this.label77.Location = new System.Drawing.Point(9, 267);
            this.label77.Name = "label77";
            this.label77.Size = new System.Drawing.Size(99, 14);
            this.label77.TabIndex = 43;
            this.label77.Text = "OverScan";
            // 
            // chkAutoBorderDetection
            // 
            this.chkAutoBorderDetection.Location = new System.Drawing.Point(172, 243);
            this.chkAutoBorderDetection.Name = "chkAutoBorderDetection";
            this.chkAutoBorderDetection.Size = new System.Drawing.Size(18, 16);
            this.chkAutoBorderDetection.TabIndex = 40;
            // 
            // label71
            // 
            this.label71.Location = new System.Drawing.Point(9, 246);
            this.label71.Name = "label71";
            this.label71.Size = new System.Drawing.Size(121, 14);
            this.label71.TabIndex = 39;
            this.label71.Text = "AutoBorderDetection";
            // 
            // txtSkipBlackPage
            // 
            this.txtSkipBlackPage.Location = new System.Drawing.Point(172, 220);
            this.txtSkipBlackPage.MaxLength = 2;
            this.txtSkipBlackPage.Name = "txtSkipBlackPage";
            this.txtSkipBlackPage.Size = new System.Drawing.Size(54, 19);
            this.txtSkipBlackPage.TabIndex = 37;
            this.txtSkipBlackPage.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtSkipBlackPage.TextChanged += new System.EventHandler(this.txtSkipBlackPage_TextChanged);
            // 
            // label70
            // 
            this.label70.Location = new System.Drawing.Point(9, 224);
            this.label70.Name = "label70";
            this.label70.Size = new System.Drawing.Size(99, 14);
            this.label70.TabIndex = 36;
            this.label70.Text = "SkipBlackPage";
            // 
            // label69
            // 
            this.label69.Location = new System.Drawing.Point(232, 223);
            this.label69.Name = "label69";
            this.label69.Size = new System.Drawing.Size(62, 14);
            this.label69.TabIndex = 38;
            this.label69.Text = "(0-50)";
            // 
            // label68
            // 
            this.label68.Location = new System.Drawing.Point(9, 201);
            this.label68.Name = "label68";
            this.label68.Size = new System.Drawing.Size(99, 14);
            this.label68.TabIndex = 30;
            this.label68.Text = "SkipWhitePage";
            // 
            // txtSkipWhitePage
            // 
            this.txtSkipWhitePage.Location = new System.Drawing.Point(172, 197);
            this.txtSkipWhitePage.MaxLength = 2;
            this.txtSkipWhitePage.Name = "txtSkipWhitePage";
            this.txtSkipWhitePage.Size = new System.Drawing.Size(54, 19);
            this.txtSkipWhitePage.TabIndex = 31;
            this.txtSkipWhitePage.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtSkipWhitePage.TextChanged += new System.EventHandler(this.txtSkipWhitePage_TextChanged);
            // 
            // label67
            // 
            this.label67.Location = new System.Drawing.Point(232, 202);
            this.label67.Name = "label67";
            this.label67.Size = new System.Drawing.Size(62, 14);
            this.label67.TabIndex = 32;
            this.label67.Text = "(0-50)";
            // 
            // cboFilter
            // 
            this.cboFilter.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboFilter.ItemHeight = 12;
            this.cboFilter.Items.AddRange(new object[] {
            "Green",
            "Red",
            "Blue",
            "None",
            "White",
            "Saturation",
            "Specified by device",
            "Custom1",
            "Custom2",
            "Custom3",
            "Custom4"});
            this.cboFilter.Location = new System.Drawing.Point(172, 106);
            this.cboFilter.MaxDropDownItems = 11;
            this.cboFilter.Name = "cboFilter";
            this.cboFilter.Size = new System.Drawing.Size(148, 20);
            this.cboFilter.TabIndex = 17;
            // 
            // label66
            // 
            this.label66.Location = new System.Drawing.Point(9, 109);
            this.label66.Name = "label66";
            this.label66.Size = new System.Drawing.Size(107, 14);
            this.label66.TabIndex = 16;
            this.label66.Text = "Filter";
            // 
            // cboMultiFeed
            // 
            this.cboMultiFeed.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboMultiFeed.Items.AddRange(new object[] {
            "None",
            "Mode0",
            "Mode1",
            "Mode2",
            "Mode3"});
            this.cboMultiFeed.Location = new System.Drawing.Point(172, 83);
            this.cboMultiFeed.Name = "cboMultiFeed";
            this.cboMultiFeed.Size = new System.Drawing.Size(79, 20);
            this.cboMultiFeed.TabIndex = 13;
            // 
            // label65
            // 
            this.label65.Location = new System.Drawing.Point(9, 85);
            this.label65.Name = "label65";
            this.label65.Size = new System.Drawing.Size(107, 14);
            this.label65.TabIndex = 12;
            this.label65.Text = "MultiFeed";
            // 
            // cboBinding
            // 
            this.cboBinding.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboBinding.Items.AddRange(new object[] {
            "Side",
            "Height"});
            this.cboBinding.Location = new System.Drawing.Point(172, 60);
            this.cboBinding.Name = "cboBinding";
            this.cboBinding.Size = new System.Drawing.Size(79, 20);
            this.cboBinding.TabIndex = 9;
            // 
            // label64
            // 
            this.label64.Location = new System.Drawing.Point(9, 62);
            this.label64.Name = "label64";
            this.label64.Size = new System.Drawing.Size(107, 14);
            this.label64.TabIndex = 8;
            this.label64.Text = "Binding";
            // 
            // cboJobControl
            // 
            this.cboJobControl.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboJobControl.Items.AddRange(new object[] {
            "None",
            "Include and Continue",
            "Include and Stop",
            "Exclude and Continue",
            "Exclude and Stop"});
            this.cboJobControl.Location = new System.Drawing.Point(172, 13);
            this.cboJobControl.Name = "cboJobControl";
            this.cboJobControl.Size = new System.Drawing.Size(149, 20);
            this.cboJobControl.TabIndex = 1;
            // 
            // label63
            // 
            this.label63.Location = new System.Drawing.Point(9, 16);
            this.label63.Name = "label63";
            this.label63.Size = new System.Drawing.Size(107, 14);
            this.label63.TabIndex = 0;
            this.label63.Text = "JobControl";
            // 
            // cboJobControlMode
            // 
            this.cboJobControlMode.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboJobControlMode.Items.AddRange(new object[] {
            "Special Document",
            "Patch Code Document"});
            this.cboJobControlMode.Location = new System.Drawing.Point(172, 36);
            this.cboJobControlMode.Name = "cboJobControlMode";
            this.cboJobControlMode.Size = new System.Drawing.Size(149, 20);
            this.cboJobControlMode.TabIndex = 5;
            // 
            // label118
            // 
            this.label118.Location = new System.Drawing.Point(9, 39);
            this.label118.Name = "label118";
            this.label118.Size = new System.Drawing.Size(107, 14);
            this.label118.TabIndex = 4;
            this.label118.Text = "JobControlMode";
            // 
            // txtBlankPageSkip
            // 
            this.txtBlankPageSkip.Location = new System.Drawing.Point(172, 153);
            this.txtBlankPageSkip.MaxLength = 2;
            this.txtBlankPageSkip.Name = "txtBlankPageSkip";
            this.txtBlankPageSkip.Size = new System.Drawing.Size(54, 19);
            this.txtBlankPageSkip.TabIndex = 22;
            this.txtBlankPageSkip.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtBlankPageSkip.TextChanged += new System.EventHandler(this.txtBlankPageSkip_TextChanged);
            // 
            // label119
            // 
            this.label119.Location = new System.Drawing.Point(232, 156);
            this.label119.Name = "label119";
            this.label119.Size = new System.Drawing.Size(62, 14);
            this.label119.TabIndex = 23;
            this.label119.Text = "(0-11)";
            // 
            // label120
            // 
            this.label120.Location = new System.Drawing.Point(9, 156);
            this.label120.Name = "label120";
            this.label120.Size = new System.Drawing.Size(99, 14);
            this.label120.TabIndex = 21;
            this.label120.Text = "BlankPageSkip";
            // 
            // label161
            // 
            this.label161.Location = new System.Drawing.Point(9, 311);
            this.label161.Name = "label161";
            this.label161.Size = new System.Drawing.Size(99, 14);
            this.label161.TabIndex = 51;
            this.label161.Text = "CropPriority";
            // 
            // label162
            // 
            this.label162.Location = new System.Drawing.Point(9, 288);
            this.label162.Name = "label162";
            this.label162.Size = new System.Drawing.Size(99, 14);
            this.label162.TabIndex = 47;
            this.label162.Text = "AIQCNotice";
            // 
            // label163
            // 
            this.label163.Location = new System.Drawing.Point(406, 19);
            this.label163.Name = "label163";
            this.label163.Size = new System.Drawing.Size(121, 14);
            this.label163.TabIndex = 2;
            this.label163.Text = "Deskew";
            // 
            // label166
            // 
            this.label166.Location = new System.Drawing.Point(9, 377);
            this.label166.Name = "label166";
            this.label166.Size = new System.Drawing.Size(150, 16);
            this.label166.TabIndex = 65;
            this.label166.Text = "MultiFeedModeChangeSize";
            // 
            // label168
            // 
            this.label168.Location = new System.Drawing.Point(221, 333);
            this.label168.Name = "label168";
            this.label168.Size = new System.Drawing.Size(62, 16);
            this.label168.TabIndex = 57;
            this.label168.Text = "(-5.0 - 5.0)";
            // 
            // Endorser
            // 
            this.Endorser.Controls.Add(this.groupBox6);
            this.Endorser.Controls.Add(this.groupBox14);
            this.Endorser.Location = new System.Drawing.Point(4, 22);
            this.Endorser.Name = "Endorser";
            this.Endorser.Size = new System.Drawing.Size(728, 595);
            this.Endorser.TabIndex = 4;
            this.Endorser.Text = "Endorser";
            // 
            // groupBox6
            // 
            this.groupBox6.Controls.Add(this.cboEndorserDialog);
            this.groupBox6.Controls.Add(this.label194);
            this.groupBox6.Controls.Add(this.cboEndorserFont);
            this.groupBox6.Controls.Add(this.label117);
            this.groupBox6.Controls.Add(this.cboEndorserCountDirection);
            this.groupBox6.Controls.Add(this.label62);
            this.groupBox6.Controls.Add(this.cboEndorserCountStep);
            this.groupBox6.Controls.Add(this.label61);
            this.groupBox6.Controls.Add(this.cboEndorserDirection);
            this.groupBox6.Controls.Add(this.label60);
            this.groupBox6.Controls.Add(this.txtEndorserOffset);
            this.groupBox6.Controls.Add(this.label59);
            this.groupBox6.Controls.Add(this.label58);
            this.groupBox6.Controls.Add(this.txtEndorserString);
            this.groupBox6.Controls.Add(this.label57);
            this.groupBox6.Controls.Add(this.label56);
            this.groupBox6.Controls.Add(this.txtEndorserCounter);
            this.groupBox6.Controls.Add(this.label55);
            this.groupBox6.Controls.Add(this.chkEndorser);
            this.groupBox6.Controls.Add(this.label54);
            this.groupBox6.Controls.Add(this.chkSynchronizationDigitalEndorser);
            this.groupBox6.Controls.Add(this.label144);
            this.groupBox6.Location = new System.Drawing.Point(9, 7);
            this.groupBox6.Name = "groupBox6";
            this.groupBox6.Size = new System.Drawing.Size(711, 251);
            this.groupBox6.TabIndex = 1;
            this.groupBox6.TabStop = false;
            // 
            // cboEndorserDialog
            // 
            this.cboEndorserDialog.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboEndorserDialog.FormattingEnabled = true;
            this.cboEndorserDialog.Items.AddRange(new object[] {
            "OFF",
            "ON"});
            this.cboEndorserDialog.Location = new System.Drawing.Point(192, 35);
            this.cboEndorserDialog.MaxDropDownItems = 2;
            this.cboEndorserDialog.Name = "cboEndorserDialog";
            this.cboEndorserDialog.Size = new System.Drawing.Size(79, 20);
            this.cboEndorserDialog.TabIndex = 3;
            // 
            // label194
            // 
            this.label194.AutoSize = true;
            this.label194.Location = new System.Drawing.Point(8, 38);
            this.label194.Name = "label194";
            this.label194.Size = new System.Drawing.Size(82, 12);
            this.label194.TabIndex = 2;
            this.label194.Text = "EndorserDialog";
            // 
            // cboEndorserFont
            // 
            this.cboEndorserFont.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboEndorserFont.Items.AddRange(new object[] {
            "Horizontal",
            "Vertical",
            "Horizontal-Narrow",
            "Horizontal-Bold",
            "Vertical-Bold"});
            this.cboEndorserFont.Location = new System.Drawing.Point(192, 196);
            this.cboEndorserFont.Name = "cboEndorserFont";
            this.cboEndorserFont.Size = new System.Drawing.Size(152, 20);
            this.cboEndorserFont.TabIndex = 19;
            // 
            // label117
            // 
            this.label117.Location = new System.Drawing.Point(8, 200);
            this.label117.Name = "label117";
            this.label117.Size = new System.Drawing.Size(99, 14);
            this.label117.TabIndex = 18;
            this.label117.Text = "EndorserFont";
            // 
            // cboEndorserCountDirection
            // 
            this.cboEndorserCountDirection.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboEndorserCountDirection.Items.AddRange(new object[] {
            "Add",
            "Del"});
            this.cboEndorserCountDirection.Location = new System.Drawing.Point(192, 173);
            this.cboEndorserCountDirection.Name = "cboEndorserCountDirection";
            this.cboEndorserCountDirection.Size = new System.Drawing.Size(65, 20);
            this.cboEndorserCountDirection.TabIndex = 17;
            // 
            // label62
            // 
            this.label62.Location = new System.Drawing.Point(8, 176);
            this.label62.Name = "label62";
            this.label62.Size = new System.Drawing.Size(130, 14);
            this.label62.TabIndex = 16;
            this.label62.Text = "EndorserCountDirection";
            // 
            // cboEndorserCountStep
            // 
            this.cboEndorserCountStep.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboEndorserCountStep.Items.AddRange(new object[] {
            "None",
            "1Step",
            "2Step"});
            this.cboEndorserCountStep.Location = new System.Drawing.Point(192, 150);
            this.cboEndorserCountStep.Name = "cboEndorserCountStep";
            this.cboEndorserCountStep.Size = new System.Drawing.Size(79, 20);
            this.cboEndorserCountStep.TabIndex = 15;
            // 
            // label61
            // 
            this.label61.Location = new System.Drawing.Point(8, 153);
            this.label61.Name = "label61";
            this.label61.Size = new System.Drawing.Size(107, 14);
            this.label61.TabIndex = 14;
            this.label61.Text = "EndorserCountStep";
            // 
            // cboEndorserDirection
            // 
            this.cboEndorserDirection.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboEndorserDirection.DropDownWidth = 79;
            this.cboEndorserDirection.Items.AddRange(new object[] {
            "ToUnder",
            "ToUpper"});
            this.cboEndorserDirection.Location = new System.Drawing.Point(192, 127);
            this.cboEndorserDirection.Name = "cboEndorserDirection";
            this.cboEndorserDirection.Size = new System.Drawing.Size(79, 20);
            this.cboEndorserDirection.TabIndex = 13;
            // 
            // label60
            // 
            this.label60.Location = new System.Drawing.Point(8, 130);
            this.label60.Name = "label60";
            this.label60.Size = new System.Drawing.Size(99, 14);
            this.label60.TabIndex = 12;
            this.label60.Text = "EndorserDirection";
            // 
            // txtEndorserOffset
            // 
            this.txtEndorserOffset.Location = new System.Drawing.Point(192, 104);
            this.txtEndorserOffset.MaxLength = 8;
            this.txtEndorserOffset.Name = "txtEndorserOffset";
            this.txtEndorserOffset.Size = new System.Drawing.Size(54, 19);
            this.txtEndorserOffset.TabIndex = 10;
            this.txtEndorserOffset.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtEndorserOffset.TextChanged += new System.EventHandler(this.txtEndorserOffset_TextChanged);
            // 
            // label59
            // 
            this.label59.Location = new System.Drawing.Point(8, 107);
            this.label59.Name = "label59";
            this.label59.Size = new System.Drawing.Size(99, 14);
            this.label59.TabIndex = 9;
            this.label59.Text = "EndorserOffset";
            // 
            // label58
            // 
            this.label58.Location = new System.Drawing.Point(256, 108);
            this.label58.Name = "label58";
            this.label58.Size = new System.Drawing.Size(36, 16);
            this.label58.TabIndex = 11;
            this.label58.Text = "inch";
            // 
            // txtEndorserString
            // 
            this.txtEndorserString.Location = new System.Drawing.Point(192, 81);
            this.txtEndorserString.MaxLength = 35;
            this.txtEndorserString.Name = "txtEndorserString";
            this.txtEndorserString.Size = new System.Drawing.Size(415, 19);
            this.txtEndorserString.TabIndex = 8;
            this.txtEndorserString.TextChanged += new System.EventHandler(this.txtEndorserString_TextChanged);
            // 
            // label57
            // 
            this.label57.Location = new System.Drawing.Point(8, 84);
            this.label57.Name = "label57";
            this.label57.Size = new System.Drawing.Size(99, 14);
            this.label57.TabIndex = 7;
            this.label57.Text = "EndorserString";
            // 
            // label56
            // 
            this.label56.Location = new System.Drawing.Point(256, 62);
            this.label56.Name = "label56";
            this.label56.Size = new System.Drawing.Size(113, 14);
            this.label56.TabIndex = 6;
            this.label56.Text = "(-1, 0-99999999)";
            // 
            // txtEndorserCounter
            // 
            this.txtEndorserCounter.Location = new System.Drawing.Point(192, 58);
            this.txtEndorserCounter.MaxLength = 8;
            this.txtEndorserCounter.Name = "txtEndorserCounter";
            this.txtEndorserCounter.Size = new System.Drawing.Size(54, 19);
            this.txtEndorserCounter.TabIndex = 5;
            this.txtEndorserCounter.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtEndorserCounter.TextChanged += new System.EventHandler(this.txtEndorserCounter_TextChanged);
            // 
            // label55
            // 
            this.label55.Location = new System.Drawing.Point(8, 61);
            this.label55.Name = "label55";
            this.label55.Size = new System.Drawing.Size(99, 14);
            this.label55.TabIndex = 4;
            this.label55.Text = "EndorserCounter";
            // 
            // chkEndorser
            // 
            this.chkEndorser.Location = new System.Drawing.Point(192, 15);
            this.chkEndorser.Name = "chkEndorser";
            this.chkEndorser.Size = new System.Drawing.Size(18, 16);
            this.chkEndorser.TabIndex = 1;
            this.chkEndorser.CheckedChanged += new System.EventHandler(this.chkEndorser_CheckedChanged);
            // 
            // label54
            // 
            this.label54.Location = new System.Drawing.Point(8, 17);
            this.label54.Name = "label54";
            this.label54.Size = new System.Drawing.Size(99, 14);
            this.label54.TabIndex = 0;
            this.label54.Text = "Endorser";
            // 
            // chkSynchronizationDigitalEndorser
            // 
            this.chkSynchronizationDigitalEndorser.Location = new System.Drawing.Point(192, 223);
            this.chkSynchronizationDigitalEndorser.Name = "chkSynchronizationDigitalEndorser";
            this.chkSynchronizationDigitalEndorser.Size = new System.Drawing.Size(18, 16);
            this.chkSynchronizationDigitalEndorser.TabIndex = 21;
            // 
            // label144
            // 
            this.label144.Location = new System.Drawing.Point(8, 223);
            this.label144.Name = "label144";
            this.label144.Size = new System.Drawing.Size(184, 14);
            this.label144.TabIndex = 20;
            this.label144.Text = "SynchronizationDigitalEndorser";
            // 
            // groupBox14
            // 
            this.groupBox14.Controls.Add(this.cboDigitalEndorserDirection);
            this.groupBox14.Controls.Add(this.label176);
            this.groupBox14.Controls.Add(this.cboDigitalEndorserCountDirection);
            this.groupBox14.Controls.Add(this.label146);
            this.groupBox14.Controls.Add(this.cboDigitalEndorserCountStep);
            this.groupBox14.Controls.Add(this.label147);
            this.groupBox14.Controls.Add(this.txtDigitalEndorserXOffset);
            this.groupBox14.Controls.Add(this.label149);
            this.groupBox14.Controls.Add(this.label150);
            this.groupBox14.Controls.Add(this.txtDigitalEndorserString);
            this.groupBox14.Controls.Add(this.label151);
            this.groupBox14.Controls.Add(this.label152);
            this.groupBox14.Controls.Add(this.txtDigitalEndorserCounter);
            this.groupBox14.Controls.Add(this.label153);
            this.groupBox14.Controls.Add(this.chkDigitalEndorser);
            this.groupBox14.Controls.Add(this.label154);
            this.groupBox14.Controls.Add(this.label145);
            this.groupBox14.Controls.Add(this.label148);
            this.groupBox14.Controls.Add(this.txtDigitalEndorserYOffset);
            this.groupBox14.Location = new System.Drawing.Point(9, 261);
            this.groupBox14.Name = "groupBox14";
            this.groupBox14.Size = new System.Drawing.Size(711, 209);
            this.groupBox14.TabIndex = 1;
            this.groupBox14.TabStop = false;
            // 
            // cboDigitalEndorserDirection
            // 
            this.cboDigitalEndorserDirection.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboDigitalEndorserDirection.Items.AddRange(new object[] {
            "Top to Bottom",
            "Left to Right"});
            this.cboDigitalEndorserDirection.Location = new System.Drawing.Point(192, 129);
            this.cboDigitalEndorserDirection.Name = "cboDigitalEndorserDirection";
            this.cboDigitalEndorserDirection.Size = new System.Drawing.Size(152, 20);
            this.cboDigitalEndorserDirection.TabIndex = 14;
            // 
            // label176
            // 
            this.label176.Location = new System.Drawing.Point(8, 132);
            this.label176.Name = "label176";
            this.label176.Size = new System.Drawing.Size(168, 14);
            this.label176.TabIndex = 13;
            this.label176.Text = "DigitalEndorserDirection";
            // 
            // cboDigitalEndorserCountDirection
            // 
            this.cboDigitalEndorserCountDirection.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboDigitalEndorserCountDirection.Items.AddRange(new object[] {
            "Add",
            "Del"});
            this.cboDigitalEndorserCountDirection.Location = new System.Drawing.Point(192, 176);
            this.cboDigitalEndorserCountDirection.Name = "cboDigitalEndorserCountDirection";
            this.cboDigitalEndorserCountDirection.Size = new System.Drawing.Size(65, 20);
            this.cboDigitalEndorserCountDirection.TabIndex = 18;
            // 
            // label146
            // 
            this.label146.Location = new System.Drawing.Point(8, 179);
            this.label146.Name = "label146";
            this.label146.Size = new System.Drawing.Size(176, 14);
            this.label146.TabIndex = 17;
            this.label146.Text = "DigitalEndorserCountDirection";
            // 
            // cboDigitalEndorserCountStep
            // 
            this.cboDigitalEndorserCountStep.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboDigitalEndorserCountStep.Items.AddRange(new object[] {
            "None",
            "1Step",
            "2Step"});
            this.cboDigitalEndorserCountStep.Location = new System.Drawing.Point(192, 153);
            this.cboDigitalEndorserCountStep.Name = "cboDigitalEndorserCountStep";
            this.cboDigitalEndorserCountStep.Size = new System.Drawing.Size(79, 20);
            this.cboDigitalEndorserCountStep.TabIndex = 16;
            // 
            // label147
            // 
            this.label147.Location = new System.Drawing.Point(8, 156);
            this.label147.Name = "label147";
            this.label147.Size = new System.Drawing.Size(168, 14);
            this.label147.TabIndex = 15;
            this.label147.Text = "DigitalEndorserCountStep";
            // 
            // txtDigitalEndorserXOffset
            // 
            this.txtDigitalEndorserXOffset.Location = new System.Drawing.Point(192, 81);
            this.txtDigitalEndorserXOffset.MaxLength = 8;
            this.txtDigitalEndorserXOffset.Name = "txtDigitalEndorserXOffset";
            this.txtDigitalEndorserXOffset.Size = new System.Drawing.Size(54, 19);
            this.txtDigitalEndorserXOffset.TabIndex = 8;
            this.txtDigitalEndorserXOffset.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtDigitalEndorserXOffset.TextChanged += new System.EventHandler(this.txtDigitalEndorserXOffset_TextChanged);
            // 
            // label149
            // 
            this.label149.Location = new System.Drawing.Point(8, 84);
            this.label149.Name = "label149";
            this.label149.Size = new System.Drawing.Size(168, 14);
            this.label149.TabIndex = 7;
            this.label149.Text = "DigitalEndorserXOffset";
            // 
            // label150
            // 
            this.label150.Location = new System.Drawing.Point(256, 85);
            this.label150.Name = "label150";
            this.label150.Size = new System.Drawing.Size(36, 16);
            this.label150.TabIndex = 9;
            this.label150.Text = "inch";
            // 
            // txtDigitalEndorserString
            // 
            this.txtDigitalEndorserString.Location = new System.Drawing.Point(192, 58);
            this.txtDigitalEndorserString.MaxLength = 245;
            this.txtDigitalEndorserString.Name = "txtDigitalEndorserString";
            this.txtDigitalEndorserString.Size = new System.Drawing.Size(415, 19);
            this.txtDigitalEndorserString.TabIndex = 6;
            this.txtDigitalEndorserString.TextChanged += new System.EventHandler(this.txtDigitalEndorserString_TextChanged);
            // 
            // label151
            // 
            this.label151.Location = new System.Drawing.Point(8, 61);
            this.label151.Name = "label151";
            this.label151.Size = new System.Drawing.Size(128, 14);
            this.label151.TabIndex = 5;
            this.label151.Text = "DigitalEndorserString";
            // 
            // label152
            // 
            this.label152.Location = new System.Drawing.Point(256, 39);
            this.label152.Name = "label152";
            this.label152.Size = new System.Drawing.Size(113, 14);
            this.label152.TabIndex = 4;
            this.label152.Text = "(-1, 0-99999999)";
            // 
            // txtDigitalEndorserCounter
            // 
            this.txtDigitalEndorserCounter.Location = new System.Drawing.Point(192, 35);
            this.txtDigitalEndorserCounter.MaxLength = 8;
            this.txtDigitalEndorserCounter.Name = "txtDigitalEndorserCounter";
            this.txtDigitalEndorserCounter.Size = new System.Drawing.Size(54, 19);
            this.txtDigitalEndorserCounter.TabIndex = 3;
            this.txtDigitalEndorserCounter.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtDigitalEndorserCounter.TextChanged += new System.EventHandler(this.txtDigitalEndorserCounter_TextChanged);
            // 
            // label153
            // 
            this.label153.Location = new System.Drawing.Point(8, 38);
            this.label153.Name = "label153";
            this.label153.Size = new System.Drawing.Size(136, 14);
            this.label153.TabIndex = 2;
            this.label153.Text = "DigitalEndorserCounter";
            // 
            // chkDigitalEndorser
            // 
            this.chkDigitalEndorser.Location = new System.Drawing.Point(192, 15);
            this.chkDigitalEndorser.Name = "chkDigitalEndorser";
            this.chkDigitalEndorser.Size = new System.Drawing.Size(18, 16);
            this.chkDigitalEndorser.TabIndex = 1;
            this.chkDigitalEndorser.CheckedChanged += new System.EventHandler(this.chkDigitalEndorser_CheckedChanged);
            // 
            // label154
            // 
            this.label154.Location = new System.Drawing.Point(8, 17);
            this.label154.Name = "label154";
            this.label154.Size = new System.Drawing.Size(99, 14);
            this.label154.TabIndex = 0;
            this.label154.Text = "DigitalEndorser";
            // 
            // label145
            // 
            this.label145.Location = new System.Drawing.Point(256, 107);
            this.label145.Name = "label145";
            this.label145.Size = new System.Drawing.Size(36, 16);
            this.label145.TabIndex = 12;
            this.label145.Text = "inch";
            // 
            // label148
            // 
            this.label148.Location = new System.Drawing.Point(8, 107);
            this.label148.Name = "label148";
            this.label148.Size = new System.Drawing.Size(136, 14);
            this.label148.TabIndex = 10;
            this.label148.Text = "DigitalEndorserYOffset";
            // 
            // txtDigitalEndorserYOffset
            // 
            this.txtDigitalEndorserYOffset.Location = new System.Drawing.Point(192, 104);
            this.txtDigitalEndorserYOffset.MaxLength = 8;
            this.txtDigitalEndorserYOffset.Name = "txtDigitalEndorserYOffset";
            this.txtDigitalEndorserYOffset.Size = new System.Drawing.Size(54, 19);
            this.txtDigitalEndorserYOffset.TabIndex = 11;
            this.txtDigitalEndorserYOffset.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtDigitalEndorserYOffset.TextChanged += new System.EventHandler(this.txtDigitalEndorserYOffset_TextChanged);
            // 
            // Barcode
            // 
            this.Barcode.Controls.Add(this.groupBox8);
            this.Barcode.Location = new System.Drawing.Point(4, 22);
            this.Barcode.Name = "Barcode";
            this.Barcode.Size = new System.Drawing.Size(728, 595);
            this.Barcode.TabIndex = 5;
            this.Barcode.Text = "Barcode";
            // 
            // groupBox8
            // 
            this.groupBox8.Controls.Add(this.chkBarcodeNotDetectionNotice);
            this.groupBox8.Controls.Add(this.label215);
            this.groupBox8.Controls.Add(this.label159);
            this.groupBox8.Controls.Add(this.txtBarcodeMaxSearchPriorities);
            this.groupBox8.Controls.Add(this.label158);
            this.groupBox8.Controls.Add(this.groupBox9);
            this.groupBox8.Controls.Add(this.label82);
            this.groupBox8.Controls.Add(this.txtBarcodeRegionLeft);
            this.groupBox8.Controls.Add(this.cboBarcodeDirection);
            this.groupBox8.Controls.Add(this.chkBarcodeDetection);
            this.groupBox8.Controls.Add(this.label81);
            this.groupBox8.Controls.Add(this.label80);
            this.groupBox8.Controls.Add(this.label79);
            this.groupBox8.Controls.Add(this.label78);
            this.groupBox8.Controls.Add(this.label83);
            this.groupBox8.Controls.Add(this.txtBarcodeRegionWidth);
            this.groupBox8.Controls.Add(this.label84);
            this.groupBox8.Controls.Add(this.label85);
            this.groupBox8.Controls.Add(this.label86);
            this.groupBox8.Controls.Add(this.label87);
            this.groupBox8.Controls.Add(this.txtBarcodeRegionLength);
            this.groupBox8.Controls.Add(this.txtBarcodeRegionTop);
            this.groupBox8.Location = new System.Drawing.Point(8, 8);
            this.groupBox8.Name = "groupBox8";
            this.groupBox8.Size = new System.Drawing.Size(711, 277);
            this.groupBox8.TabIndex = 0;
            this.groupBox8.TabStop = false;
            // 
            // chkBarcodeNotDetectionNotice
            // 
            this.chkBarcodeNotDetectionNotice.Location = new System.Drawing.Point(434, 13);
            this.chkBarcodeNotDetectionNotice.Name = "chkBarcodeNotDetectionNotice";
            this.chkBarcodeNotDetectionNotice.Size = new System.Drawing.Size(25, 24);
            this.chkBarcodeNotDetectionNotice.TabIndex = 3;
            this.chkBarcodeNotDetectionNotice.UseVisualStyleBackColor = true;
            // 
            // label215
            // 
            this.label215.Location = new System.Drawing.Point(271, 17);
            this.label215.Name = "label215";
            this.label215.Size = new System.Drawing.Size(157, 14);
            this.label215.TabIndex = 2;
            this.label215.Text = "BarcodeNotDetectionNotice";
            // 
            // label159
            // 
            this.label159.Location = new System.Drawing.Point(206, 109);
            this.label159.Name = "label159";
            this.label159.Size = new System.Drawing.Size(43, 16);
            this.label159.TabIndex = 20;
            this.label159.Text = "(1-20)";
            // 
            // txtBarcodeMaxSearchPriorities
            // 
            this.txtBarcodeMaxSearchPriorities.Location = new System.Drawing.Point(164, 105);
            this.txtBarcodeMaxSearchPriorities.MaxLength = 2;
            this.txtBarcodeMaxSearchPriorities.Name = "txtBarcodeMaxSearchPriorities";
            this.txtBarcodeMaxSearchPriorities.Size = new System.Drawing.Size(36, 19);
            this.txtBarcodeMaxSearchPriorities.TabIndex = 19;
            this.txtBarcodeMaxSearchPriorities.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtBarcodeMaxSearchPriorities.TextChanged += new System.EventHandler(this.txtBarcodeMaxSearchPriorities_TextChanged);
            // 
            // label158
            // 
            this.label158.Location = new System.Drawing.Point(8, 109);
            this.label158.Name = "label158";
            this.label158.Size = new System.Drawing.Size(155, 14);
            this.label158.TabIndex = 18;
            this.label158.Text = "BarcodeMaxSearchPriorities ";
            // 
            // groupBox9
            // 
            this.groupBox9.Controls.Add(this.chkAztecCode);
            this.groupBox9.Controls.Add(this.label175);
            this.groupBox9.Controls.Add(this.chkDataMatrix);
            this.groupBox9.Controls.Add(this.label165);
            this.groupBox9.Controls.Add(this.label88);
            this.groupBox9.Controls.Add(this.label89);
            this.groupBox9.Controls.Add(this.chkEAN8);
            this.groupBox9.Controls.Add(this.label90);
            this.groupBox9.Controls.Add(this.chkCode128);
            this.groupBox9.Controls.Add(this.label91);
            this.groupBox9.Controls.Add(this.chkCodabar);
            this.groupBox9.Controls.Add(this.label92);
            this.groupBox9.Controls.Add(this.label93);
            this.groupBox9.Controls.Add(this.label94);
            this.groupBox9.Controls.Add(this.chkITF);
            this.groupBox9.Controls.Add(this.chkPDF417);
            this.groupBox9.Controls.Add(this.chkEAN13);
            this.groupBox9.Controls.Add(this.chkQRCode);
            this.groupBox9.Controls.Add(this.chkUPCA);
            this.groupBox9.Controls.Add(this.label95);
            this.groupBox9.Controls.Add(this.label96);
            this.groupBox9.Controls.Add(this.label97);
            this.groupBox9.Controls.Add(this.chkCode3of9);
            this.groupBox9.Location = new System.Drawing.Point(7, 129);
            this.groupBox9.Name = "groupBox9";
            this.groupBox9.Size = new System.Drawing.Size(696, 131);
            this.groupBox9.TabIndex = 21;
            this.groupBox9.TabStop = false;
            // 
            // chkAztecCode
            // 
            this.chkAztecCode.AutoSize = true;
            this.chkAztecCode.Location = new System.Drawing.Point(253, 96);
            this.chkAztecCode.Name = "chkAztecCode";
            this.chkAztecCode.Size = new System.Drawing.Size(15, 14);
            this.chkAztecCode.TabIndex = 22;
            this.chkAztecCode.UseVisualStyleBackColor = true;
            // 
            // label175
            // 
            this.label175.AutoSize = true;
            this.label175.Location = new System.Drawing.Point(159, 96);
            this.label175.Name = "label175";
            this.label175.Size = new System.Drawing.Size(64, 12);
            this.label175.TabIndex = 21;
            this.label175.Text = "Aztec Code";
            // 
            // chkDataMatrix
            // 
            this.chkDataMatrix.AutoSize = true;
            this.chkDataMatrix.Location = new System.Drawing.Point(124, 96);
            this.chkDataMatrix.Name = "chkDataMatrix";
            this.chkDataMatrix.Size = new System.Drawing.Size(15, 14);
            this.chkDataMatrix.TabIndex = 20;
            this.chkDataMatrix.UseVisualStyleBackColor = true;
            // 
            // label165
            // 
            this.label165.AutoSize = true;
            this.label165.Location = new System.Drawing.Point(30, 96);
            this.label165.Name = "label165";
            this.label165.Size = new System.Drawing.Size(65, 12);
            this.label165.TabIndex = 19;
            this.label165.Text = "Data Matrix";
            // 
            // label88
            // 
            this.label88.Location = new System.Drawing.Point(2, 15);
            this.label88.Name = "label88";
            this.label88.Size = new System.Drawing.Size(113, 14);
            this.label88.TabIndex = 0;
            this.label88.Text = "BarcodeType";
            // 
            // label89
            // 
            this.label89.Location = new System.Drawing.Point(30, 37);
            this.label89.Name = "label89";
            this.label89.Size = new System.Drawing.Size(84, 14);
            this.label89.TabIndex = 1;
            this.label89.Text = "EAN 8";
            // 
            // chkEAN8
            // 
            this.chkEAN8.Location = new System.Drawing.Point(124, 33);
            this.chkEAN8.Name = "chkEAN8";
            this.chkEAN8.Size = new System.Drawing.Size(23, 24);
            this.chkEAN8.TabIndex = 2;
            // 
            // label90
            // 
            this.label90.Location = new System.Drawing.Point(30, 57);
            this.label90.Name = "label90";
            this.label90.Size = new System.Drawing.Size(84, 14);
            this.label90.TabIndex = 7;
            this.label90.Text = "Code 128";
            // 
            // chkCode128
            // 
            this.chkCode128.Location = new System.Drawing.Point(124, 53);
            this.chkCode128.Name = "chkCode128";
            this.chkCode128.Size = new System.Drawing.Size(23, 24);
            this.chkCode128.TabIndex = 8;
            // 
            // label91
            // 
            this.label91.Location = new System.Drawing.Point(30, 76);
            this.label91.Name = "label91";
            this.label91.Size = new System.Drawing.Size(84, 14);
            this.label91.TabIndex = 13;
            this.label91.Text = "Codabar";
            // 
            // chkCodabar
            // 
            this.chkCodabar.Location = new System.Drawing.Point(124, 72);
            this.chkCodabar.Name = "chkCodabar";
            this.chkCodabar.Size = new System.Drawing.Size(23, 24);
            this.chkCodabar.TabIndex = 14;
            // 
            // label92
            // 
            this.label92.Location = new System.Drawing.Point(159, 37);
            this.label92.Name = "label92";
            this.label92.Size = new System.Drawing.Size(84, 14);
            this.label92.TabIndex = 3;
            this.label92.Text = "EAN 13";
            // 
            // label93
            // 
            this.label93.Location = new System.Drawing.Point(159, 57);
            this.label93.Name = "label93";
            this.label93.Size = new System.Drawing.Size(84, 14);
            this.label93.TabIndex = 9;
            this.label93.Text = "ITF";
            // 
            // label94
            // 
            this.label94.Location = new System.Drawing.Point(159, 76);
            this.label94.Name = "label94";
            this.label94.Size = new System.Drawing.Size(84, 14);
            this.label94.TabIndex = 15;
            this.label94.Text = "PDF417";
            // 
            // chkITF
            // 
            this.chkITF.Location = new System.Drawing.Point(253, 53);
            this.chkITF.Name = "chkITF";
            this.chkITF.Size = new System.Drawing.Size(23, 24);
            this.chkITF.TabIndex = 10;
            // 
            // chkPDF417
            // 
            this.chkPDF417.Location = new System.Drawing.Point(253, 72);
            this.chkPDF417.Name = "chkPDF417";
            this.chkPDF417.Size = new System.Drawing.Size(23, 24);
            this.chkPDF417.TabIndex = 16;
            // 
            // chkEAN13
            // 
            this.chkEAN13.Location = new System.Drawing.Point(253, 33);
            this.chkEAN13.Name = "chkEAN13";
            this.chkEAN13.Size = new System.Drawing.Size(23, 24);
            this.chkEAN13.TabIndex = 4;
            // 
            // chkQRCode
            // 
            this.chkQRCode.Location = new System.Drawing.Point(389, 72);
            this.chkQRCode.Name = "chkQRCode";
            this.chkQRCode.Size = new System.Drawing.Size(23, 24);
            this.chkQRCode.TabIndex = 18;
            // 
            // chkUPCA
            // 
            this.chkUPCA.Location = new System.Drawing.Point(389, 53);
            this.chkUPCA.Name = "chkUPCA";
            this.chkUPCA.Size = new System.Drawing.Size(23, 24);
            this.chkUPCA.TabIndex = 12;
            // 
            // label95
            // 
            this.label95.Location = new System.Drawing.Point(295, 76);
            this.label95.Name = "label95";
            this.label95.Size = new System.Drawing.Size(84, 14);
            this.label95.TabIndex = 17;
            this.label95.Text = "QR Code";
            // 
            // label96
            // 
            this.label96.Location = new System.Drawing.Point(295, 57);
            this.label96.Name = "label96";
            this.label96.Size = new System.Drawing.Size(84, 14);
            this.label96.TabIndex = 11;
            this.label96.Text = "UPC-A";
            // 
            // label97
            // 
            this.label97.Location = new System.Drawing.Point(295, 37);
            this.label97.Name = "label97";
            this.label97.Size = new System.Drawing.Size(84, 14);
            this.label97.TabIndex = 5;
            this.label97.Text = "Code 3 of 9";
            // 
            // chkCode3of9
            // 
            this.chkCode3of9.Location = new System.Drawing.Point(389, 33);
            this.chkCode3of9.Name = "chkCode3of9";
            this.chkCode3of9.Size = new System.Drawing.Size(23, 24);
            this.chkCode3of9.TabIndex = 6;
            // 
            // label82
            // 
            this.label82.Location = new System.Drawing.Point(226, 63);
            this.label82.Name = "label82";
            this.label82.Size = new System.Drawing.Size(36, 16);
            this.label82.TabIndex = 8;
            this.label82.Text = "inch";
            // 
            // txtBarcodeRegionLeft
            // 
            this.txtBarcodeRegionLeft.Location = new System.Drawing.Point(164, 58);
            this.txtBarcodeRegionLeft.MaxLength = 8;
            this.txtBarcodeRegionLeft.Name = "txtBarcodeRegionLeft";
            this.txtBarcodeRegionLeft.Size = new System.Drawing.Size(54, 19);
            this.txtBarcodeRegionLeft.TabIndex = 7;
            this.txtBarcodeRegionLeft.TextChanged += new System.EventHandler(this.txtBarcodeRegionLeft_TextChanged);
            // 
            // cboBarcodeDirection
            // 
            this.cboBarcodeDirection.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboBarcodeDirection.Items.AddRange(new object[] {
            "Horizontal",
            "Vertical",
            "Horizontal & Vertical"});
            this.cboBarcodeDirection.Location = new System.Drawing.Point(164, 35);
            this.cboBarcodeDirection.Name = "cboBarcodeDirection";
            this.cboBarcodeDirection.Size = new System.Drawing.Size(152, 20);
            this.cboBarcodeDirection.TabIndex = 5;
            // 
            // chkBarcodeDetection
            // 
            this.chkBarcodeDetection.Location = new System.Drawing.Point(164, 13);
            this.chkBarcodeDetection.Name = "chkBarcodeDetection";
            this.chkBarcodeDetection.Size = new System.Drawing.Size(23, 24);
            this.chkBarcodeDetection.TabIndex = 1;
            this.chkBarcodeDetection.CheckedChanged += new System.EventHandler(this.chkBarcodeDetection_CheckedChanged);
            // 
            // label81
            // 
            this.label81.Location = new System.Drawing.Point(8, 86);
            this.label81.Name = "label81";
            this.label81.Size = new System.Drawing.Size(113, 14);
            this.label81.TabIndex = 12;
            this.label81.Text = "BarcodeRegionWidth";
            // 
            // label80
            // 
            this.label80.Location = new System.Drawing.Point(8, 63);
            this.label80.Name = "label80";
            this.label80.Size = new System.Drawing.Size(130, 14);
            this.label80.TabIndex = 6;
            this.label80.Text = "BarcodeRegionLeft";
            // 
            // label79
            // 
            this.label79.Location = new System.Drawing.Point(8, 40);
            this.label79.Name = "label79";
            this.label79.Size = new System.Drawing.Size(99, 14);
            this.label79.TabIndex = 4;
            this.label79.Text = "BarcodeDirection";
            // 
            // label78
            // 
            this.label78.Location = new System.Drawing.Point(8, 17);
            this.label78.Name = "label78";
            this.label78.Size = new System.Drawing.Size(99, 14);
            this.label78.TabIndex = 0;
            this.label78.Text = "BarcodeDetection";
            // 
            // label83
            // 
            this.label83.Location = new System.Drawing.Point(226, 84);
            this.label83.Name = "label83";
            this.label83.Size = new System.Drawing.Size(36, 16);
            this.label83.TabIndex = 14;
            this.label83.Text = "inch";
            // 
            // txtBarcodeRegionWidth
            // 
            this.txtBarcodeRegionWidth.Location = new System.Drawing.Point(164, 81);
            this.txtBarcodeRegionWidth.MaxLength = 8;
            this.txtBarcodeRegionWidth.Name = "txtBarcodeRegionWidth";
            this.txtBarcodeRegionWidth.Size = new System.Drawing.Size(54, 19);
            this.txtBarcodeRegionWidth.TabIndex = 13;
            this.txtBarcodeRegionWidth.TextChanged += new System.EventHandler(this.txtBarcodeRegionWidth_TextChanged);
            // 
            // label84
            // 
            this.label84.Location = new System.Drawing.Point(271, 86);
            this.label84.Name = "label84";
            this.label84.Size = new System.Drawing.Size(118, 14);
            this.label84.TabIndex = 15;
            this.label84.Text = "BarcodeRegionLength";
            // 
            // label85
            // 
            this.label85.Location = new System.Drawing.Point(271, 63);
            this.label85.Name = "label85";
            this.label85.Size = new System.Drawing.Size(111, 14);
            this.label85.TabIndex = 9;
            this.label85.Text = "BarcodeRegionTop";
            // 
            // label86
            // 
            this.label86.Location = new System.Drawing.Point(453, 63);
            this.label86.Name = "label86";
            this.label86.Size = new System.Drawing.Size(36, 16);
            this.label86.TabIndex = 11;
            this.label86.Text = "inch";
            // 
            // label87
            // 
            this.label87.Location = new System.Drawing.Point(453, 84);
            this.label87.Name = "label87";
            this.label87.Size = new System.Drawing.Size(36, 16);
            this.label87.TabIndex = 17;
            this.label87.Text = "inch";
            // 
            // txtBarcodeRegionLength
            // 
            this.txtBarcodeRegionLength.Location = new System.Drawing.Point(393, 83);
            this.txtBarcodeRegionLength.MaxLength = 8;
            this.txtBarcodeRegionLength.Name = "txtBarcodeRegionLength";
            this.txtBarcodeRegionLength.Size = new System.Drawing.Size(54, 19);
            this.txtBarcodeRegionLength.TabIndex = 16;
            this.txtBarcodeRegionLength.TextChanged += new System.EventHandler(this.txtBarcodeRegionLength_TextChanged);
            // 
            // txtBarcodeRegionTop
            // 
            this.txtBarcodeRegionTop.Location = new System.Drawing.Point(393, 60);
            this.txtBarcodeRegionTop.MaxLength = 8;
            this.txtBarcodeRegionTop.Name = "txtBarcodeRegionTop";
            this.txtBarcodeRegionTop.Size = new System.Drawing.Size(54, 19);
            this.txtBarcodeRegionTop.TabIndex = 10;
            this.txtBarcodeRegionTop.TextChanged += new System.EventHandler(this.txtBarcodeRegionTop_TextChanged);
            // 
            // PatchCode
            // 
            this.PatchCode.Controls.Add(this.groupBox10);
            this.PatchCode.Location = new System.Drawing.Point(4, 22);
            this.PatchCode.Name = "PatchCode";
            this.PatchCode.Size = new System.Drawing.Size(728, 595);
            this.PatchCode.TabIndex = 6;
            this.PatchCode.Text = "PatchCode";
            // 
            // groupBox10
            // 
            this.groupBox10.Controls.Add(this.groupBox11);
            this.groupBox10.Controls.Add(this.cboPatchCodeDirection);
            this.groupBox10.Controls.Add(this.chkPatchCodeDetection);
            this.groupBox10.Controls.Add(this.label98);
            this.groupBox10.Controls.Add(this.label99);
            this.groupBox10.Location = new System.Drawing.Point(8, 8);
            this.groupBox10.Name = "groupBox10";
            this.groupBox10.Size = new System.Drawing.Size(711, 142);
            this.groupBox10.TabIndex = 0;
            this.groupBox10.TabStop = false;
            // 
            // groupBox11
            // 
            this.groupBox11.Controls.Add(this.label100);
            this.groupBox11.Controls.Add(this.label101);
            this.groupBox11.Controls.Add(this.chkPatch1);
            this.groupBox11.Controls.Add(this.label102);
            this.groupBox11.Controls.Add(this.chkPatch4);
            this.groupBox11.Controls.Add(this.label103);
            this.groupBox11.Controls.Add(this.label104);
            this.groupBox11.Controls.Add(this.chkPatchT);
            this.groupBox11.Controls.Add(this.chkPatch2);
            this.groupBox11.Controls.Add(this.chkPatch6);
            this.groupBox11.Controls.Add(this.label105);
            this.groupBox11.Controls.Add(this.label106);
            this.groupBox11.Controls.Add(this.chkPatch3);
            this.groupBox11.Location = new System.Drawing.Point(6, 54);
            this.groupBox11.Name = "groupBox11";
            this.groupBox11.Size = new System.Drawing.Size(698, 79);
            this.groupBox11.TabIndex = 4;
            this.groupBox11.TabStop = false;
            // 
            // label100
            // 
            this.label100.Location = new System.Drawing.Point(3, 10);
            this.label100.Name = "label100";
            this.label100.Size = new System.Drawing.Size(113, 14);
            this.label100.TabIndex = 0;
            this.label100.Text = "PatchCodeType";
            // 
            // label101
            // 
            this.label101.Location = new System.Drawing.Point(31, 32);
            this.label101.Name = "label101";
            this.label101.Size = new System.Drawing.Size(84, 14);
            this.label101.TabIndex = 1;
            this.label101.Text = "Patch 1";
            // 
            // chkPatch1
            // 
            this.chkPatch1.Location = new System.Drawing.Point(125, 28);
            this.chkPatch1.Name = "chkPatch1";
            this.chkPatch1.Size = new System.Drawing.Size(23, 24);
            this.chkPatch1.TabIndex = 2;
            // 
            // label102
            // 
            this.label102.Location = new System.Drawing.Point(31, 52);
            this.label102.Name = "label102";
            this.label102.Size = new System.Drawing.Size(84, 14);
            this.label102.TabIndex = 7;
            this.label102.Text = "Patch 4";
            // 
            // chkPatch4
            // 
            this.chkPatch4.Location = new System.Drawing.Point(125, 48);
            this.chkPatch4.Name = "chkPatch4";
            this.chkPatch4.Size = new System.Drawing.Size(23, 24);
            this.chkPatch4.TabIndex = 8;
            // 
            // label103
            // 
            this.label103.Location = new System.Drawing.Point(160, 32);
            this.label103.Name = "label103";
            this.label103.Size = new System.Drawing.Size(84, 14);
            this.label103.TabIndex = 3;
            this.label103.Text = "Patch 2";
            // 
            // label104
            // 
            this.label104.Location = new System.Drawing.Point(160, 52);
            this.label104.Name = "label104";
            this.label104.Size = new System.Drawing.Size(84, 14);
            this.label104.TabIndex = 9;
            this.label104.Text = "Patch T";
            // 
            // chkPatchT
            // 
            this.chkPatchT.Location = new System.Drawing.Point(254, 48);
            this.chkPatchT.Name = "chkPatchT";
            this.chkPatchT.Size = new System.Drawing.Size(23, 24);
            this.chkPatchT.TabIndex = 10;
            // 
            // chkPatch2
            // 
            this.chkPatch2.Location = new System.Drawing.Point(254, 28);
            this.chkPatch2.Name = "chkPatch2";
            this.chkPatch2.Size = new System.Drawing.Size(23, 24);
            this.chkPatch2.TabIndex = 4;
            // 
            // chkPatch6
            // 
            this.chkPatch6.Location = new System.Drawing.Point(390, 48);
            this.chkPatch6.Name = "chkPatch6";
            this.chkPatch6.Size = new System.Drawing.Size(23, 24);
            this.chkPatch6.TabIndex = 12;
            // 
            // label105
            // 
            this.label105.Location = new System.Drawing.Point(296, 52);
            this.label105.Name = "label105";
            this.label105.Size = new System.Drawing.Size(84, 14);
            this.label105.TabIndex = 11;
            this.label105.Text = "Patch 6";
            // 
            // label106
            // 
            this.label106.Location = new System.Drawing.Point(296, 32);
            this.label106.Name = "label106";
            this.label106.Size = new System.Drawing.Size(84, 14);
            this.label106.TabIndex = 5;
            this.label106.Text = "Patch 3";
            // 
            // chkPatch3
            // 
            this.chkPatch3.Location = new System.Drawing.Point(390, 28);
            this.chkPatch3.Name = "chkPatch3";
            this.chkPatch3.Size = new System.Drawing.Size(23, 24);
            this.chkPatch3.TabIndex = 6;
            // 
            // cboPatchCodeDirection
            // 
            this.cboPatchCodeDirection.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboPatchCodeDirection.Items.AddRange(new object[] {
            "Horizontal",
            "Vertical",
            "Horizontal & Vertical"});
            this.cboPatchCodeDirection.Location = new System.Drawing.Point(128, 35);
            this.cboPatchCodeDirection.Name = "cboPatchCodeDirection";
            this.cboPatchCodeDirection.Size = new System.Drawing.Size(152, 20);
            this.cboPatchCodeDirection.TabIndex = 3;
            // 
            // chkPatchCodeDetection
            // 
            this.chkPatchCodeDetection.Location = new System.Drawing.Point(128, 13);
            this.chkPatchCodeDetection.Name = "chkPatchCodeDetection";
            this.chkPatchCodeDetection.Size = new System.Drawing.Size(23, 24);
            this.chkPatchCodeDetection.TabIndex = 1;
            // 
            // label98
            // 
            this.label98.Location = new System.Drawing.Point(8, 39);
            this.label98.Name = "label98";
            this.label98.Size = new System.Drawing.Size(114, 14);
            this.label98.TabIndex = 2;
            this.label98.Text = "PatchCodeDirection";
            // 
            // label99
            // 
            this.label99.Location = new System.Drawing.Point(8, 17);
            this.label99.Name = "label99";
            this.label99.Size = new System.Drawing.Size(115, 14);
            this.label99.TabIndex = 0;
            this.label99.Text = "PatchCodeDetection";
            // 
            // EdgeFiller
            // 
            this.EdgeFiller.Controls.Add(this.groupBox12);
            this.EdgeFiller.Location = new System.Drawing.Point(4, 22);
            this.EdgeFiller.Name = "EdgeFiller";
            this.EdgeFiller.Size = new System.Drawing.Size(728, 595);
            this.EdgeFiller.TabIndex = 7;
            this.EdgeFiller.Text = "EdgeFiller";
            // 
            // groupBox12
            // 
            this.groupBox12.Controls.Add(this.chkEdgeRepair);
            this.groupBox12.Controls.Add(this.groupBox13);
            this.groupBox12.Controls.Add(this.label116);
            this.groupBox12.Location = new System.Drawing.Point(8, 8);
            this.groupBox12.Name = "groupBox12";
            this.groupBox12.Size = new System.Drawing.Size(711, 137);
            this.groupBox12.TabIndex = 0;
            this.groupBox12.TabStop = false;
            // 
            // chkEdgeRepair
            // 
            this.chkEdgeRepair.Location = new System.Drawing.Point(138, 109);
            this.chkEdgeRepair.Name = "chkEdgeRepair";
            this.chkEdgeRepair.Size = new System.Drawing.Size(104, 19);
            this.chkEdgeRepair.TabIndex = 2;
            // 
            // groupBox13
            // 
            this.groupBox13.Controls.Add(this.label107);
            this.groupBox13.Controls.Add(this.txtEdgeFillerTop);
            this.groupBox13.Controls.Add(this.cboEdgeFiller);
            this.groupBox13.Controls.Add(this.label108);
            this.groupBox13.Controls.Add(this.label109);
            this.groupBox13.Controls.Add(this.label110);
            this.groupBox13.Controls.Add(this.label111);
            this.groupBox13.Controls.Add(this.txtEdgeFillerLeft);
            this.groupBox13.Controls.Add(this.label112);
            this.groupBox13.Controls.Add(this.label113);
            this.groupBox13.Controls.Add(this.label114);
            this.groupBox13.Controls.Add(this.label115);
            this.groupBox13.Controls.Add(this.txtEdgeFillerRight);
            this.groupBox13.Controls.Add(this.txtEdgeFillerBottom);
            this.groupBox13.Location = new System.Drawing.Point(10, 8);
            this.groupBox13.Name = "groupBox13";
            this.groupBox13.Size = new System.Drawing.Size(692, 91);
            this.groupBox13.TabIndex = 0;
            this.groupBox13.TabStop = false;
            // 
            // label107
            // 
            this.label107.Location = new System.Drawing.Point(191, 43);
            this.label107.Name = "label107";
            this.label107.Size = new System.Drawing.Size(36, 16);
            this.label107.TabIndex = 4;
            this.label107.Text = "inch";
            // 
            // txtEdgeFillerTop
            // 
            this.txtEdgeFillerTop.Location = new System.Drawing.Point(129, 38);
            this.txtEdgeFillerTop.MaxLength = 8;
            this.txtEdgeFillerTop.Name = "txtEdgeFillerTop";
            this.txtEdgeFillerTop.Size = new System.Drawing.Size(54, 19);
            this.txtEdgeFillerTop.TabIndex = 3;
            this.txtEdgeFillerTop.TextChanged += new System.EventHandler(this.txtEdgeFillerTop_TextChanged);
            // 
            // cboEdgeFiller
            // 
            this.cboEdgeFiller.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboEdgeFiller.Items.AddRange(new object[] {
            "Off",
            "Black",
            "White"});
            this.cboEdgeFiller.Location = new System.Drawing.Point(129, 15);
            this.cboEdgeFiller.Name = "cboEdgeFiller";
            this.cboEdgeFiller.Size = new System.Drawing.Size(152, 20);
            this.cboEdgeFiller.TabIndex = 1;
            this.cboEdgeFiller.SelectedIndexChanged += new System.EventHandler(this.cboEdgeFiller_SelectedIndexChanged);
            // 
            // label108
            // 
            this.label108.Location = new System.Drawing.Point(9, 65);
            this.label108.Name = "label108";
            this.label108.Size = new System.Drawing.Size(113, 14);
            this.label108.TabIndex = 8;
            this.label108.Text = "EdgeFillerLeft";
            // 
            // label109
            // 
            this.label109.Location = new System.Drawing.Point(9, 42);
            this.label109.Name = "label109";
            this.label109.Size = new System.Drawing.Size(130, 14);
            this.label109.TabIndex = 2;
            this.label109.Text = "EdgeFillerTop";
            // 
            // label110
            // 
            this.label110.Location = new System.Drawing.Point(9, 19);
            this.label110.Name = "label110";
            this.label110.Size = new System.Drawing.Size(99, 14);
            this.label110.TabIndex = 0;
            this.label110.Text = "EdgeFiller";
            // 
            // label111
            // 
            this.label111.Location = new System.Drawing.Point(191, 64);
            this.label111.Name = "label111";
            this.label111.Size = new System.Drawing.Size(36, 16);
            this.label111.TabIndex = 10;
            this.label111.Text = "inch";
            // 
            // txtEdgeFillerLeft
            // 
            this.txtEdgeFillerLeft.Location = new System.Drawing.Point(129, 61);
            this.txtEdgeFillerLeft.MaxLength = 8;
            this.txtEdgeFillerLeft.Name = "txtEdgeFillerLeft";
            this.txtEdgeFillerLeft.Size = new System.Drawing.Size(54, 19);
            this.txtEdgeFillerLeft.TabIndex = 9;
            this.txtEdgeFillerLeft.TextChanged += new System.EventHandler(this.txtEdgeFillerLeft_TextChanged);
            // 
            // label112
            // 
            this.label112.Location = new System.Drawing.Point(236, 65);
            this.label112.Name = "label112";
            this.label112.Size = new System.Drawing.Size(118, 14);
            this.label112.TabIndex = 11;
            this.label112.Text = "EdgeFillerRight";
            // 
            // label113
            // 
            this.label113.Location = new System.Drawing.Point(236, 42);
            this.label113.Name = "label113";
            this.label113.Size = new System.Drawing.Size(111, 14);
            this.label113.TabIndex = 5;
            this.label113.Text = "EdgeFillerBottom";
            // 
            // label114
            // 
            this.label114.Location = new System.Drawing.Point(418, 43);
            this.label114.Name = "label114";
            this.label114.Size = new System.Drawing.Size(36, 16);
            this.label114.TabIndex = 7;
            this.label114.Text = "inch";
            // 
            // label115
            // 
            this.label115.Location = new System.Drawing.Point(418, 64);
            this.label115.Name = "label115";
            this.label115.Size = new System.Drawing.Size(36, 16);
            this.label115.TabIndex = 13;
            this.label115.Text = "inch";
            // 
            // txtEdgeFillerRight
            // 
            this.txtEdgeFillerRight.Location = new System.Drawing.Point(358, 63);
            this.txtEdgeFillerRight.MaxLength = 8;
            this.txtEdgeFillerRight.Name = "txtEdgeFillerRight";
            this.txtEdgeFillerRight.Size = new System.Drawing.Size(54, 19);
            this.txtEdgeFillerRight.TabIndex = 12;
            this.txtEdgeFillerRight.TextChanged += new System.EventHandler(this.txtEdgeFillerRight_TextChanged);
            // 
            // txtEdgeFillerBottom
            // 
            this.txtEdgeFillerBottom.Location = new System.Drawing.Point(358, 40);
            this.txtEdgeFillerBottom.MaxLength = 8;
            this.txtEdgeFillerBottom.Name = "txtEdgeFillerBottom";
            this.txtEdgeFillerBottom.Size = new System.Drawing.Size(54, 19);
            this.txtEdgeFillerBottom.TabIndex = 6;
            this.txtEdgeFillerBottom.TextChanged += new System.EventHandler(this.txtEdgeFillerBottom_TextChanged);
            // 
            // label116
            // 
            this.label116.Location = new System.Drawing.Point(19, 110);
            this.label116.Name = "label116";
            this.label116.Size = new System.Drawing.Size(99, 14);
            this.label116.TabIndex = 1;
            this.label116.Text = "EdgeRepair";
            // 
            // Stream1
            // 
            this.Stream1.BackColor = System.Drawing.SystemColors.Control;
            this.Stream1.Controls.Add(this.groupBox21);
            this.Stream1.Controls.Add(this.groupBox20);
            this.Stream1.Controls.Add(this.groupBox19);
            this.Stream1.Controls.Add(this.groupBox18);
            this.Stream1.Controls.Add(this.groupBox17);
            this.Stream1.Controls.Add(this.groupBox16);
            this.Stream1.Location = new System.Drawing.Point(4, 22);
            this.Stream1.Name = "Stream1";
            this.Stream1.Size = new System.Drawing.Size(728, 595);
            this.Stream1.TabIndex = 8;
            this.Stream1.Text = "1stStream";
            // 
            // groupBox21
            // 
            this.groupBox21.Controls.Add(this.label292);
            this.groupBox21.Controls.Add(this.cboStream1BackgroundSmoothing);
            this.groupBox21.Controls.Add(this.label294);
            this.groupBox21.Controls.Add(this.label288);
            this.groupBox21.Controls.Add(this.label291);
            this.groupBox21.Controls.Add(this.txtStream1Shadow);
            this.groupBox21.Controls.Add(this.txtStream1BackgroundSmoothness);
            this.groupBox21.Controls.Add(this.label290);
            this.groupBox21.Controls.Add(this.label293);
            this.groupBox21.Controls.Add(this.txtStream1Highlight);
            this.groupBox21.Controls.Add(this.label289);
            this.groupBox21.Location = new System.Drawing.Point(271, 369);
            this.groupBox21.Name = "groupBox21";
            this.groupBox21.Size = new System.Drawing.Size(448, 89);
            this.groupBox21.TabIndex = 4;
            this.groupBox21.TabStop = false;
            this.groupBox21.Text = "for Grayscale or RGB";
            // 
            // label292
            // 
            this.label292.Location = new System.Drawing.Point(8, 40);
            this.label292.Name = "label292";
            this.label292.Size = new System.Drawing.Size(136, 16);
            this.label292.TabIndex = 6;
            this.label292.Text = "BackgroundSmoothing";
            // 
            // cboStream1BackgroundSmoothing
            // 
            this.cboStream1BackgroundSmoothing.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream1BackgroundSmoothing.Items.AddRange(new object[] {
            "None",
            "Automatic",
            "White"});
            this.cboStream1BackgroundSmoothing.Location = new System.Drawing.Point(168, 37);
            this.cboStream1BackgroundSmoothing.MaxDropDownItems = 3;
            this.cboStream1BackgroundSmoothing.Name = "cboStream1BackgroundSmoothing";
            this.cboStream1BackgroundSmoothing.Size = new System.Drawing.Size(86, 20);
            this.cboStream1BackgroundSmoothing.TabIndex = 7;
            // 
            // label294
            // 
            this.label294.Location = new System.Drawing.Point(210, 64);
            this.label294.Name = "label294";
            this.label294.Size = new System.Drawing.Size(43, 16);
            this.label294.TabIndex = 10;
            this.label294.Text = "(0-10)";
            // 
            // label288
            // 
            this.label288.Location = new System.Drawing.Point(8, 17);
            this.label288.Name = "label288";
            this.label288.Size = new System.Drawing.Size(70, 16);
            this.label288.TabIndex = 0;
            this.label288.Text = "Highlight";
            // 
            // label291
            // 
            this.label291.Location = new System.Drawing.Point(317, 17);
            this.label291.Name = "label291";
            this.label291.Size = new System.Drawing.Size(49, 16);
            this.label291.TabIndex = 5;
            this.label291.Text = "(0-254)";
            // 
            // txtStream1Shadow
            // 
            this.txtStream1Shadow.Location = new System.Drawing.Point(275, 13);
            this.txtStream1Shadow.MaxLength = 3;
            this.txtStream1Shadow.Name = "txtStream1Shadow";
            this.txtStream1Shadow.Size = new System.Drawing.Size(36, 19);
            this.txtStream1Shadow.TabIndex = 4;
            this.txtStream1Shadow.Text = "10";
            this.txtStream1Shadow.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1Shadow.TextChanged += new System.EventHandler(this.txtStream1Shadow_TextChanged);
            // 
            // txtStream1BackgroundSmoothness
            // 
            this.txtStream1BackgroundSmoothness.Location = new System.Drawing.Point(168, 60);
            this.txtStream1BackgroundSmoothness.MaxLength = 2;
            this.txtStream1BackgroundSmoothness.Name = "txtStream1BackgroundSmoothness";
            this.txtStream1BackgroundSmoothness.Size = new System.Drawing.Size(36, 19);
            this.txtStream1BackgroundSmoothness.TabIndex = 9;
            this.txtStream1BackgroundSmoothness.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1BackgroundSmoothness.TextChanged += new System.EventHandler(this.txtStream1BackgroundSmoothness_TextChanged);
            // 
            // label290
            // 
            this.label290.Location = new System.Drawing.Point(203, 17);
            this.label290.Name = "label290";
            this.label290.Size = new System.Drawing.Size(69, 16);
            this.label290.TabIndex = 3;
            this.label290.Text = "Shadow";
            // 
            // label293
            // 
            this.label293.Location = new System.Drawing.Point(8, 63);
            this.label293.Name = "label293";
            this.label293.Size = new System.Drawing.Size(154, 16);
            this.label293.TabIndex = 8;
            this.label293.Text = "BackgroundSmoothness";
            // 
            // txtStream1Highlight
            // 
            this.txtStream1Highlight.Location = new System.Drawing.Point(84, 13);
            this.txtStream1Highlight.MaxLength = 3;
            this.txtStream1Highlight.Name = "txtStream1Highlight";
            this.txtStream1Highlight.Size = new System.Drawing.Size(36, 19);
            this.txtStream1Highlight.TabIndex = 1;
            this.txtStream1Highlight.Text = "230";
            this.txtStream1Highlight.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1Highlight.TextChanged += new System.EventHandler(this.txtStream1Highlight_TextChanged);
            // 
            // label289
            // 
            this.label289.Location = new System.Drawing.Point(126, 18);
            this.label289.Name = "label289";
            this.label289.Size = new System.Drawing.Size(49, 16);
            this.label289.TabIndex = 2;
            this.label289.Text = "(1-255)";
            // 
            // groupBox20
            // 
            this.groupBox20.Controls.Add(this.label287);
            this.groupBox20.Controls.Add(this.txtStream1FilterSaturationSensitivity);
            this.groupBox20.Controls.Add(this.label286);
            this.groupBox20.Controls.Add(this.cboStream1Filter);
            this.groupBox20.Controls.Add(this.label285);
            this.groupBox20.Location = new System.Drawing.Point(8, 369);
            this.groupBox20.Name = "groupBox20";
            this.groupBox20.Size = new System.Drawing.Size(255, 63);
            this.groupBox20.TabIndex = 3;
            this.groupBox20.TabStop = false;
            this.groupBox20.Text = "for Black&&White or Grayscale";
            // 
            // label287
            // 
            this.label287.Location = new System.Drawing.Point(206, 41);
            this.label287.Name = "label287";
            this.label287.Size = new System.Drawing.Size(45, 16);
            this.label287.TabIndex = 4;
            this.label287.Text = "(0-100)";
            // 
            // txtStream1FilterSaturationSensitivity
            // 
            this.txtStream1FilterSaturationSensitivity.Location = new System.Drawing.Point(164, 37);
            this.txtStream1FilterSaturationSensitivity.MaxLength = 3;
            this.txtStream1FilterSaturationSensitivity.Name = "txtStream1FilterSaturationSensitivity";
            this.txtStream1FilterSaturationSensitivity.Size = new System.Drawing.Size(36, 19);
            this.txtStream1FilterSaturationSensitivity.TabIndex = 3;
            this.txtStream1FilterSaturationSensitivity.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1FilterSaturationSensitivity.TextChanged += new System.EventHandler(this.txtStream1FilterSaturationSensitivity_TextChanged);
            // 
            // label286
            // 
            this.label286.Location = new System.Drawing.Point(8, 40);
            this.label286.Name = "label286";
            this.label286.Size = new System.Drawing.Size(157, 16);
            this.label286.TabIndex = 2;
            this.label286.Text = "FilterSaturationSensitivity";
            // 
            // cboStream1Filter
            // 
            this.cboStream1Filter.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream1Filter.Items.AddRange(new object[] {
            "Green",
            "Red",
            "Blue",
            "None",
            "White",
            "Saturation",
            "Specified by device",
            "Custom1",
            "Custom2",
            "Custom3",
            "Custom4"});
            this.cboStream1Filter.Location = new System.Drawing.Point(71, 14);
            this.cboStream1Filter.MaxDropDownItems = 11;
            this.cboStream1Filter.Name = "cboStream1Filter";
            this.cboStream1Filter.Size = new System.Drawing.Size(150, 20);
            this.cboStream1Filter.TabIndex = 1;
            // 
            // label285
            // 
            this.label285.Location = new System.Drawing.Point(8, 17);
            this.label285.Name = "label285";
            this.label285.Size = new System.Drawing.Size(56, 16);
            this.label285.TabIndex = 0;
            this.label285.Text = "Filter";
            // 
            // groupBox19
            // 
            this.groupBox19.Controls.Add(this.chkStream1sRGB);
            this.groupBox19.Controls.Add(this.label284);
            this.groupBox19.Controls.Add(this.label283);
            this.groupBox19.Controls.Add(this.txtStream1AdjustRGBB);
            this.groupBox19.Controls.Add(this.label282);
            this.groupBox19.Controls.Add(this.label281);
            this.groupBox19.Controls.Add(this.txtStream1AdjustRGBG);
            this.groupBox19.Controls.Add(this.label280);
            this.groupBox19.Controls.Add(this.label279);
            this.groupBox19.Controls.Add(this.txtStream1AdjustRGBR);
            this.groupBox19.Controls.Add(this.label278);
            this.groupBox19.Controls.Add(this.chkStream1AdjustRGB);
            this.groupBox19.Controls.Add(this.label277);
            this.groupBox19.Controls.Add(this.label276);
            this.groupBox19.Controls.Add(this.txtStream1ColorReproductionShadow);
            this.groupBox19.Controls.Add(this.label275);
            this.groupBox19.Controls.Add(this.label274);
            this.groupBox19.Controls.Add(this.txtStream1ColorReproductionHighlight);
            this.groupBox19.Controls.Add(this.label273);
            this.groupBox19.Controls.Add(this.label272);
            this.groupBox19.Controls.Add(this.txtStream1ColorReproductionCustomGamma);
            this.groupBox19.Controls.Add(this.label271);
            this.groupBox19.Controls.Add(this.label270);
            this.groupBox19.Controls.Add(this.txtStream1ColorReproductionContrast);
            this.groupBox19.Controls.Add(this.label269);
            this.groupBox19.Controls.Add(this.label268);
            this.groupBox19.Controls.Add(this.txtStream1ColorReproductionBrightness);
            this.groupBox19.Controls.Add(this.label267);
            this.groupBox19.Controls.Add(this.cboStream1ColorReproduction);
            this.groupBox19.Controls.Add(this.label266);
            this.groupBox19.Location = new System.Drawing.Point(8, 461);
            this.groupBox19.Name = "groupBox19";
            this.groupBox19.Size = new System.Drawing.Size(711, 128);
            this.groupBox19.TabIndex = 5;
            this.groupBox19.TabStop = false;
            this.groupBox19.Text = "for RGB";
            // 
            // chkStream1sRGB
            // 
            this.chkStream1sRGB.Location = new System.Drawing.Point(341, 86);
            this.chkStream1sRGB.Name = "chkStream1sRGB";
            this.chkStream1sRGB.Size = new System.Drawing.Size(15, 14);
            this.chkStream1sRGB.TabIndex = 20;
            this.chkStream1sRGB.UseVisualStyleBackColor = true;
            // 
            // label284
            // 
            this.label284.Location = new System.Drawing.Point(238, 86);
            this.label284.Name = "label284";
            this.label284.Size = new System.Drawing.Size(51, 16);
            this.label284.TabIndex = 19;
            this.label284.Text = "sRGB";
            // 
            // label283
            // 
            this.label283.Location = new System.Drawing.Point(614, 109);
            this.label283.Name = "label283";
            this.label283.Size = new System.Drawing.Size(49, 16);
            this.label283.TabIndex = 29;
            this.label283.Text = "(1-255)";
            // 
            // txtStream1AdjustRGBB
            // 
            this.txtStream1AdjustRGBB.Location = new System.Drawing.Point(572, 105);
            this.txtStream1AdjustRGBB.MaxLength = 3;
            this.txtStream1AdjustRGBB.Name = "txtStream1AdjustRGBB";
            this.txtStream1AdjustRGBB.Size = new System.Drawing.Size(36, 19);
            this.txtStream1AdjustRGBB.TabIndex = 28;
            this.txtStream1AdjustRGBB.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1AdjustRGBB.TextChanged += new System.EventHandler(this.txtStream1AdjustRGBB_TextChanged);
            // 
            // label282
            // 
            this.label282.Location = new System.Drawing.Point(469, 109);
            this.label282.Name = "label282";
            this.label282.Size = new System.Drawing.Size(85, 16);
            this.label282.TabIndex = 27;
            this.label282.Text = "AdjustRGBB";
            // 
            // label281
            // 
            this.label281.Location = new System.Drawing.Point(383, 109);
            this.label281.Name = "label281";
            this.label281.Size = new System.Drawing.Size(49, 16);
            this.label281.TabIndex = 26;
            this.label281.Text = "(1-255)";
            // 
            // txtStream1AdjustRGBG
            // 
            this.txtStream1AdjustRGBG.Location = new System.Drawing.Point(341, 105);
            this.txtStream1AdjustRGBG.MaxLength = 3;
            this.txtStream1AdjustRGBG.Name = "txtStream1AdjustRGBG";
            this.txtStream1AdjustRGBG.Size = new System.Drawing.Size(36, 19);
            this.txtStream1AdjustRGBG.TabIndex = 25;
            this.txtStream1AdjustRGBG.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1AdjustRGBG.TextChanged += new System.EventHandler(this.txtStream1AdjustRGBG_TextChanged);
            // 
            // label280
            // 
            this.label280.Location = new System.Drawing.Point(238, 109);
            this.label280.Name = "label280";
            this.label280.Size = new System.Drawing.Size(85, 16);
            this.label280.TabIndex = 24;
            this.label280.Text = "AdjustRGBG";
            // 
            // label279
            // 
            this.label279.Location = new System.Drawing.Point(153, 109);
            this.label279.Name = "label279";
            this.label279.Size = new System.Drawing.Size(49, 16);
            this.label279.TabIndex = 23;
            this.label279.Text = "(1-255)";
            // 
            // txtStream1AdjustRGBR
            // 
            this.txtStream1AdjustRGBR.Location = new System.Drawing.Point(111, 105);
            this.txtStream1AdjustRGBR.MaxLength = 3;
            this.txtStream1AdjustRGBR.Name = "txtStream1AdjustRGBR";
            this.txtStream1AdjustRGBR.Size = new System.Drawing.Size(36, 19);
            this.txtStream1AdjustRGBR.TabIndex = 22;
            this.txtStream1AdjustRGBR.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1AdjustRGBR.TextChanged += new System.EventHandler(this.txtStream1AdjustRGBR_TextChanged);
            // 
            // label278
            // 
            this.label278.Location = new System.Drawing.Point(8, 109);
            this.label278.Name = "label278";
            this.label278.Size = new System.Drawing.Size(85, 16);
            this.label278.TabIndex = 21;
            this.label278.Text = "AdjustRGBR";
            // 
            // chkStream1AdjustRGB
            // 
            this.chkStream1AdjustRGB.Location = new System.Drawing.Point(111, 86);
            this.chkStream1AdjustRGB.Name = "chkStream1AdjustRGB";
            this.chkStream1AdjustRGB.Size = new System.Drawing.Size(15, 14);
            this.chkStream1AdjustRGB.TabIndex = 18;
            this.chkStream1AdjustRGB.UseVisualStyleBackColor = true;
            // 
            // label277
            // 
            this.label277.Location = new System.Drawing.Point(8, 86);
            this.label277.Name = "label277";
            this.label277.Size = new System.Drawing.Size(78, 16);
            this.label277.TabIndex = 17;
            this.label277.Text = "AdjustRGB";
            // 
            // label276
            // 
            this.label276.Location = new System.Drawing.Point(544, 63);
            this.label276.Name = "label276";
            this.label276.Size = new System.Drawing.Size(49, 16);
            this.label276.TabIndex = 16;
            this.label276.Text = "(0-254)";
            // 
            // txtStream1ColorReproductionShadow
            // 
            this.txtStream1ColorReproductionShadow.Location = new System.Drawing.Point(502, 59);
            this.txtStream1ColorReproductionShadow.MaxLength = 3;
            this.txtStream1ColorReproductionShadow.Name = "txtStream1ColorReproductionShadow";
            this.txtStream1ColorReproductionShadow.Size = new System.Drawing.Size(36, 19);
            this.txtStream1ColorReproductionShadow.TabIndex = 15;
            this.txtStream1ColorReproductionShadow.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1ColorReproductionShadow.TextChanged += new System.EventHandler(this.txtStream1ColorReproductionShadow_TextChanged);
            // 
            // label275
            // 
            this.label275.Location = new System.Drawing.Point(298, 63);
            this.label275.Name = "label275";
            this.label275.Size = new System.Drawing.Size(157, 16);
            this.label275.TabIndex = 14;
            this.label275.Text = "ColorReproductionShadow";
            // 
            // label274
            // 
            this.label274.Location = new System.Drawing.Point(223, 63);
            this.label274.Name = "label274";
            this.label274.Size = new System.Drawing.Size(49, 16);
            this.label274.TabIndex = 13;
            this.label274.Text = "(1-255)";
            // 
            // txtStream1ColorReproductionHighlight
            // 
            this.txtStream1ColorReproductionHighlight.Location = new System.Drawing.Point(181, 59);
            this.txtStream1ColorReproductionHighlight.MaxLength = 3;
            this.txtStream1ColorReproductionHighlight.Name = "txtStream1ColorReproductionHighlight";
            this.txtStream1ColorReproductionHighlight.Size = new System.Drawing.Size(36, 19);
            this.txtStream1ColorReproductionHighlight.TabIndex = 12;
            this.txtStream1ColorReproductionHighlight.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1ColorReproductionHighlight.TextChanged += new System.EventHandler(this.txtStream1ColorReproductionHighlight_TextChanged);
            // 
            // label273
            // 
            this.label273.Location = new System.Drawing.Point(8, 63);
            this.label273.Name = "label273";
            this.label273.Size = new System.Drawing.Size(156, 16);
            this.label273.TabIndex = 11;
            this.label273.Text = "ColorReproductionHighlight";
            // 
            // label272
            // 
            this.label272.Location = new System.Drawing.Point(544, 40);
            this.label272.Name = "label272";
            this.label272.Size = new System.Drawing.Size(62, 16);
            this.label272.TabIndex = 10;
            this.label272.Text = "(0.1-10.0)";
            // 
            // txtStream1ColorReproductionCustomGamma
            // 
            this.txtStream1ColorReproductionCustomGamma.Location = new System.Drawing.Point(502, 36);
            this.txtStream1ColorReproductionCustomGamma.MaxLength = 4;
            this.txtStream1ColorReproductionCustomGamma.Name = "txtStream1ColorReproductionCustomGamma";
            this.txtStream1ColorReproductionCustomGamma.Size = new System.Drawing.Size(36, 19);
            this.txtStream1ColorReproductionCustomGamma.TabIndex = 9;
            this.txtStream1ColorReproductionCustomGamma.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1ColorReproductionCustomGamma.TextChanged += new System.EventHandler(this.txtStream1ColorReproductionCustomGamma_TextChanged);
            // 
            // label271
            // 
            this.label271.Location = new System.Drawing.Point(298, 40);
            this.label271.Name = "label271";
            this.label271.Size = new System.Drawing.Size(196, 16);
            this.label271.TabIndex = 8;
            this.label271.Text = "ColorReproductionCustomGamma";
            // 
            // label270
            // 
            this.label270.Location = new System.Drawing.Point(223, 40);
            this.label270.Name = "label270";
            this.label270.Size = new System.Drawing.Size(49, 16);
            this.label270.TabIndex = 7;
            this.label270.Text = "(1-255)";
            // 
            // txtStream1ColorReproductionContrast
            // 
            this.txtStream1ColorReproductionContrast.Location = new System.Drawing.Point(181, 36);
            this.txtStream1ColorReproductionContrast.MaxLength = 3;
            this.txtStream1ColorReproductionContrast.Name = "txtStream1ColorReproductionContrast";
            this.txtStream1ColorReproductionContrast.Size = new System.Drawing.Size(36, 19);
            this.txtStream1ColorReproductionContrast.TabIndex = 6;
            this.txtStream1ColorReproductionContrast.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1ColorReproductionContrast.TextChanged += new System.EventHandler(this.txtStream1ColorReproductionContrast_TextChanged);
            // 
            // label269
            // 
            this.label269.Location = new System.Drawing.Point(8, 40);
            this.label269.Name = "label269";
            this.label269.Size = new System.Drawing.Size(162, 16);
            this.label269.TabIndex = 5;
            this.label269.Text = "ColorReproductionContrast";
            // 
            // label268
            // 
            this.label268.Location = new System.Drawing.Point(544, 17);
            this.label268.Name = "label268";
            this.label268.Size = new System.Drawing.Size(49, 16);
            this.label268.TabIndex = 4;
            this.label268.Text = "(1-255)";
            // 
            // txtStream1ColorReproductionBrightness
            // 
            this.txtStream1ColorReproductionBrightness.Location = new System.Drawing.Point(502, 13);
            this.txtStream1ColorReproductionBrightness.MaxLength = 3;
            this.txtStream1ColorReproductionBrightness.Name = "txtStream1ColorReproductionBrightness";
            this.txtStream1ColorReproductionBrightness.Size = new System.Drawing.Size(36, 19);
            this.txtStream1ColorReproductionBrightness.TabIndex = 3;
            this.txtStream1ColorReproductionBrightness.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1ColorReproductionBrightness.TextChanged += new System.EventHandler(this.txtStream1ColorReproductionBrightness_TextChanged);
            // 
            // label267
            // 
            this.label267.Location = new System.Drawing.Point(298, 17);
            this.label267.Name = "label267";
            this.label267.Size = new System.Drawing.Size(171, 16);
            this.label267.TabIndex = 2;
            this.label267.Text = "ColorReproductionBrightness";
            // 
            // cboStream1ColorReproduction
            // 
            this.cboStream1ColorReproduction.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream1ColorReproduction.Items.AddRange(new object[] {
            "Contrast",
            "Hue"});
            this.cboStream1ColorReproduction.Location = new System.Drawing.Point(134, 13);
            this.cboStream1ColorReproduction.MaxDropDownItems = 2;
            this.cboStream1ColorReproduction.Name = "cboStream1ColorReproduction";
            this.cboStream1ColorReproduction.Size = new System.Drawing.Size(121, 20);
            this.cboStream1ColorReproduction.TabIndex = 1;
            // 
            // label266
            // 
            this.label266.Location = new System.Drawing.Point(8, 17);
            this.label266.Name = "label266";
            this.label266.Size = new System.Drawing.Size(113, 16);
            this.label266.TabIndex = 0;
            this.label266.Text = "ColorReproduction";
            // 
            // groupBox18
            // 
            this.groupBox18.Controls.Add(this.cboStream1SEE);
            this.groupBox18.Controls.Add(this.label265);
            this.groupBox18.Controls.Add(this.txtStream1HalftoneFile);
            this.groupBox18.Controls.Add(this.cboStream1Halftone);
            this.groupBox18.Controls.Add(this.label264);
            this.groupBox18.Controls.Add(this.label263);
            this.groupBox18.Controls.Add(this.txtStream1SDTCSensitivity);
            this.groupBox18.Controls.Add(this.label262);
            this.groupBox18.Controls.Add(this.label261);
            this.groupBox18.Controls.Add(this.txtStream1ADTCThreshold);
            this.groupBox18.Controls.Add(this.label260);
            this.groupBox18.Controls.Add(this.chkStream1SimpleSlicePatternRemoval);
            this.groupBox18.Controls.Add(this.label258);
            this.groupBox18.Controls.Add(this.chkStream1StampRemoval);
            this.groupBox18.Controls.Add(this.label257);
            this.groupBox18.Controls.Add(this.chkStream1HalftoneRemoval);
            this.groupBox18.Controls.Add(this.label256);
            this.groupBox18.Controls.Add(this.chkStream1ReversedTypeExtraction);
            this.groupBox18.Controls.Add(this.label255);
            this.groupBox18.Controls.Add(this.chkStream1CharacterExtraction);
            this.groupBox18.Controls.Add(this.label254);
            this.groupBox18.Controls.Add(this.cboStream1PatternRemoval);
            this.groupBox18.Controls.Add(this.label253);
            this.groupBox18.Controls.Add(this.label252);
            this.groupBox18.Controls.Add(this.txtStream1NoiseRejection);
            this.groupBox18.Controls.Add(this.label251);
            this.groupBox18.Controls.Add(this.label250);
            this.groupBox18.Controls.Add(this.txtStream1FadingCompensation);
            this.groupBox18.Controls.Add(this.label249);
            this.groupBox18.Controls.Add(this.label248);
            this.groupBox18.Controls.Add(this.txtStream1CharacterThickness);
            this.groupBox18.Controls.Add(this.label247);
            this.groupBox18.Controls.Add(this.label246);
            this.groupBox18.Controls.Add(this.txtStream1BackgroundThreshold);
            this.groupBox18.Controls.Add(this.label245);
            this.groupBox18.Controls.Add(this.label244);
            this.groupBox18.Controls.Add(this.txtStream1DTCSensitivity);
            this.groupBox18.Controls.Add(this.label243);
            this.groupBox18.Controls.Add(this.label242);
            this.groupBox18.Controls.Add(this.txtStream1Threshold);
            this.groupBox18.Controls.Add(this.label241);
            this.groupBox18.Location = new System.Drawing.Point(8, 211);
            this.groupBox18.Name = "groupBox18";
            this.groupBox18.Size = new System.Drawing.Size(711, 154);
            this.groupBox18.TabIndex = 2;
            this.groupBox18.TabStop = false;
            this.groupBox18.Text = "for Black&&White";
            // 
            // cboStream1SEE
            // 
            this.cboStream1SEE.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream1SEE.Items.AddRange(new object[] {
            "OFF",
            "ON"});
            this.cboStream1SEE.Location = new System.Drawing.Point(592, 128);
            this.cboStream1SEE.MaxDropDownItems = 2;
            this.cboStream1SEE.Name = "cboStream1SEE";
            this.cboStream1SEE.Size = new System.Drawing.Size(57, 20);
            this.cboStream1SEE.TabIndex = 40;
            // 
            // label265
            // 
            this.label265.Location = new System.Drawing.Point(546, 132);
            this.label265.Name = "label265";
            this.label265.Size = new System.Drawing.Size(40, 16);
            this.label265.TabIndex = 39;
            this.label265.Text = "SEE";
            // 
            // txtStream1HalftoneFile
            // 
            this.txtStream1HalftoneFile.Location = new System.Drawing.Point(204, 128);
            this.txtStream1HalftoneFile.MaxLength = 254;
            this.txtStream1HalftoneFile.Name = "txtStream1HalftoneFile";
            this.txtStream1HalftoneFile.Size = new System.Drawing.Size(305, 19);
            this.txtStream1HalftoneFile.TabIndex = 38;
            // 
            // cboStream1Halftone
            // 
            this.cboStream1Halftone.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream1Halftone.Items.AddRange(new object[] {
            "None",
            "DitherPattern0",
            "DitherPattern1",
            "DitherPattern2",
            "DitherPattern3",
            "DitherPatternFile",
            "ErrorDiffusion"});
            this.cboStream1Halftone.Location = new System.Drawing.Point(74, 128);
            this.cboStream1Halftone.MaxDropDownItems = 7;
            this.cboStream1Halftone.Name = "cboStream1Halftone";
            this.cboStream1Halftone.Size = new System.Drawing.Size(125, 20);
            this.cboStream1Halftone.TabIndex = 37;
            // 
            // label264
            // 
            this.label264.Location = new System.Drawing.Point(8, 132);
            this.label264.Name = "label264";
            this.label264.Size = new System.Drawing.Size(60, 16);
            this.label264.TabIndex = 36;
            this.label264.Text = "Halftone";
            // 
            // label263
            // 
            this.label263.Location = new System.Drawing.Point(624, 109);
            this.label263.Name = "label263";
            this.label263.Size = new System.Drawing.Size(43, 16);
            this.label263.TabIndex = 35;
            this.label263.Text = "(1-3)";
            // 
            // txtStream1SDTCSensitivity
            // 
            this.txtStream1SDTCSensitivity.Location = new System.Drawing.Point(582, 105);
            this.txtStream1SDTCSensitivity.MaxLength = 1;
            this.txtStream1SDTCSensitivity.Name = "txtStream1SDTCSensitivity";
            this.txtStream1SDTCSensitivity.Size = new System.Drawing.Size(36, 19);
            this.txtStream1SDTCSensitivity.TabIndex = 34;
            this.txtStream1SDTCSensitivity.Text = "2";
            this.txtStream1SDTCSensitivity.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1SDTCSensitivity.TextChanged += new System.EventHandler(this.txtStream1SDTCSensitivity_TextChanged);
            // 
            // label262
            // 
            this.label262.Location = new System.Drawing.Point(466, 109);
            this.label262.Name = "label262";
            this.label262.Size = new System.Drawing.Size(105, 16);
            this.label262.TabIndex = 33;
            this.label262.Text = "SDTCSensitivity";
            // 
            // label261
            // 
            this.label261.Location = new System.Drawing.Point(384, 109);
            this.label261.Name = "label261";
            this.label261.Size = new System.Drawing.Size(45, 16);
            this.label261.TabIndex = 32;
            this.label261.Text = "(1-255)";
            // 
            // txtStream1ADTCThreshold
            // 
            this.txtStream1ADTCThreshold.Location = new System.Drawing.Point(342, 105);
            this.txtStream1ADTCThreshold.MaxLength = 3;
            this.txtStream1ADTCThreshold.Name = "txtStream1ADTCThreshold";
            this.txtStream1ADTCThreshold.Size = new System.Drawing.Size(36, 19);
            this.txtStream1ADTCThreshold.TabIndex = 31;
            this.txtStream1ADTCThreshold.Text = "83";
            this.txtStream1ADTCThreshold.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1ADTCThreshold.TextChanged += new System.EventHandler(this.txtStream1ADTCThreshold_TextChanged);
            // 
            // label260
            // 
            this.label260.Location = new System.Drawing.Point(225, 109);
            this.label260.Name = "label260";
            this.label260.Size = new System.Drawing.Size(105, 16);
            this.label260.TabIndex = 30;
            this.label260.Text = "ADTCThreshold";
            // 
            // chkStream1SimpleSlicePatternRemoval
            // 
            this.chkStream1SimpleSlicePatternRemoval.Location = new System.Drawing.Point(176, 109);
            this.chkStream1SimpleSlicePatternRemoval.Name = "chkStream1SimpleSlicePatternRemoval";
            this.chkStream1SimpleSlicePatternRemoval.Size = new System.Drawing.Size(15, 14);
            this.chkStream1SimpleSlicePatternRemoval.TabIndex = 29;
            this.chkStream1SimpleSlicePatternRemoval.UseVisualStyleBackColor = true;
            // 
            // label258
            // 
            this.label258.Location = new System.Drawing.Point(8, 109);
            this.label258.Name = "label258";
            this.label258.Size = new System.Drawing.Size(160, 16);
            this.label258.TabIndex = 28;
            this.label258.Text = "SimpleSlicePatternRemoval";
            // 
            // chkStream1StampRemoval
            // 
            this.chkStream1StampRemoval.Location = new System.Drawing.Point(512, 86);
            this.chkStream1StampRemoval.Name = "chkStream1StampRemoval";
            this.chkStream1StampRemoval.Size = new System.Drawing.Size(15, 14);
            this.chkStream1StampRemoval.TabIndex = 27;
            this.chkStream1StampRemoval.UseVisualStyleBackColor = true;
            // 
            // label257
            // 
            this.label257.Location = new System.Drawing.Point(407, 86);
            this.label257.Name = "label257";
            this.label257.Size = new System.Drawing.Size(95, 16);
            this.label257.TabIndex = 26;
            this.label257.Text = "StampRemoval";
            // 
            // chkStream1HalftoneRemoval
            // 
            this.chkStream1HalftoneRemoval.Location = new System.Drawing.Point(342, 86);
            this.chkStream1HalftoneRemoval.Name = "chkStream1HalftoneRemoval";
            this.chkStream1HalftoneRemoval.Size = new System.Drawing.Size(15, 14);
            this.chkStream1HalftoneRemoval.TabIndex = 25;
            this.chkStream1HalftoneRemoval.UseVisualStyleBackColor = true;
            // 
            // label256
            // 
            this.label256.Location = new System.Drawing.Point(225, 86);
            this.label256.Name = "label256";
            this.label256.Size = new System.Drawing.Size(105, 16);
            this.label256.TabIndex = 24;
            this.label256.Text = "HalftoneRemoval";
            // 
            // chkStream1ReversedTypeExtraction
            // 
            this.chkStream1ReversedTypeExtraction.Location = new System.Drawing.Point(159, 86);
            this.chkStream1ReversedTypeExtraction.Name = "chkStream1ReversedTypeExtraction";
            this.chkStream1ReversedTypeExtraction.Size = new System.Drawing.Size(15, 14);
            this.chkStream1ReversedTypeExtraction.TabIndex = 23;
            this.chkStream1ReversedTypeExtraction.UseVisualStyleBackColor = true;
            // 
            // label255
            // 
            this.label255.Location = new System.Drawing.Point(8, 86);
            this.label255.Name = "label255";
            this.label255.Size = new System.Drawing.Size(147, 16);
            this.label255.TabIndex = 22;
            this.label255.Text = "ReversedTypeExtraction";
            // 
            // chkStream1CharacterExtraction
            // 
            this.chkStream1CharacterExtraction.Location = new System.Drawing.Point(381, 63);
            this.chkStream1CharacterExtraction.Name = "chkStream1CharacterExtraction";
            this.chkStream1CharacterExtraction.Size = new System.Drawing.Size(15, 14);
            this.chkStream1CharacterExtraction.TabIndex = 21;
            this.chkStream1CharacterExtraction.UseVisualStyleBackColor = true;
            // 
            // label254
            // 
            this.label254.Location = new System.Drawing.Point(251, 63);
            this.label254.Name = "label254";
            this.label254.Size = new System.Drawing.Size(113, 16);
            this.label254.TabIndex = 20;
            this.label254.Text = "CharacterExtraction";
            // 
            // cboStream1PatternRemoval
            // 
            this.cboStream1PatternRemoval.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream1PatternRemoval.Items.AddRange(new object[] {
            "OFF",
            "Standard",
            "Advanced",
            "Strong"});
            this.cboStream1PatternRemoval.Location = new System.Drawing.Point(120, 59);
            this.cboStream1PatternRemoval.MaxDropDownItems = 4;
            this.cboStream1PatternRemoval.Name = "cboStream1PatternRemoval";
            this.cboStream1PatternRemoval.Size = new System.Drawing.Size(91, 20);
            this.cboStream1PatternRemoval.TabIndex = 19;
            // 
            // label253
            // 
            this.label253.Location = new System.Drawing.Point(8, 63);
            this.label253.Name = "label253";
            this.label253.Size = new System.Drawing.Size(100, 16);
            this.label253.TabIndex = 18;
            this.label253.Text = "PatternRemoval";
            // 
            // label252
            // 
            this.label252.Location = new System.Drawing.Point(632, 40);
            this.label252.Name = "label252";
            this.label252.Size = new System.Drawing.Size(43, 16);
            this.label252.TabIndex = 17;
            this.label252.Text = "(0-20)";
            // 
            // txtStream1NoiseRejection
            // 
            this.txtStream1NoiseRejection.Location = new System.Drawing.Point(590, 36);
            this.txtStream1NoiseRejection.MaxLength = 2;
            this.txtStream1NoiseRejection.Name = "txtStream1NoiseRejection";
            this.txtStream1NoiseRejection.Size = new System.Drawing.Size(36, 19);
            this.txtStream1NoiseRejection.TabIndex = 16;
            this.txtStream1NoiseRejection.Text = "0";
            this.txtStream1NoiseRejection.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1NoiseRejection.TextChanged += new System.EventHandler(this.txtStream1NoiseRejection_TextChanged);
            // 
            // label251
            // 
            this.label251.Location = new System.Drawing.Point(486, 40);
            this.label251.Name = "label251";
            this.label251.Size = new System.Drawing.Size(100, 16);
            this.label251.TabIndex = 15;
            this.label251.Text = "NoiseRejection";
            // 
            // label250
            // 
            this.label250.Location = new System.Drawing.Point(423, 40);
            this.label250.Name = "label250";
            this.label250.Size = new System.Drawing.Size(41, 16);
            this.label250.TabIndex = 14;
            this.label250.Text = "(0-5)";
            // 
            // txtStream1FadingCompensation
            // 
            this.txtStream1FadingCompensation.Location = new System.Drawing.Point(381, 36);
            this.txtStream1FadingCompensation.MaxLength = 1;
            this.txtStream1FadingCompensation.Name = "txtStream1FadingCompensation";
            this.txtStream1FadingCompensation.Size = new System.Drawing.Size(36, 19);
            this.txtStream1FadingCompensation.TabIndex = 13;
            this.txtStream1FadingCompensation.Text = "0";
            this.txtStream1FadingCompensation.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1FadingCompensation.TextChanged += new System.EventHandler(this.txtStream1FadingCompensation_TextChanged);
            // 
            // label249
            // 
            this.label249.Location = new System.Drawing.Point(251, 40);
            this.label249.Name = "label249";
            this.label249.Size = new System.Drawing.Size(122, 16);
            this.label249.TabIndex = 12;
            this.label249.Text = "FadingCompensation";
            // 
            // label248
            // 
            this.label248.Location = new System.Drawing.Point(184, 40);
            this.label248.Name = "label248";
            this.label248.Size = new System.Drawing.Size(45, 16);
            this.label248.TabIndex = 11;
            this.label248.Text = "(0-10)";
            // 
            // txtStream1CharacterThickness
            // 
            this.txtStream1CharacterThickness.Location = new System.Drawing.Point(142, 36);
            this.txtStream1CharacterThickness.MaxLength = 2;
            this.txtStream1CharacterThickness.Name = "txtStream1CharacterThickness";
            this.txtStream1CharacterThickness.Size = new System.Drawing.Size(36, 19);
            this.txtStream1CharacterThickness.TabIndex = 10;
            this.txtStream1CharacterThickness.Text = "5";
            this.txtStream1CharacterThickness.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1CharacterThickness.TextChanged += new System.EventHandler(this.txtStream1CharacterThickness_TextChanged);
            // 
            // label247
            // 
            this.label247.Location = new System.Drawing.Point(8, 40);
            this.label247.Name = "label247";
            this.label247.Size = new System.Drawing.Size(120, 16);
            this.label247.TabIndex = 9;
            this.label247.Text = "CharacterThickness";
            // 
            // label246
            // 
            this.label246.Location = new System.Drawing.Point(611, 17);
            this.label246.Name = "label246";
            this.label246.Size = new System.Drawing.Size(45, 16);
            this.label246.TabIndex = 8;
            this.label246.Text = "(0-100)";
            // 
            // txtStream1BackgroundThreshold
            // 
            this.txtStream1BackgroundThreshold.Location = new System.Drawing.Point(569, 13);
            this.txtStream1BackgroundThreshold.MaxLength = 3;
            this.txtStream1BackgroundThreshold.Name = "txtStream1BackgroundThreshold";
            this.txtStream1BackgroundThreshold.Size = new System.Drawing.Size(36, 19);
            this.txtStream1BackgroundThreshold.TabIndex = 7;
            this.txtStream1BackgroundThreshold.Text = "50";
            this.txtStream1BackgroundThreshold.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1BackgroundThreshold.TextChanged += new System.EventHandler(this.txtStream1BackgroundThreshold_TextChanged);
            // 
            // label245
            // 
            this.label245.Location = new System.Drawing.Point(432, 17);
            this.label245.Name = "label245";
            this.label245.Size = new System.Drawing.Size(125, 16);
            this.label245.TabIndex = 6;
            this.label245.Text = "BackgroundThreshold";
            // 
            // label244
            // 
            this.label244.Location = new System.Drawing.Point(368, 17);
            this.label244.Name = "label244";
            this.label244.Size = new System.Drawing.Size(45, 16);
            this.label244.TabIndex = 5;
            this.label244.Text = "(0-100)";
            // 
            // txtStream1DTCSensitivity
            // 
            this.txtStream1DTCSensitivity.Location = new System.Drawing.Point(326, 13);
            this.txtStream1DTCSensitivity.MaxLength = 3;
            this.txtStream1DTCSensitivity.Name = "txtStream1DTCSensitivity";
            this.txtStream1DTCSensitivity.Size = new System.Drawing.Size(36, 19);
            this.txtStream1DTCSensitivity.TabIndex = 4;
            this.txtStream1DTCSensitivity.Text = "50";
            this.txtStream1DTCSensitivity.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1DTCSensitivity.TextChanged += new System.EventHandler(this.txtStream1DTCSensitivity_TextChanged);
            // 
            // label243
            // 
            this.label243.Location = new System.Drawing.Point(225, 17);
            this.label243.Name = "label243";
            this.label243.Size = new System.Drawing.Size(97, 16);
            this.label243.TabIndex = 3;
            this.label243.Text = "DTCSensitivity";
            // 
            // label242
            // 
            this.label242.Location = new System.Drawing.Point(130, 17);
            this.label242.Name = "label242";
            this.label242.Size = new System.Drawing.Size(77, 16);
            this.label242.TabIndex = 2;
            this.label242.Text = "(-2,-1,0-255)";
            // 
            // txtStream1Threshold
            // 
            this.txtStream1Threshold.Location = new System.Drawing.Point(88, 13);
            this.txtStream1Threshold.MaxLength = 3;
            this.txtStream1Threshold.Name = "txtStream1Threshold";
            this.txtStream1Threshold.Size = new System.Drawing.Size(36, 19);
            this.txtStream1Threshold.TabIndex = 1;
            this.txtStream1Threshold.Text = "128";
            this.txtStream1Threshold.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1Threshold.TextChanged += new System.EventHandler(this.txtStream1Threshold_TextChanged);
            // 
            // label241
            // 
            this.label241.Location = new System.Drawing.Point(8, 17);
            this.label241.Name = "label241";
            this.label241.Size = new System.Drawing.Size(76, 16);
            this.label241.TabIndex = 0;
            this.label241.Text = "Threshold";
            // 
            // groupBox17
            // 
            this.groupBox17.Controls.Add(this.cboStream1Sharpness);
            this.groupBox17.Controls.Add(this.label240);
            this.groupBox17.Controls.Add(this.cboStream1Background);
            this.groupBox17.Controls.Add(this.label238);
            this.groupBox17.Controls.Add(this.label237);
            this.groupBox17.Controls.Add(this.txtStream1CustomGamma);
            this.groupBox17.Controls.Add(this.label236);
            this.groupBox17.Controls.Add(this.label235);
            this.groupBox17.Controls.Add(this.txtStream1Contrast);
            this.groupBox17.Controls.Add(this.label234);
            this.groupBox17.Controls.Add(this.label233);
            this.groupBox17.Controls.Add(this.txtStream1Brightness);
            this.groupBox17.Controls.Add(this.label232);
            this.groupBox17.Controls.Add(this.txtStream1GammaFile);
            this.groupBox17.Controls.Add(this.cboStream1Gamma);
            this.groupBox17.Controls.Add(this.label231);
            this.groupBox17.Controls.Add(this.chkStream1Reverse);
            this.groupBox17.Controls.Add(this.label230);
            this.groupBox17.Controls.Add(this.chkStream1AutoBright);
            this.groupBox17.Controls.Add(this.label229);
            this.groupBox17.Location = new System.Drawing.Point(8, 100);
            this.groupBox17.Name = "groupBox17";
            this.groupBox17.Size = new System.Drawing.Size(711, 107);
            this.groupBox17.TabIndex = 1;
            this.groupBox17.TabStop = false;
            this.groupBox17.Text = "for All PixelType";
            // 
            // cboStream1Sharpness
            // 
            this.cboStream1Sharpness.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream1Sharpness.Items.AddRange(new object[] {
            "None",
            "Emphasis Low",
            "Emphasis Mid",
            "Emphasis High",
            "Edge Extract",
            "Level 1",
            "Level 2",
            "Level 3",
            "Level 4"});
            this.cboStream1Sharpness.Location = new System.Drawing.Point(286, 82);
            this.cboStream1Sharpness.MaxDropDownItems = 9;
            this.cboStream1Sharpness.Name = "cboStream1Sharpness";
            this.cboStream1Sharpness.Size = new System.Drawing.Size(125, 20);
            this.cboStream1Sharpness.TabIndex = 21;
            // 
            // label240
            // 
            this.label240.Location = new System.Drawing.Point(214, 86);
            this.label240.Name = "label240";
            this.label240.Size = new System.Drawing.Size(77, 16);
            this.label240.TabIndex = 20;
            this.label240.Text = "Sharpness";
            // 
            // cboStream1Background
            // 
            this.cboStream1Background.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream1Background.Items.AddRange(new object[] {
            "OFF",
            "ON",
            "AUTO"});
            this.cboStream1Background.Location = new System.Drawing.Point(105, 82);
            this.cboStream1Background.MaxDropDownItems = 3;
            this.cboStream1Background.Name = "cboStream1Background";
            this.cboStream1Background.Size = new System.Drawing.Size(60, 20);
            this.cboStream1Background.TabIndex = 17;
            // 
            // label238
            // 
            this.label238.Location = new System.Drawing.Point(8, 86);
            this.label238.Name = "label238";
            this.label238.Size = new System.Drawing.Size(77, 16);
            this.label238.TabIndex = 16;
            this.label238.Text = "Background";
            // 
            // label237
            // 
            this.label237.Location = new System.Drawing.Point(591, 64);
            this.label237.Name = "label237";
            this.label237.Size = new System.Drawing.Size(62, 16);
            this.label237.TabIndex = 15;
            this.label237.Text = "(0.1-10.0)";
            // 
            // txtStream1CustomGamma
            // 
            this.txtStream1CustomGamma.Location = new System.Drawing.Point(550, 60);
            this.txtStream1CustomGamma.MaxLength = 4;
            this.txtStream1CustomGamma.Name = "txtStream1CustomGamma";
            this.txtStream1CustomGamma.Size = new System.Drawing.Size(36, 19);
            this.txtStream1CustomGamma.TabIndex = 14;
            this.txtStream1CustomGamma.Text = "2.2";
            this.txtStream1CustomGamma.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1CustomGamma.TextChanged += new System.EventHandler(this.txtStream1CustomGamma_TextChanged);
            // 
            // label236
            // 
            this.label236.Location = new System.Drawing.Point(432, 63);
            this.label236.Name = "label236";
            this.label236.Size = new System.Drawing.Size(90, 16);
            this.label236.TabIndex = 13;
            this.label236.Text = "CustomGamma";
            // 
            // label235
            // 
            this.label235.Location = new System.Drawing.Point(342, 64);
            this.label235.Name = "label235";
            this.label235.Size = new System.Drawing.Size(50, 16);
            this.label235.TabIndex = 12;
            this.label235.Text = "(1-255)";
            // 
            // txtStream1Contrast
            // 
            this.txtStream1Contrast.Location = new System.Drawing.Point(301, 60);
            this.txtStream1Contrast.MaxLength = 3;
            this.txtStream1Contrast.Name = "txtStream1Contrast";
            this.txtStream1Contrast.Size = new System.Drawing.Size(36, 19);
            this.txtStream1Contrast.TabIndex = 11;
            this.txtStream1Contrast.Text = "128";
            this.txtStream1Contrast.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1Contrast.TextChanged += new System.EventHandler(this.txtStream1Contrast_TextChanged);
            // 
            // label234
            // 
            this.label234.Location = new System.Drawing.Point(214, 63);
            this.label234.Name = "label234";
            this.label234.Size = new System.Drawing.Size(76, 16);
            this.label234.TabIndex = 10;
            this.label234.Text = "Contrast";
            // 
            // label233
            // 
            this.label233.Location = new System.Drawing.Point(146, 64);
            this.label233.Name = "label233";
            this.label233.Size = new System.Drawing.Size(50, 16);
            this.label233.TabIndex = 9;
            this.label233.Text = "(1-255)";
            // 
            // txtStream1Brightness
            // 
            this.txtStream1Brightness.Location = new System.Drawing.Point(105, 60);
            this.txtStream1Brightness.MaxLength = 3;
            this.txtStream1Brightness.Name = "txtStream1Brightness";
            this.txtStream1Brightness.Size = new System.Drawing.Size(36, 19);
            this.txtStream1Brightness.TabIndex = 8;
            this.txtStream1Brightness.Text = "128";
            this.txtStream1Brightness.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1Brightness.TextChanged += new System.EventHandler(this.txtStream1Brightness_TextChanged);
            // 
            // label232
            // 
            this.label232.Location = new System.Drawing.Point(8, 63);
            this.label232.Name = "label232";
            this.label232.Size = new System.Drawing.Size(91, 16);
            this.label232.TabIndex = 7;
            this.label232.Text = "Brightness";
            // 
            // txtStream1GammaFile
            // 
            this.txtStream1GammaFile.Location = new System.Drawing.Point(235, 36);
            this.txtStream1GammaFile.MaxLength = 254;
            this.txtStream1GammaFile.Name = "txtStream1GammaFile";
            this.txtStream1GammaFile.Size = new System.Drawing.Size(309, 19);
            this.txtStream1GammaFile.TabIndex = 6;
            // 
            // cboStream1Gamma
            // 
            this.cboStream1Gamma.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream1Gamma.Items.AddRange(new object[] {
            "None",
            "Soft",
            "Sharp",
            "GammaPatternFile",
            "Custom",
            "Bright",
            "Standard"});
            this.cboStream1Gamma.Location = new System.Drawing.Point(105, 36);
            this.cboStream1Gamma.Name = "cboStream1Gamma";
            this.cboStream1Gamma.Size = new System.Drawing.Size(125, 20);
            this.cboStream1Gamma.TabIndex = 5;
            // 
            // label231
            // 
            this.label231.Location = new System.Drawing.Point(8, 40);
            this.label231.Name = "label231";
            this.label231.Size = new System.Drawing.Size(81, 16);
            this.label231.TabIndex = 4;
            this.label231.Text = "Gamma";
            // 
            // chkStream1Reverse
            // 
            this.chkStream1Reverse.Location = new System.Drawing.Point(301, 17);
            this.chkStream1Reverse.Name = "chkStream1Reverse";
            this.chkStream1Reverse.Size = new System.Drawing.Size(15, 14);
            this.chkStream1Reverse.TabIndex = 3;
            this.chkStream1Reverse.UseVisualStyleBackColor = true;
            // 
            // label230
            // 
            this.label230.Location = new System.Drawing.Point(214, 17);
            this.label230.Name = "label230";
            this.label230.Size = new System.Drawing.Size(76, 16);
            this.label230.TabIndex = 2;
            this.label230.Text = "Reverse";
            // 
            // chkStream1AutoBright
            // 
            this.chkStream1AutoBright.Location = new System.Drawing.Point(105, 17);
            this.chkStream1AutoBright.Name = "chkStream1AutoBright";
            this.chkStream1AutoBright.Size = new System.Drawing.Size(15, 14);
            this.chkStream1AutoBright.TabIndex = 1;
            this.chkStream1AutoBright.UseVisualStyleBackColor = true;
            // 
            // label229
            // 
            this.label229.Location = new System.Drawing.Point(8, 17);
            this.label229.Name = "label229";
            this.label229.Size = new System.Drawing.Size(85, 16);
            this.label229.TabIndex = 0;
            this.label229.Text = "AutoBright";
            // 
            // groupBox16
            // 
            this.groupBox16.Controls.Add(this.txtFileName1);
            this.groupBox16.Controls.Add(this.label439);
            this.groupBox16.Controls.Add(this.label438);
            this.groupBox16.Controls.Add(this.txtFileCounter1);
            this.groupBox16.Controls.Add(this.label437);
            this.groupBox16.Controls.Add(this.cboStream1PixelType);
            this.groupBox16.Controls.Add(this.label228);
            this.groupBox16.Controls.Add(this.label227);
            this.groupBox16.Controls.Add(this.txtStream1CustomResolution);
            this.groupBox16.Controls.Add(this.label226);
            this.groupBox16.Controls.Add(this.cboStream1CompressionType);
            this.groupBox16.Controls.Add(this.label225);
            this.groupBox16.Controls.Add(this.cboStream1Resolution);
            this.groupBox16.Controls.Add(this.label224);
            this.groupBox16.Controls.Add(this.cboStream1FileType);
            this.groupBox16.Controls.Add(this.label223);
            this.groupBox16.Location = new System.Drawing.Point(8, 8);
            this.groupBox16.Name = "groupBox16";
            this.groupBox16.Size = new System.Drawing.Size(711, 88);
            this.groupBox16.TabIndex = 0;
            this.groupBox16.TabStop = false;
            // 
            // txtFileName1
            // 
            this.txtFileName1.Location = new System.Drawing.Point(89, 60);
            this.txtFileName1.MaxLength = 254;
            this.txtFileName1.Name = "txtFileName1";
            this.txtFileName1.Size = new System.Drawing.Size(430, 19);
            this.txtFileName1.TabIndex = 15;
            // 
            // label439
            // 
            this.label439.Location = new System.Drawing.Point(8, 63);
            this.label439.Name = "label439";
            this.label439.Size = new System.Drawing.Size(75, 16);
            this.label439.TabIndex = 14;
            this.label439.Text = "FileName";
            // 
            // label438
            // 
            this.label438.Location = new System.Drawing.Point(498, 40);
            this.label438.Name = "label438";
            this.label438.Size = new System.Drawing.Size(82, 16);
            this.label438.TabIndex = 11;
            this.label438.Text = "FileCounter";
            // 
            // txtFileCounter1
            // 
            this.txtFileCounter1.Location = new System.Drawing.Point(588, 37);
            this.txtFileCounter1.MaxLength = 5;
            this.txtFileCounter1.Name = "txtFileCounter1";
            this.txtFileCounter1.Size = new System.Drawing.Size(45, 19);
            this.txtFileCounter1.TabIndex = 12;
            this.txtFileCounter1.Text = "-1";
            this.txtFileCounter1.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtFileCounter1.TextChanged += new System.EventHandler(this.txtFileCounter1_TextChanged);
            // 
            // label437
            // 
            this.label437.Location = new System.Drawing.Point(638, 41);
            this.label437.Name = "label437";
            this.label437.Size = new System.Drawing.Size(70, 16);
            this.label437.TabIndex = 13;
            this.label437.Text = "(-1,0-65535)";
            // 
            // cboStream1PixelType
            // 
            this.cboStream1PixelType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream1PixelType.FormattingEnabled = true;
            this.cboStream1PixelType.Items.AddRange(new object[] {
            "Black&White",
            "Grayscale",
            "RGB"});
            this.cboStream1PixelType.Location = new System.Drawing.Point(89, 14);
            this.cboStream1PixelType.Name = "cboStream1PixelType";
            this.cboStream1PixelType.Size = new System.Drawing.Size(106, 20);
            this.cboStream1PixelType.TabIndex = 1;
            // 
            // label228
            // 
            this.label228.Location = new System.Drawing.Point(8, 17);
            this.label228.Name = "label228";
            this.label228.Size = new System.Drawing.Size(72, 16);
            this.label228.TabIndex = 0;
            this.label228.Text = "PixelType";
            // 
            // label227
            // 
            this.label227.Location = new System.Drawing.Point(410, 41);
            this.label227.Name = "label227";
            this.label227.Size = new System.Drawing.Size(76, 16);
            this.label227.TabIndex = 10;
            this.label227.Text = "(50-600dpi)";
            // 
            // txtStream1CustomResolution
            // 
            this.txtStream1CustomResolution.Location = new System.Drawing.Point(360, 37);
            this.txtStream1CustomResolution.MaxLength = 4;
            this.txtStream1CustomResolution.Name = "txtStream1CustomResolution";
            this.txtStream1CustomResolution.Size = new System.Drawing.Size(45, 19);
            this.txtStream1CustomResolution.TabIndex = 9;
            this.txtStream1CustomResolution.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream1CustomResolution.TextChanged += new System.EventHandler(this.txtStream1CustomResolution_TextChanged);
            // 
            // label226
            // 
            this.label226.Location = new System.Drawing.Point(240, 40);
            this.label226.Name = "label226";
            this.label226.Size = new System.Drawing.Size(115, 16);
            this.label226.TabIndex = 8;
            this.label226.Text = "CustomResolution";
            // 
            // cboStream1CompressionType
            // 
            this.cboStream1CompressionType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream1CompressionType.Items.AddRange(new object[] {
            "No Compress",
            "CCITT G3(1D)",
            "CCITT G3(2D)(KFactor=2)",
            "CCITT G3(2D)(KFactor=4)",
            "CCITT G4",
            "JPEG",
            "Old JPEG"});
            this.cboStream1CompressionType.Location = new System.Drawing.Point(544, 14);
            this.cboStream1CompressionType.MaxDropDownItems = 7;
            this.cboStream1CompressionType.Name = "cboStream1CompressionType";
            this.cboStream1CompressionType.Size = new System.Drawing.Size(161, 20);
            this.cboStream1CompressionType.TabIndex = 5;
            // 
            // label225
            // 
            this.label225.Location = new System.Drawing.Point(432, 17);
            this.label225.Name = "label225";
            this.label225.Size = new System.Drawing.Size(103, 16);
            this.label225.TabIndex = 4;
            this.label225.Text = "CompressionType";
            // 
            // cboStream1Resolution
            // 
            this.cboStream1Resolution.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream1Resolution.Items.AddRange(new object[] {
            "200dpi",
            "240dpi",
            "300dpi",
            "400dpi",
            "500dpi",
            "600dpi",
            "700dpi",
            "800dpi",
            "1200dpi",
            "Custom"});
            this.cboStream1Resolution.Location = new System.Drawing.Point(89, 37);
            this.cboStream1Resolution.MaxDropDownItems = 10;
            this.cboStream1Resolution.Name = "cboStream1Resolution";
            this.cboStream1Resolution.Size = new System.Drawing.Size(121, 20);
            this.cboStream1Resolution.TabIndex = 7;
            this.cboStream1Resolution.SelectedIndexChanged += new System.EventHandler(this.cboStream1Resolution_SelectedIndexChanged);
            // 
            // label224
            // 
            this.label224.Location = new System.Drawing.Point(8, 40);
            this.label224.Name = "label224";
            this.label224.Size = new System.Drawing.Size(76, 16);
            this.label224.TabIndex = 6;
            this.label224.Text = "Resolution";
            // 
            // cboStream1FileType
            // 
            this.cboStream1FileType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream1FileType.Items.AddRange(new object[] {
            "BMP",
            "TIFF",
            "MultipageTIFF",
            "JPEG",
            "PDF",
            "MultipagePDF"});
            this.cboStream1FileType.Location = new System.Drawing.Point(301, 14);
            this.cboStream1FileType.MaxDropDownItems = 6;
            this.cboStream1FileType.Name = "cboStream1FileType";
            this.cboStream1FileType.Size = new System.Drawing.Size(105, 20);
            this.cboStream1FileType.TabIndex = 3;
            // 
            // label223
            // 
            this.label223.Location = new System.Drawing.Point(230, 17);
            this.label223.Name = "label223";
            this.label223.Size = new System.Drawing.Size(60, 16);
            this.label223.TabIndex = 2;
            this.label223.Text = "FileType";
            // 
            // Stream2
            // 
            this.Stream2.BackColor = System.Drawing.SystemColors.Control;
            this.Stream2.Controls.Add(this.groupBox27);
            this.Stream2.Controls.Add(this.groupBox26);
            this.Stream2.Controls.Add(this.groupBox25);
            this.Stream2.Controls.Add(this.groupBox24);
            this.Stream2.Controls.Add(this.groupBox23);
            this.Stream2.Controls.Add(this.groupBox22);
            this.Stream2.Location = new System.Drawing.Point(4, 22);
            this.Stream2.Name = "Stream2";
            this.Stream2.Size = new System.Drawing.Size(728, 595);
            this.Stream2.TabIndex = 9;
            this.Stream2.Text = "2ndStream";
            // 
            // groupBox27
            // 
            this.groupBox27.Controls.Add(this.chkStream2sRGB);
            this.groupBox27.Controls.Add(this.label347);
            this.groupBox27.Controls.Add(this.label348);
            this.groupBox27.Controls.Add(this.txtStream2AdjustRGBB);
            this.groupBox27.Controls.Add(this.label349);
            this.groupBox27.Controls.Add(this.label350);
            this.groupBox27.Controls.Add(this.txtStream2AdjustRGBG);
            this.groupBox27.Controls.Add(this.label351);
            this.groupBox27.Controls.Add(this.label352);
            this.groupBox27.Controls.Add(this.txtStream2AdjustRGBR);
            this.groupBox27.Controls.Add(this.label353);
            this.groupBox27.Controls.Add(this.chkStream2AdjustRGB);
            this.groupBox27.Controls.Add(this.label354);
            this.groupBox27.Controls.Add(this.label355);
            this.groupBox27.Controls.Add(this.txtStream2ColorReproductionShadow);
            this.groupBox27.Controls.Add(this.label356);
            this.groupBox27.Controls.Add(this.label357);
            this.groupBox27.Controls.Add(this.txtStream2ColorReproductionHighlight);
            this.groupBox27.Controls.Add(this.label358);
            this.groupBox27.Controls.Add(this.label359);
            this.groupBox27.Controls.Add(this.txtStream2ColorReproductionCustomGamma);
            this.groupBox27.Controls.Add(this.label360);
            this.groupBox27.Controls.Add(this.label361);
            this.groupBox27.Controls.Add(this.txtStream2ColorReproductionContrast);
            this.groupBox27.Controls.Add(this.label362);
            this.groupBox27.Controls.Add(this.label363);
            this.groupBox27.Controls.Add(this.txtStream2ColorReproductionBrightness);
            this.groupBox27.Controls.Add(this.label364);
            this.groupBox27.Controls.Add(this.cboStream2ColorReproduction);
            this.groupBox27.Controls.Add(this.label365);
            this.groupBox27.Location = new System.Drawing.Point(8, 461);
            this.groupBox27.Name = "groupBox27";
            this.groupBox27.Size = new System.Drawing.Size(711, 128);
            this.groupBox27.TabIndex = 6;
            this.groupBox27.TabStop = false;
            this.groupBox27.Text = "for RGB";
            // 
            // chkStream2sRGB
            // 
            this.chkStream2sRGB.Location = new System.Drawing.Point(341, 86);
            this.chkStream2sRGB.Name = "chkStream2sRGB";
            this.chkStream2sRGB.Size = new System.Drawing.Size(15, 14);
            this.chkStream2sRGB.TabIndex = 20;
            this.chkStream2sRGB.UseVisualStyleBackColor = true;
            // 
            // label347
            // 
            this.label347.Location = new System.Drawing.Point(238, 86);
            this.label347.Name = "label347";
            this.label347.Size = new System.Drawing.Size(51, 16);
            this.label347.TabIndex = 19;
            this.label347.Text = "sRGB";
            // 
            // label348
            // 
            this.label348.Location = new System.Drawing.Point(614, 109);
            this.label348.Name = "label348";
            this.label348.Size = new System.Drawing.Size(49, 16);
            this.label348.TabIndex = 29;
            this.label348.Text = "(1-255)";
            // 
            // txtStream2AdjustRGBB
            // 
            this.txtStream2AdjustRGBB.Location = new System.Drawing.Point(572, 105);
            this.txtStream2AdjustRGBB.MaxLength = 3;
            this.txtStream2AdjustRGBB.Name = "txtStream2AdjustRGBB";
            this.txtStream2AdjustRGBB.Size = new System.Drawing.Size(36, 19);
            this.txtStream2AdjustRGBB.TabIndex = 28;
            this.txtStream2AdjustRGBB.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2AdjustRGBB.TextChanged += new System.EventHandler(this.txtStream2AdjustRGBB_TextChanged);
            // 
            // label349
            // 
            this.label349.Location = new System.Drawing.Point(469, 109);
            this.label349.Name = "label349";
            this.label349.Size = new System.Drawing.Size(85, 16);
            this.label349.TabIndex = 27;
            this.label349.Text = "AdjustRGBB";
            // 
            // label350
            // 
            this.label350.Location = new System.Drawing.Point(383, 109);
            this.label350.Name = "label350";
            this.label350.Size = new System.Drawing.Size(49, 16);
            this.label350.TabIndex = 26;
            this.label350.Text = "(1-255)";
            // 
            // txtStream2AdjustRGBG
            // 
            this.txtStream2AdjustRGBG.Location = new System.Drawing.Point(341, 105);
            this.txtStream2AdjustRGBG.MaxLength = 3;
            this.txtStream2AdjustRGBG.Name = "txtStream2AdjustRGBG";
            this.txtStream2AdjustRGBG.Size = new System.Drawing.Size(36, 19);
            this.txtStream2AdjustRGBG.TabIndex = 25;
            this.txtStream2AdjustRGBG.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2AdjustRGBG.TextChanged += new System.EventHandler(this.txtStream2AdjustRGBG_TextChanged);
            // 
            // label351
            // 
            this.label351.Location = new System.Drawing.Point(238, 109);
            this.label351.Name = "label351";
            this.label351.Size = new System.Drawing.Size(85, 16);
            this.label351.TabIndex = 24;
            this.label351.Text = "AdjustRGBG";
            // 
            // label352
            // 
            this.label352.Location = new System.Drawing.Point(153, 109);
            this.label352.Name = "label352";
            this.label352.Size = new System.Drawing.Size(49, 16);
            this.label352.TabIndex = 23;
            this.label352.Text = "(1-255)";
            // 
            // txtStream2AdjustRGBR
            // 
            this.txtStream2AdjustRGBR.Location = new System.Drawing.Point(111, 105);
            this.txtStream2AdjustRGBR.MaxLength = 3;
            this.txtStream2AdjustRGBR.Name = "txtStream2AdjustRGBR";
            this.txtStream2AdjustRGBR.Size = new System.Drawing.Size(36, 19);
            this.txtStream2AdjustRGBR.TabIndex = 22;
            this.txtStream2AdjustRGBR.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2AdjustRGBR.TextChanged += new System.EventHandler(this.txtStream2AdjustRGBR_TextChanged);
            // 
            // label353
            // 
            this.label353.Location = new System.Drawing.Point(8, 109);
            this.label353.Name = "label353";
            this.label353.Size = new System.Drawing.Size(85, 16);
            this.label353.TabIndex = 21;
            this.label353.Text = "AdjustRGBR";
            // 
            // chkStream2AdjustRGB
            // 
            this.chkStream2AdjustRGB.Location = new System.Drawing.Point(111, 86);
            this.chkStream2AdjustRGB.Name = "chkStream2AdjustRGB";
            this.chkStream2AdjustRGB.Size = new System.Drawing.Size(15, 14);
            this.chkStream2AdjustRGB.TabIndex = 18;
            this.chkStream2AdjustRGB.UseVisualStyleBackColor = true;
            // 
            // label354
            // 
            this.label354.Location = new System.Drawing.Point(8, 86);
            this.label354.Name = "label354";
            this.label354.Size = new System.Drawing.Size(78, 16);
            this.label354.TabIndex = 17;
            this.label354.Text = "AdjustRGB";
            // 
            // label355
            // 
            this.label355.Location = new System.Drawing.Point(544, 63);
            this.label355.Name = "label355";
            this.label355.Size = new System.Drawing.Size(49, 16);
            this.label355.TabIndex = 16;
            this.label355.Text = "(0-254)";
            // 
            // txtStream2ColorReproductionShadow
            // 
            this.txtStream2ColorReproductionShadow.Location = new System.Drawing.Point(502, 59);
            this.txtStream2ColorReproductionShadow.MaxLength = 3;
            this.txtStream2ColorReproductionShadow.Name = "txtStream2ColorReproductionShadow";
            this.txtStream2ColorReproductionShadow.Size = new System.Drawing.Size(36, 19);
            this.txtStream2ColorReproductionShadow.TabIndex = 15;
            this.txtStream2ColorReproductionShadow.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2ColorReproductionShadow.TextChanged += new System.EventHandler(this.txtStream2ColorReproductionShadow_TextChanged);
            // 
            // label356
            // 
            this.label356.Location = new System.Drawing.Point(298, 63);
            this.label356.Name = "label356";
            this.label356.Size = new System.Drawing.Size(157, 16);
            this.label356.TabIndex = 14;
            this.label356.Text = "ColorReproductionShadow";
            // 
            // label357
            // 
            this.label357.Location = new System.Drawing.Point(223, 63);
            this.label357.Name = "label357";
            this.label357.Size = new System.Drawing.Size(49, 16);
            this.label357.TabIndex = 13;
            this.label357.Text = "(1-255)";
            // 
            // txtStream2ColorReproductionHighlight
            // 
            this.txtStream2ColorReproductionHighlight.Location = new System.Drawing.Point(181, 59);
            this.txtStream2ColorReproductionHighlight.MaxLength = 3;
            this.txtStream2ColorReproductionHighlight.Name = "txtStream2ColorReproductionHighlight";
            this.txtStream2ColorReproductionHighlight.Size = new System.Drawing.Size(36, 19);
            this.txtStream2ColorReproductionHighlight.TabIndex = 12;
            this.txtStream2ColorReproductionHighlight.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2ColorReproductionHighlight.TextChanged += new System.EventHandler(this.txtStream2ColorReproductionHighlight_TextChanged);
            // 
            // label358
            // 
            this.label358.Location = new System.Drawing.Point(8, 63);
            this.label358.Name = "label358";
            this.label358.Size = new System.Drawing.Size(156, 16);
            this.label358.TabIndex = 11;
            this.label358.Text = "ColorReproductionHighlight";
            // 
            // label359
            // 
            this.label359.Location = new System.Drawing.Point(544, 40);
            this.label359.Name = "label359";
            this.label359.Size = new System.Drawing.Size(62, 16);
            this.label359.TabIndex = 10;
            this.label359.Text = "(0.1-10.0)";
            // 
            // txtStream2ColorReproductionCustomGamma
            // 
            this.txtStream2ColorReproductionCustomGamma.Location = new System.Drawing.Point(502, 36);
            this.txtStream2ColorReproductionCustomGamma.MaxLength = 4;
            this.txtStream2ColorReproductionCustomGamma.Name = "txtStream2ColorReproductionCustomGamma";
            this.txtStream2ColorReproductionCustomGamma.Size = new System.Drawing.Size(36, 19);
            this.txtStream2ColorReproductionCustomGamma.TabIndex = 9;
            this.txtStream2ColorReproductionCustomGamma.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2ColorReproductionCustomGamma.TextChanged += new System.EventHandler(this.txtStream2ColorReproductionCustomGamma_TextChanged);
            // 
            // label360
            // 
            this.label360.Location = new System.Drawing.Point(298, 40);
            this.label360.Name = "label360";
            this.label360.Size = new System.Drawing.Size(196, 16);
            this.label360.TabIndex = 8;
            this.label360.Text = "ColorReproductionCustomGamma";
            // 
            // label361
            // 
            this.label361.Location = new System.Drawing.Point(223, 40);
            this.label361.Name = "label361";
            this.label361.Size = new System.Drawing.Size(49, 16);
            this.label361.TabIndex = 7;
            this.label361.Text = "(1-255)";
            // 
            // txtStream2ColorReproductionContrast
            // 
            this.txtStream2ColorReproductionContrast.Location = new System.Drawing.Point(181, 36);
            this.txtStream2ColorReproductionContrast.MaxLength = 3;
            this.txtStream2ColorReproductionContrast.Name = "txtStream2ColorReproductionContrast";
            this.txtStream2ColorReproductionContrast.Size = new System.Drawing.Size(36, 19);
            this.txtStream2ColorReproductionContrast.TabIndex = 6;
            this.txtStream2ColorReproductionContrast.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2ColorReproductionContrast.TextChanged += new System.EventHandler(this.txtStream2ColorReproductionContrast_TextChanged);
            // 
            // label362
            // 
            this.label362.Location = new System.Drawing.Point(8, 40);
            this.label362.Name = "label362";
            this.label362.Size = new System.Drawing.Size(162, 16);
            this.label362.TabIndex = 5;
            this.label362.Text = "ColorReproductionContrast";
            // 
            // label363
            // 
            this.label363.Location = new System.Drawing.Point(544, 17);
            this.label363.Name = "label363";
            this.label363.Size = new System.Drawing.Size(49, 16);
            this.label363.TabIndex = 4;
            this.label363.Text = "(1-255)";
            // 
            // txtStream2ColorReproductionBrightness
            // 
            this.txtStream2ColorReproductionBrightness.Location = new System.Drawing.Point(502, 13);
            this.txtStream2ColorReproductionBrightness.MaxLength = 3;
            this.txtStream2ColorReproductionBrightness.Name = "txtStream2ColorReproductionBrightness";
            this.txtStream2ColorReproductionBrightness.Size = new System.Drawing.Size(36, 19);
            this.txtStream2ColorReproductionBrightness.TabIndex = 3;
            this.txtStream2ColorReproductionBrightness.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2ColorReproductionBrightness.TextChanged += new System.EventHandler(this.txtStream2ColorReproductionBrightness_TextChanged);
            // 
            // label364
            // 
            this.label364.Location = new System.Drawing.Point(298, 17);
            this.label364.Name = "label364";
            this.label364.Size = new System.Drawing.Size(171, 16);
            this.label364.TabIndex = 2;
            this.label364.Text = "ColorReproductionBrightness";
            // 
            // cboStream2ColorReproduction
            // 
            this.cboStream2ColorReproduction.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream2ColorReproduction.Items.AddRange(new object[] {
            "Contrast",
            "Hue"});
            this.cboStream2ColorReproduction.Location = new System.Drawing.Point(134, 13);
            this.cboStream2ColorReproduction.MaxDropDownItems = 2;
            this.cboStream2ColorReproduction.Name = "cboStream2ColorReproduction";
            this.cboStream2ColorReproduction.Size = new System.Drawing.Size(121, 20);
            this.cboStream2ColorReproduction.TabIndex = 1;
            // 
            // label365
            // 
            this.label365.Location = new System.Drawing.Point(8, 17);
            this.label365.Name = "label365";
            this.label365.Size = new System.Drawing.Size(113, 16);
            this.label365.TabIndex = 0;
            this.label365.Text = "ColorReproduction";
            // 
            // groupBox26
            // 
            this.groupBox26.Controls.Add(this.label340);
            this.groupBox26.Controls.Add(this.cboStream2BackgroundSmoothing);
            this.groupBox26.Controls.Add(this.label341);
            this.groupBox26.Controls.Add(this.label342);
            this.groupBox26.Controls.Add(this.label343);
            this.groupBox26.Controls.Add(this.txtStream2Shadow);
            this.groupBox26.Controls.Add(this.txtStream2BackgroundSmoothness);
            this.groupBox26.Controls.Add(this.label344);
            this.groupBox26.Controls.Add(this.label345);
            this.groupBox26.Controls.Add(this.txtStream2Highlight);
            this.groupBox26.Controls.Add(this.label346);
            this.groupBox26.Location = new System.Drawing.Point(271, 369);
            this.groupBox26.Name = "groupBox26";
            this.groupBox26.Size = new System.Drawing.Size(448, 89);
            this.groupBox26.TabIndex = 5;
            this.groupBox26.TabStop = false;
            this.groupBox26.Text = "for Grayscale or RGB";
            // 
            // label340
            // 
            this.label340.Location = new System.Drawing.Point(8, 40);
            this.label340.Name = "label340";
            this.label340.Size = new System.Drawing.Size(136, 16);
            this.label340.TabIndex = 6;
            this.label340.Text = "BackgroundSmoothing";
            // 
            // cboStream2BackgroundSmoothing
            // 
            this.cboStream2BackgroundSmoothing.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream2BackgroundSmoothing.Items.AddRange(new object[] {
            "None",
            "Automatic",
            "White"});
            this.cboStream2BackgroundSmoothing.Location = new System.Drawing.Point(168, 37);
            this.cboStream2BackgroundSmoothing.MaxDropDownItems = 3;
            this.cboStream2BackgroundSmoothing.Name = "cboStream2BackgroundSmoothing";
            this.cboStream2BackgroundSmoothing.Size = new System.Drawing.Size(86, 20);
            this.cboStream2BackgroundSmoothing.TabIndex = 7;
            // 
            // label341
            // 
            this.label341.Location = new System.Drawing.Point(210, 64);
            this.label341.Name = "label341";
            this.label341.Size = new System.Drawing.Size(43, 16);
            this.label341.TabIndex = 10;
            this.label341.Text = "(0-10)";
            // 
            // label342
            // 
            this.label342.Location = new System.Drawing.Point(8, 17);
            this.label342.Name = "label342";
            this.label342.Size = new System.Drawing.Size(70, 16);
            this.label342.TabIndex = 0;
            this.label342.Text = "Highlight";
            // 
            // label343
            // 
            this.label343.Location = new System.Drawing.Point(317, 17);
            this.label343.Name = "label343";
            this.label343.Size = new System.Drawing.Size(49, 16);
            this.label343.TabIndex = 5;
            this.label343.Text = "(0-254)";
            // 
            // txtStream2Shadow
            // 
            this.txtStream2Shadow.Location = new System.Drawing.Point(275, 13);
            this.txtStream2Shadow.MaxLength = 3;
            this.txtStream2Shadow.Name = "txtStream2Shadow";
            this.txtStream2Shadow.Size = new System.Drawing.Size(36, 19);
            this.txtStream2Shadow.TabIndex = 4;
            this.txtStream2Shadow.Text = "10";
            this.txtStream2Shadow.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2Shadow.TextChanged += new System.EventHandler(this.txtStream2Shadow_TextChanged);
            // 
            // txtStream2BackgroundSmoothness
            // 
            this.txtStream2BackgroundSmoothness.Location = new System.Drawing.Point(168, 60);
            this.txtStream2BackgroundSmoothness.MaxLength = 2;
            this.txtStream2BackgroundSmoothness.Name = "txtStream2BackgroundSmoothness";
            this.txtStream2BackgroundSmoothness.Size = new System.Drawing.Size(36, 19);
            this.txtStream2BackgroundSmoothness.TabIndex = 9;
            this.txtStream2BackgroundSmoothness.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2BackgroundSmoothness.TextChanged += new System.EventHandler(this.txtStream2BackgroundSmoothness_TextChanged);
            // 
            // label344
            // 
            this.label344.Location = new System.Drawing.Point(203, 17);
            this.label344.Name = "label344";
            this.label344.Size = new System.Drawing.Size(69, 16);
            this.label344.TabIndex = 3;
            this.label344.Text = "Shadow";
            // 
            // label345
            // 
            this.label345.Location = new System.Drawing.Point(8, 63);
            this.label345.Name = "label345";
            this.label345.Size = new System.Drawing.Size(154, 16);
            this.label345.TabIndex = 8;
            this.label345.Text = "BackgroundSmoothness";
            // 
            // txtStream2Highlight
            // 
            this.txtStream2Highlight.Location = new System.Drawing.Point(84, 13);
            this.txtStream2Highlight.MaxLength = 3;
            this.txtStream2Highlight.Name = "txtStream2Highlight";
            this.txtStream2Highlight.Size = new System.Drawing.Size(36, 19);
            this.txtStream2Highlight.TabIndex = 1;
            this.txtStream2Highlight.Text = "230";
            this.txtStream2Highlight.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2Highlight.TextChanged += new System.EventHandler(this.txtStream2Highlight_TextChanged);
            // 
            // label346
            // 
            this.label346.Location = new System.Drawing.Point(126, 18);
            this.label346.Name = "label346";
            this.label346.Size = new System.Drawing.Size(49, 16);
            this.label346.TabIndex = 2;
            this.label346.Text = "(1-255)";
            // 
            // groupBox25
            // 
            this.groupBox25.Controls.Add(this.label337);
            this.groupBox25.Controls.Add(this.txtStream2FilterSaturationSensitivity);
            this.groupBox25.Controls.Add(this.label338);
            this.groupBox25.Controls.Add(this.cboStream2Filter);
            this.groupBox25.Controls.Add(this.label339);
            this.groupBox25.Location = new System.Drawing.Point(8, 369);
            this.groupBox25.Name = "groupBox25";
            this.groupBox25.Size = new System.Drawing.Size(255, 63);
            this.groupBox25.TabIndex = 4;
            this.groupBox25.TabStop = false;
            this.groupBox25.Text = "for Black&&White or Grayscale";
            // 
            // label337
            // 
            this.label337.Location = new System.Drawing.Point(206, 41);
            this.label337.Name = "label337";
            this.label337.Size = new System.Drawing.Size(45, 16);
            this.label337.TabIndex = 4;
            this.label337.Text = "(0-100)";
            // 
            // txtStream2FilterSaturationSensitivity
            // 
            this.txtStream2FilterSaturationSensitivity.Location = new System.Drawing.Point(164, 37);
            this.txtStream2FilterSaturationSensitivity.MaxLength = 3;
            this.txtStream2FilterSaturationSensitivity.Name = "txtStream2FilterSaturationSensitivity";
            this.txtStream2FilterSaturationSensitivity.Size = new System.Drawing.Size(36, 19);
            this.txtStream2FilterSaturationSensitivity.TabIndex = 3;
            this.txtStream2FilterSaturationSensitivity.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2FilterSaturationSensitivity.TextChanged += new System.EventHandler(this.txtStream2FilterSaturationSensitivity_TextChanged);
            // 
            // label338
            // 
            this.label338.Location = new System.Drawing.Point(8, 40);
            this.label338.Name = "label338";
            this.label338.Size = new System.Drawing.Size(157, 16);
            this.label338.TabIndex = 2;
            this.label338.Text = "FilterSaturationSensitivity";
            // 
            // cboStream2Filter
            // 
            this.cboStream2Filter.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream2Filter.Items.AddRange(new object[] {
            "Green",
            "Red",
            "Blue",
            "None",
            "White",
            "Saturation",
            "Specified by device",
            "Custom1",
            "Custom2",
            "Custom3",
            "Custom4"});
            this.cboStream2Filter.Location = new System.Drawing.Point(71, 14);
            this.cboStream2Filter.MaxDropDownItems = 11;
            this.cboStream2Filter.Name = "cboStream2Filter";
            this.cboStream2Filter.Size = new System.Drawing.Size(150, 20);
            this.cboStream2Filter.TabIndex = 1;
            // 
            // label339
            // 
            this.label339.Location = new System.Drawing.Point(8, 17);
            this.label339.Name = "label339";
            this.label339.Size = new System.Drawing.Size(56, 16);
            this.label339.TabIndex = 0;
            this.label339.Text = "Filter";
            // 
            // groupBox24
            // 
            this.groupBox24.Controls.Add(this.cboStream2SEE);
            this.groupBox24.Controls.Add(this.label313);
            this.groupBox24.Controls.Add(this.txtStream2HalftoneFile);
            this.groupBox24.Controls.Add(this.cboStream2Halftone);
            this.groupBox24.Controls.Add(this.label314);
            this.groupBox24.Controls.Add(this.label315);
            this.groupBox24.Controls.Add(this.txtStream2SDTCSensitivity);
            this.groupBox24.Controls.Add(this.label316);
            this.groupBox24.Controls.Add(this.label317);
            this.groupBox24.Controls.Add(this.txtStream2ADTCThreshold);
            this.groupBox24.Controls.Add(this.label318);
            this.groupBox24.Controls.Add(this.chkStream2SimpleSlicePatternRemoval);
            this.groupBox24.Controls.Add(this.label319);
            this.groupBox24.Controls.Add(this.chkStream2StampRemoval);
            this.groupBox24.Controls.Add(this.label320);
            this.groupBox24.Controls.Add(this.chkStream2HalftoneRemoval);
            this.groupBox24.Controls.Add(this.label321);
            this.groupBox24.Controls.Add(this.chkStream2ReversedTypeExtraction);
            this.groupBox24.Controls.Add(this.label322);
            this.groupBox24.Controls.Add(this.chkStream2CharacterExtraction);
            this.groupBox24.Controls.Add(this.label323);
            this.groupBox24.Controls.Add(this.cboStream2PatternRemoval);
            this.groupBox24.Controls.Add(this.label324);
            this.groupBox24.Controls.Add(this.label325);
            this.groupBox24.Controls.Add(this.txtStream2NoiseRejection);
            this.groupBox24.Controls.Add(this.label326);
            this.groupBox24.Controls.Add(this.label327);
            this.groupBox24.Controls.Add(this.txtStream2FadingCompensation);
            this.groupBox24.Controls.Add(this.label328);
            this.groupBox24.Controls.Add(this.label329);
            this.groupBox24.Controls.Add(this.txtStream2CharacterThickness);
            this.groupBox24.Controls.Add(this.label330);
            this.groupBox24.Controls.Add(this.label331);
            this.groupBox24.Controls.Add(this.txtStream2BackgroundThreshold);
            this.groupBox24.Controls.Add(this.label332);
            this.groupBox24.Controls.Add(this.label333);
            this.groupBox24.Controls.Add(this.txtStream2DTCSensitivity);
            this.groupBox24.Controls.Add(this.label334);
            this.groupBox24.Controls.Add(this.label335);
            this.groupBox24.Controls.Add(this.txtStream2Threshold);
            this.groupBox24.Controls.Add(this.label336);
            this.groupBox24.Location = new System.Drawing.Point(8, 211);
            this.groupBox24.Name = "groupBox24";
            this.groupBox24.Size = new System.Drawing.Size(711, 154);
            this.groupBox24.TabIndex = 3;
            this.groupBox24.TabStop = false;
            this.groupBox24.Text = "for Black&&White";
            // 
            // cboStream2SEE
            // 
            this.cboStream2SEE.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream2SEE.Items.AddRange(new object[] {
            "OFF",
            "ON"});
            this.cboStream2SEE.Location = new System.Drawing.Point(592, 128);
            this.cboStream2SEE.MaxDropDownItems = 2;
            this.cboStream2SEE.Name = "cboStream2SEE";
            this.cboStream2SEE.Size = new System.Drawing.Size(57, 20);
            this.cboStream2SEE.TabIndex = 40;
            // 
            // label313
            // 
            this.label313.Location = new System.Drawing.Point(546, 132);
            this.label313.Name = "label313";
            this.label313.Size = new System.Drawing.Size(40, 16);
            this.label313.TabIndex = 39;
            this.label313.Text = "SEE";
            // 
            // txtStream2HalftoneFile
            // 
            this.txtStream2HalftoneFile.Location = new System.Drawing.Point(204, 128);
            this.txtStream2HalftoneFile.MaxLength = 254;
            this.txtStream2HalftoneFile.Name = "txtStream2HalftoneFile";
            this.txtStream2HalftoneFile.Size = new System.Drawing.Size(305, 19);
            this.txtStream2HalftoneFile.TabIndex = 38;
            // 
            // cboStream2Halftone
            // 
            this.cboStream2Halftone.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream2Halftone.Items.AddRange(new object[] {
            "None",
            "DitherPattern0",
            "DitherPattern1",
            "DitherPattern2",
            "DitherPattern3",
            "DitherPatternFile",
            "ErrorDiffusion"});
            this.cboStream2Halftone.Location = new System.Drawing.Point(74, 128);
            this.cboStream2Halftone.MaxDropDownItems = 7;
            this.cboStream2Halftone.Name = "cboStream2Halftone";
            this.cboStream2Halftone.Size = new System.Drawing.Size(125, 20);
            this.cboStream2Halftone.TabIndex = 37;
            // 
            // label314
            // 
            this.label314.Location = new System.Drawing.Point(8, 132);
            this.label314.Name = "label314";
            this.label314.Size = new System.Drawing.Size(60, 16);
            this.label314.TabIndex = 36;
            this.label314.Text = "Halftone";
            // 
            // label315
            // 
            this.label315.Location = new System.Drawing.Point(624, 109);
            this.label315.Name = "label315";
            this.label315.Size = new System.Drawing.Size(43, 16);
            this.label315.TabIndex = 35;
            this.label315.Text = "(1-3)";
            // 
            // txtStream2SDTCSensitivity
            // 
            this.txtStream2SDTCSensitivity.Location = new System.Drawing.Point(582, 105);
            this.txtStream2SDTCSensitivity.MaxLength = 1;
            this.txtStream2SDTCSensitivity.Name = "txtStream2SDTCSensitivity";
            this.txtStream2SDTCSensitivity.Size = new System.Drawing.Size(36, 19);
            this.txtStream2SDTCSensitivity.TabIndex = 34;
            this.txtStream2SDTCSensitivity.Text = "2";
            this.txtStream2SDTCSensitivity.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2SDTCSensitivity.TextChanged += new System.EventHandler(this.txtStream2SDTCSensitivity_TextChanged);
            // 
            // label316
            // 
            this.label316.Location = new System.Drawing.Point(466, 109);
            this.label316.Name = "label316";
            this.label316.Size = new System.Drawing.Size(105, 16);
            this.label316.TabIndex = 33;
            this.label316.Text = "SDTCSensitivity";
            // 
            // label317
            // 
            this.label317.Location = new System.Drawing.Point(384, 109);
            this.label317.Name = "label317";
            this.label317.Size = new System.Drawing.Size(45, 16);
            this.label317.TabIndex = 32;
            this.label317.Text = "(1-255)";
            // 
            // txtStream2ADTCThreshold
            // 
            this.txtStream2ADTCThreshold.Location = new System.Drawing.Point(342, 105);
            this.txtStream2ADTCThreshold.MaxLength = 3;
            this.txtStream2ADTCThreshold.Name = "txtStream2ADTCThreshold";
            this.txtStream2ADTCThreshold.Size = new System.Drawing.Size(36, 19);
            this.txtStream2ADTCThreshold.TabIndex = 31;
            this.txtStream2ADTCThreshold.Text = "83";
            this.txtStream2ADTCThreshold.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2ADTCThreshold.TextChanged += new System.EventHandler(this.txtStream2ADTCThreshold_TextChanged);
            // 
            // label318
            // 
            this.label318.Location = new System.Drawing.Point(225, 109);
            this.label318.Name = "label318";
            this.label318.Size = new System.Drawing.Size(105, 16);
            this.label318.TabIndex = 30;
            this.label318.Text = "ADTCThreshold";
            // 
            // chkStream2SimpleSlicePatternRemoval
            // 
            this.chkStream2SimpleSlicePatternRemoval.Location = new System.Drawing.Point(176, 109);
            this.chkStream2SimpleSlicePatternRemoval.Name = "chkStream2SimpleSlicePatternRemoval";
            this.chkStream2SimpleSlicePatternRemoval.Size = new System.Drawing.Size(15, 14);
            this.chkStream2SimpleSlicePatternRemoval.TabIndex = 29;
            this.chkStream2SimpleSlicePatternRemoval.UseVisualStyleBackColor = true;
            // 
            // label319
            // 
            this.label319.Location = new System.Drawing.Point(8, 109);
            this.label319.Name = "label319";
            this.label319.Size = new System.Drawing.Size(160, 16);
            this.label319.TabIndex = 28;
            this.label319.Text = "SimpleSlicePatternRemoval";
            // 
            // chkStream2StampRemoval
            // 
            this.chkStream2StampRemoval.Location = new System.Drawing.Point(512, 86);
            this.chkStream2StampRemoval.Name = "chkStream2StampRemoval";
            this.chkStream2StampRemoval.Size = new System.Drawing.Size(15, 14);
            this.chkStream2StampRemoval.TabIndex = 27;
            this.chkStream2StampRemoval.UseVisualStyleBackColor = true;
            // 
            // label320
            // 
            this.label320.Location = new System.Drawing.Point(407, 86);
            this.label320.Name = "label320";
            this.label320.Size = new System.Drawing.Size(95, 16);
            this.label320.TabIndex = 26;
            this.label320.Text = "StampRemoval";
            // 
            // chkStream2HalftoneRemoval
            // 
            this.chkStream2HalftoneRemoval.Location = new System.Drawing.Point(342, 86);
            this.chkStream2HalftoneRemoval.Name = "chkStream2HalftoneRemoval";
            this.chkStream2HalftoneRemoval.Size = new System.Drawing.Size(15, 14);
            this.chkStream2HalftoneRemoval.TabIndex = 25;
            this.chkStream2HalftoneRemoval.UseVisualStyleBackColor = true;
            // 
            // label321
            // 
            this.label321.Location = new System.Drawing.Point(225, 86);
            this.label321.Name = "label321";
            this.label321.Size = new System.Drawing.Size(105, 16);
            this.label321.TabIndex = 24;
            this.label321.Text = "HalftoneRemoval";
            // 
            // chkStream2ReversedTypeExtraction
            // 
            this.chkStream2ReversedTypeExtraction.Location = new System.Drawing.Point(159, 86);
            this.chkStream2ReversedTypeExtraction.Name = "chkStream2ReversedTypeExtraction";
            this.chkStream2ReversedTypeExtraction.Size = new System.Drawing.Size(15, 14);
            this.chkStream2ReversedTypeExtraction.TabIndex = 23;
            this.chkStream2ReversedTypeExtraction.UseVisualStyleBackColor = true;
            // 
            // label322
            // 
            this.label322.Location = new System.Drawing.Point(8, 86);
            this.label322.Name = "label322";
            this.label322.Size = new System.Drawing.Size(147, 16);
            this.label322.TabIndex = 22;
            this.label322.Text = "ReversedTypeExtraction";
            // 
            // chkStream2CharacterExtraction
            // 
            this.chkStream2CharacterExtraction.Location = new System.Drawing.Point(381, 63);
            this.chkStream2CharacterExtraction.Name = "chkStream2CharacterExtraction";
            this.chkStream2CharacterExtraction.Size = new System.Drawing.Size(15, 14);
            this.chkStream2CharacterExtraction.TabIndex = 21;
            this.chkStream2CharacterExtraction.UseVisualStyleBackColor = true;
            // 
            // label323
            // 
            this.label323.Location = new System.Drawing.Point(251, 63);
            this.label323.Name = "label323";
            this.label323.Size = new System.Drawing.Size(113, 16);
            this.label323.TabIndex = 20;
            this.label323.Text = "CharacterExtraction";
            // 
            // cboStream2PatternRemoval
            // 
            this.cboStream2PatternRemoval.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream2PatternRemoval.Items.AddRange(new object[] {
            "OFF",
            "Standard",
            "Advanced",
            "Strong"});
            this.cboStream2PatternRemoval.Location = new System.Drawing.Point(120, 59);
            this.cboStream2PatternRemoval.MaxDropDownItems = 4;
            this.cboStream2PatternRemoval.Name = "cboStream2PatternRemoval";
            this.cboStream2PatternRemoval.Size = new System.Drawing.Size(91, 20);
            this.cboStream2PatternRemoval.TabIndex = 19;
            // 
            // label324
            // 
            this.label324.Location = new System.Drawing.Point(8, 63);
            this.label324.Name = "label324";
            this.label324.Size = new System.Drawing.Size(100, 16);
            this.label324.TabIndex = 18;
            this.label324.Text = "PatternRemoval";
            // 
            // label325
            // 
            this.label325.Location = new System.Drawing.Point(632, 40);
            this.label325.Name = "label325";
            this.label325.Size = new System.Drawing.Size(43, 16);
            this.label325.TabIndex = 17;
            this.label325.Text = "(0-20)";
            // 
            // txtStream2NoiseRejection
            // 
            this.txtStream2NoiseRejection.Location = new System.Drawing.Point(590, 36);
            this.txtStream2NoiseRejection.MaxLength = 2;
            this.txtStream2NoiseRejection.Name = "txtStream2NoiseRejection";
            this.txtStream2NoiseRejection.Size = new System.Drawing.Size(36, 19);
            this.txtStream2NoiseRejection.TabIndex = 16;
            this.txtStream2NoiseRejection.Text = "0";
            this.txtStream2NoiseRejection.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2NoiseRejection.TextChanged += new System.EventHandler(this.txtStream2NoiseRejection_TextChanged);
            // 
            // label326
            // 
            this.label326.Location = new System.Drawing.Point(486, 40);
            this.label326.Name = "label326";
            this.label326.Size = new System.Drawing.Size(100, 16);
            this.label326.TabIndex = 15;
            this.label326.Text = "NoiseRejection";
            // 
            // label327
            // 
            this.label327.Location = new System.Drawing.Point(423, 40);
            this.label327.Name = "label327";
            this.label327.Size = new System.Drawing.Size(41, 16);
            this.label327.TabIndex = 14;
            this.label327.Text = "(0-5)";
            // 
            // txtStream2FadingCompensation
            // 
            this.txtStream2FadingCompensation.Location = new System.Drawing.Point(381, 36);
            this.txtStream2FadingCompensation.MaxLength = 1;
            this.txtStream2FadingCompensation.Name = "txtStream2FadingCompensation";
            this.txtStream2FadingCompensation.Size = new System.Drawing.Size(36, 19);
            this.txtStream2FadingCompensation.TabIndex = 13;
            this.txtStream2FadingCompensation.Text = "0";
            this.txtStream2FadingCompensation.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2FadingCompensation.TextChanged += new System.EventHandler(this.txtStream2FadingCompensation_TextChanged);
            // 
            // label328
            // 
            this.label328.Location = new System.Drawing.Point(251, 40);
            this.label328.Name = "label328";
            this.label328.Size = new System.Drawing.Size(122, 16);
            this.label328.TabIndex = 12;
            this.label328.Text = "FadingCompensation";
            // 
            // label329
            // 
            this.label329.Location = new System.Drawing.Point(184, 40);
            this.label329.Name = "label329";
            this.label329.Size = new System.Drawing.Size(45, 16);
            this.label329.TabIndex = 11;
            this.label329.Text = "(0-10)";
            // 
            // txtStream2CharacterThickness
            // 
            this.txtStream2CharacterThickness.Location = new System.Drawing.Point(142, 36);
            this.txtStream2CharacterThickness.MaxLength = 2;
            this.txtStream2CharacterThickness.Name = "txtStream2CharacterThickness";
            this.txtStream2CharacterThickness.Size = new System.Drawing.Size(36, 19);
            this.txtStream2CharacterThickness.TabIndex = 10;
            this.txtStream2CharacterThickness.Text = "5";
            this.txtStream2CharacterThickness.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2CharacterThickness.TextChanged += new System.EventHandler(this.txtStream2CharacterThickness_TextChanged);
            // 
            // label330
            // 
            this.label330.Location = new System.Drawing.Point(8, 40);
            this.label330.Name = "label330";
            this.label330.Size = new System.Drawing.Size(120, 16);
            this.label330.TabIndex = 9;
            this.label330.Text = "CharacterThickness";
            // 
            // label331
            // 
            this.label331.Location = new System.Drawing.Point(611, 17);
            this.label331.Name = "label331";
            this.label331.Size = new System.Drawing.Size(45, 16);
            this.label331.TabIndex = 8;
            this.label331.Text = "(0-100)";
            // 
            // txtStream2BackgroundThreshold
            // 
            this.txtStream2BackgroundThreshold.Location = new System.Drawing.Point(569, 13);
            this.txtStream2BackgroundThreshold.MaxLength = 3;
            this.txtStream2BackgroundThreshold.Name = "txtStream2BackgroundThreshold";
            this.txtStream2BackgroundThreshold.Size = new System.Drawing.Size(36, 19);
            this.txtStream2BackgroundThreshold.TabIndex = 7;
            this.txtStream2BackgroundThreshold.Text = "50";
            this.txtStream2BackgroundThreshold.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2BackgroundThreshold.TextChanged += new System.EventHandler(this.txtStream2BackgroundThreshold_TextChanged);
            // 
            // label332
            // 
            this.label332.Location = new System.Drawing.Point(432, 17);
            this.label332.Name = "label332";
            this.label332.Size = new System.Drawing.Size(125, 16);
            this.label332.TabIndex = 6;
            this.label332.Text = "BackgroundThreshold";
            // 
            // label333
            // 
            this.label333.Location = new System.Drawing.Point(368, 17);
            this.label333.Name = "label333";
            this.label333.Size = new System.Drawing.Size(45, 16);
            this.label333.TabIndex = 5;
            this.label333.Text = "(0-100)";
            // 
            // txtStream2DTCSensitivity
            // 
            this.txtStream2DTCSensitivity.Location = new System.Drawing.Point(326, 13);
            this.txtStream2DTCSensitivity.MaxLength = 3;
            this.txtStream2DTCSensitivity.Name = "txtStream2DTCSensitivity";
            this.txtStream2DTCSensitivity.Size = new System.Drawing.Size(36, 19);
            this.txtStream2DTCSensitivity.TabIndex = 4;
            this.txtStream2DTCSensitivity.Text = "50";
            this.txtStream2DTCSensitivity.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2DTCSensitivity.TextChanged += new System.EventHandler(this.txtStream2DTCSensitivity_TextChanged);
            // 
            // label334
            // 
            this.label334.Location = new System.Drawing.Point(225, 17);
            this.label334.Name = "label334";
            this.label334.Size = new System.Drawing.Size(97, 16);
            this.label334.TabIndex = 3;
            this.label334.Text = "DTCSensitivity";
            // 
            // label335
            // 
            this.label335.Location = new System.Drawing.Point(130, 17);
            this.label335.Name = "label335";
            this.label335.Size = new System.Drawing.Size(77, 16);
            this.label335.TabIndex = 2;
            this.label335.Text = "(-2,-1,0-255)";
            // 
            // txtStream2Threshold
            // 
            this.txtStream2Threshold.Location = new System.Drawing.Point(88, 13);
            this.txtStream2Threshold.MaxLength = 3;
            this.txtStream2Threshold.Name = "txtStream2Threshold";
            this.txtStream2Threshold.Size = new System.Drawing.Size(36, 19);
            this.txtStream2Threshold.TabIndex = 1;
            this.txtStream2Threshold.Text = "128";
            this.txtStream2Threshold.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2Threshold.TextChanged += new System.EventHandler(this.txtStream2Threshold_TextChanged);
            // 
            // label336
            // 
            this.label336.Location = new System.Drawing.Point(8, 17);
            this.label336.Name = "label336";
            this.label336.Size = new System.Drawing.Size(76, 16);
            this.label336.TabIndex = 0;
            this.label336.Text = "Threshold";
            // 
            // groupBox23
            // 
            this.groupBox23.Controls.Add(this.cboStream2Sharpness);
            this.groupBox23.Controls.Add(this.label301);
            this.groupBox23.Controls.Add(this.cboStream2Background);
            this.groupBox23.Controls.Add(this.label303);
            this.groupBox23.Controls.Add(this.label304);
            this.groupBox23.Controls.Add(this.txtStream2CustomGamma);
            this.groupBox23.Controls.Add(this.label305);
            this.groupBox23.Controls.Add(this.label306);
            this.groupBox23.Controls.Add(this.txtStream2Contrast);
            this.groupBox23.Controls.Add(this.label307);
            this.groupBox23.Controls.Add(this.label308);
            this.groupBox23.Controls.Add(this.txtStream2Brightness);
            this.groupBox23.Controls.Add(this.label309);
            this.groupBox23.Controls.Add(this.txtStream2GammaFile);
            this.groupBox23.Controls.Add(this.cboStream2Gamma);
            this.groupBox23.Controls.Add(this.label310);
            this.groupBox23.Controls.Add(this.chkStream2Reverse);
            this.groupBox23.Controls.Add(this.label311);
            this.groupBox23.Controls.Add(this.chkStream2AutoBright);
            this.groupBox23.Controls.Add(this.label312);
            this.groupBox23.Location = new System.Drawing.Point(8, 100);
            this.groupBox23.Name = "groupBox23";
            this.groupBox23.Size = new System.Drawing.Size(711, 107);
            this.groupBox23.TabIndex = 2;
            this.groupBox23.TabStop = false;
            this.groupBox23.Text = "for All PixelType";
            // 
            // cboStream2Sharpness
            // 
            this.cboStream2Sharpness.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream2Sharpness.Items.AddRange(new object[] {
            "None",
            "Emphasis Low",
            "Emphasis Mid",
            "Emphasis High",
            "Edge Extract",
            "Level 1",
            "Level 2",
            "Level 3",
            "Level 4"});
            this.cboStream2Sharpness.Location = new System.Drawing.Point(286, 82);
            this.cboStream2Sharpness.MaxDropDownItems = 9;
            this.cboStream2Sharpness.Name = "cboStream2Sharpness";
            this.cboStream2Sharpness.Size = new System.Drawing.Size(125, 20);
            this.cboStream2Sharpness.TabIndex = 21;
            // 
            // label301
            // 
            this.label301.Location = new System.Drawing.Point(214, 86);
            this.label301.Name = "label301";
            this.label301.Size = new System.Drawing.Size(77, 16);
            this.label301.TabIndex = 20;
            this.label301.Text = "Sharpness";
            // 
            // cboStream2Background
            // 
            this.cboStream2Background.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream2Background.Items.AddRange(new object[] {
            "OFF",
            "ON",
            "AUTO"});
            this.cboStream2Background.Location = new System.Drawing.Point(105, 82);
            this.cboStream2Background.MaxDropDownItems = 3;
            this.cboStream2Background.Name = "cboStream2Background";
            this.cboStream2Background.Size = new System.Drawing.Size(60, 20);
            this.cboStream2Background.TabIndex = 17;
            // 
            // label303
            // 
            this.label303.Location = new System.Drawing.Point(8, 86);
            this.label303.Name = "label303";
            this.label303.Size = new System.Drawing.Size(77, 16);
            this.label303.TabIndex = 16;
            this.label303.Text = "Background";
            // 
            // label304
            // 
            this.label304.Location = new System.Drawing.Point(591, 64);
            this.label304.Name = "label304";
            this.label304.Size = new System.Drawing.Size(62, 16);
            this.label304.TabIndex = 15;
            this.label304.Text = "(0.1-10.0)";
            // 
            // txtStream2CustomGamma
            // 
            this.txtStream2CustomGamma.Location = new System.Drawing.Point(550, 60);
            this.txtStream2CustomGamma.MaxLength = 4;
            this.txtStream2CustomGamma.Name = "txtStream2CustomGamma";
            this.txtStream2CustomGamma.Size = new System.Drawing.Size(36, 19);
            this.txtStream2CustomGamma.TabIndex = 14;
            this.txtStream2CustomGamma.Text = "2.2";
            this.txtStream2CustomGamma.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2CustomGamma.TextChanged += new System.EventHandler(this.txtStream2CustomGamma_TextChanged);
            // 
            // label305
            // 
            this.label305.Location = new System.Drawing.Point(432, 63);
            this.label305.Name = "label305";
            this.label305.Size = new System.Drawing.Size(90, 16);
            this.label305.TabIndex = 13;
            this.label305.Text = "CustomGamma";
            // 
            // label306
            // 
            this.label306.Location = new System.Drawing.Point(342, 64);
            this.label306.Name = "label306";
            this.label306.Size = new System.Drawing.Size(50, 16);
            this.label306.TabIndex = 12;
            this.label306.Text = "(1-255)";
            // 
            // txtStream2Contrast
            // 
            this.txtStream2Contrast.Location = new System.Drawing.Point(301, 60);
            this.txtStream2Contrast.MaxLength = 3;
            this.txtStream2Contrast.Name = "txtStream2Contrast";
            this.txtStream2Contrast.Size = new System.Drawing.Size(36, 19);
            this.txtStream2Contrast.TabIndex = 11;
            this.txtStream2Contrast.Text = "128";
            this.txtStream2Contrast.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2Contrast.TextChanged += new System.EventHandler(this.txtStream2Contrast_TextChanged);
            // 
            // label307
            // 
            this.label307.Location = new System.Drawing.Point(214, 63);
            this.label307.Name = "label307";
            this.label307.Size = new System.Drawing.Size(76, 16);
            this.label307.TabIndex = 10;
            this.label307.Text = "Contrast";
            // 
            // label308
            // 
            this.label308.Location = new System.Drawing.Point(146, 64);
            this.label308.Name = "label308";
            this.label308.Size = new System.Drawing.Size(50, 16);
            this.label308.TabIndex = 9;
            this.label308.Text = "(1-255)";
            // 
            // txtStream2Brightness
            // 
            this.txtStream2Brightness.Location = new System.Drawing.Point(105, 60);
            this.txtStream2Brightness.MaxLength = 3;
            this.txtStream2Brightness.Name = "txtStream2Brightness";
            this.txtStream2Brightness.Size = new System.Drawing.Size(36, 19);
            this.txtStream2Brightness.TabIndex = 8;
            this.txtStream2Brightness.Text = "128";
            this.txtStream2Brightness.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2Brightness.TextChanged += new System.EventHandler(this.txtStream2Brightness_TextChanged);
            // 
            // label309
            // 
            this.label309.Location = new System.Drawing.Point(8, 63);
            this.label309.Name = "label309";
            this.label309.Size = new System.Drawing.Size(91, 16);
            this.label309.TabIndex = 7;
            this.label309.Text = "Brightness";
            // 
            // txtStream2GammaFile
            // 
            this.txtStream2GammaFile.Location = new System.Drawing.Point(235, 36);
            this.txtStream2GammaFile.MaxLength = 254;
            this.txtStream2GammaFile.Name = "txtStream2GammaFile";
            this.txtStream2GammaFile.Size = new System.Drawing.Size(309, 19);
            this.txtStream2GammaFile.TabIndex = 6;
            // 
            // cboStream2Gamma
            // 
            this.cboStream2Gamma.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream2Gamma.Items.AddRange(new object[] {
            "None",
            "Soft",
            "Sharp",
            "GammaPatternFile",
            "Custom",
            "Bright",
            "Standard"});
            this.cboStream2Gamma.Location = new System.Drawing.Point(105, 36);
            this.cboStream2Gamma.Name = "cboStream2Gamma";
            this.cboStream2Gamma.Size = new System.Drawing.Size(125, 20);
            this.cboStream2Gamma.TabIndex = 5;
            // 
            // label310
            // 
            this.label310.Location = new System.Drawing.Point(8, 40);
            this.label310.Name = "label310";
            this.label310.Size = new System.Drawing.Size(81, 16);
            this.label310.TabIndex = 4;
            this.label310.Text = "Gamma";
            // 
            // chkStream2Reverse
            // 
            this.chkStream2Reverse.Location = new System.Drawing.Point(301, 17);
            this.chkStream2Reverse.Name = "chkStream2Reverse";
            this.chkStream2Reverse.Size = new System.Drawing.Size(15, 14);
            this.chkStream2Reverse.TabIndex = 3;
            this.chkStream2Reverse.UseVisualStyleBackColor = true;
            // 
            // label311
            // 
            this.label311.Location = new System.Drawing.Point(214, 17);
            this.label311.Name = "label311";
            this.label311.Size = new System.Drawing.Size(76, 16);
            this.label311.TabIndex = 2;
            this.label311.Text = "Reverse";
            // 
            // chkStream2AutoBright
            // 
            this.chkStream2AutoBright.Location = new System.Drawing.Point(105, 17);
            this.chkStream2AutoBright.Name = "chkStream2AutoBright";
            this.chkStream2AutoBright.Size = new System.Drawing.Size(15, 14);
            this.chkStream2AutoBright.TabIndex = 1;
            this.chkStream2AutoBright.UseVisualStyleBackColor = true;
            // 
            // label312
            // 
            this.label312.Location = new System.Drawing.Point(8, 17);
            this.label312.Name = "label312";
            this.label312.Size = new System.Drawing.Size(85, 16);
            this.label312.TabIndex = 0;
            this.label312.Text = "AutoBright";
            // 
            // groupBox22
            // 
            this.groupBox22.Controls.Add(this.txtFileName2);
            this.groupBox22.Controls.Add(this.label442);
            this.groupBox22.Controls.Add(this.label441);
            this.groupBox22.Controls.Add(this.txtFileCounter2);
            this.groupBox22.Controls.Add(this.label440);
            this.groupBox22.Controls.Add(this.cboStream2PixelType);
            this.groupBox22.Controls.Add(this.label295);
            this.groupBox22.Controls.Add(this.label296);
            this.groupBox22.Controls.Add(this.txtStream2CustomResolution);
            this.groupBox22.Controls.Add(this.label297);
            this.groupBox22.Controls.Add(this.cboStream2CompressionType);
            this.groupBox22.Controls.Add(this.label298);
            this.groupBox22.Controls.Add(this.cboStream2Resolution);
            this.groupBox22.Controls.Add(this.label299);
            this.groupBox22.Controls.Add(this.cboStream2FileType);
            this.groupBox22.Controls.Add(this.label300);
            this.groupBox22.Location = new System.Drawing.Point(8, 8);
            this.groupBox22.Name = "groupBox22";
            this.groupBox22.Size = new System.Drawing.Size(711, 88);
            this.groupBox22.TabIndex = 1;
            this.groupBox22.TabStop = false;
            // 
            // txtFileName2
            // 
            this.txtFileName2.Location = new System.Drawing.Point(89, 60);
            this.txtFileName2.MaxLength = 254;
            this.txtFileName2.Name = "txtFileName2";
            this.txtFileName2.Size = new System.Drawing.Size(430, 19);
            this.txtFileName2.TabIndex = 15;
            // 
            // label442
            // 
            this.label442.Location = new System.Drawing.Point(8, 63);
            this.label442.Name = "label442";
            this.label442.Size = new System.Drawing.Size(75, 16);
            this.label442.TabIndex = 14;
            this.label442.Text = "FileName";
            // 
            // label441
            // 
            this.label441.Location = new System.Drawing.Point(498, 40);
            this.label441.Name = "label441";
            this.label441.Size = new System.Drawing.Size(82, 16);
            this.label441.TabIndex = 11;
            this.label441.Text = "FileCounter";
            // 
            // txtFileCounter2
            // 
            this.txtFileCounter2.Location = new System.Drawing.Point(588, 37);
            this.txtFileCounter2.MaxLength = 5;
            this.txtFileCounter2.Name = "txtFileCounter2";
            this.txtFileCounter2.Size = new System.Drawing.Size(45, 19);
            this.txtFileCounter2.TabIndex = 12;
            this.txtFileCounter2.Text = "-1";
            this.txtFileCounter2.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtFileCounter2.TextChanged += new System.EventHandler(this.txtFileCounter2_TextChanged);
            // 
            // label440
            // 
            this.label440.Location = new System.Drawing.Point(638, 41);
            this.label440.Name = "label440";
            this.label440.Size = new System.Drawing.Size(70, 16);
            this.label440.TabIndex = 13;
            this.label440.Text = "(-1,0-65535)";
            // 
            // cboStream2PixelType
            // 
            this.cboStream2PixelType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream2PixelType.FormattingEnabled = true;
            this.cboStream2PixelType.Items.AddRange(new object[] {
            "Black&White",
            "Grayscale",
            "RGB"});
            this.cboStream2PixelType.Location = new System.Drawing.Point(89, 14);
            this.cboStream2PixelType.Name = "cboStream2PixelType";
            this.cboStream2PixelType.Size = new System.Drawing.Size(106, 20);
            this.cboStream2PixelType.TabIndex = 1;
            // 
            // label295
            // 
            this.label295.Location = new System.Drawing.Point(8, 17);
            this.label295.Name = "label295";
            this.label295.Size = new System.Drawing.Size(72, 16);
            this.label295.TabIndex = 0;
            this.label295.Text = "PixelType";
            // 
            // label296
            // 
            this.label296.Location = new System.Drawing.Point(410, 41);
            this.label296.Name = "label296";
            this.label296.Size = new System.Drawing.Size(76, 16);
            this.label296.TabIndex = 10;
            this.label296.Text = "(50-600dpi)";
            // 
            // txtStream2CustomResolution
            // 
            this.txtStream2CustomResolution.Location = new System.Drawing.Point(360, 37);
            this.txtStream2CustomResolution.MaxLength = 4;
            this.txtStream2CustomResolution.Name = "txtStream2CustomResolution";
            this.txtStream2CustomResolution.Size = new System.Drawing.Size(45, 19);
            this.txtStream2CustomResolution.TabIndex = 9;
            this.txtStream2CustomResolution.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream2CustomResolution.TextChanged += new System.EventHandler(this.txtStream2CustomResolution_TextChanged);
            // 
            // label297
            // 
            this.label297.Location = new System.Drawing.Point(240, 40);
            this.label297.Name = "label297";
            this.label297.Size = new System.Drawing.Size(115, 16);
            this.label297.TabIndex = 8;
            this.label297.Text = "CustomResolution";
            // 
            // cboStream2CompressionType
            // 
            this.cboStream2CompressionType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream2CompressionType.Items.AddRange(new object[] {
            "No Compress",
            "CCITT G3(1D)",
            "CCITT G3(2D)(KFactor=2)",
            "CCITT G3(2D)(KFactor=4)",
            "CCITT G4",
            "JPEG",
            "Old JPEG"});
            this.cboStream2CompressionType.Location = new System.Drawing.Point(544, 14);
            this.cboStream2CompressionType.MaxDropDownItems = 7;
            this.cboStream2CompressionType.Name = "cboStream2CompressionType";
            this.cboStream2CompressionType.Size = new System.Drawing.Size(161, 20);
            this.cboStream2CompressionType.TabIndex = 5;
            // 
            // label298
            // 
            this.label298.Location = new System.Drawing.Point(432, 17);
            this.label298.Name = "label298";
            this.label298.Size = new System.Drawing.Size(103, 16);
            this.label298.TabIndex = 4;
            this.label298.Text = "CompressionType";
            // 
            // cboStream2Resolution
            // 
            this.cboStream2Resolution.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream2Resolution.Items.AddRange(new object[] {
            "200dpi",
            "240dpi",
            "300dpi",
            "400dpi",
            "500dpi",
            "600dpi",
            "700dpi",
            "800dpi",
            "1200dpi",
            "Custom"});
            this.cboStream2Resolution.Location = new System.Drawing.Point(89, 37);
            this.cboStream2Resolution.MaxDropDownItems = 10;
            this.cboStream2Resolution.Name = "cboStream2Resolution";
            this.cboStream2Resolution.Size = new System.Drawing.Size(121, 20);
            this.cboStream2Resolution.TabIndex = 7;
            this.cboStream2Resolution.SelectedIndexChanged += new System.EventHandler(this.cboStream2Resolution_SelectedIndexChanged);
            // 
            // label299
            // 
            this.label299.Location = new System.Drawing.Point(8, 40);
            this.label299.Name = "label299";
            this.label299.Size = new System.Drawing.Size(76, 16);
            this.label299.TabIndex = 6;
            this.label299.Text = "Resolution";
            // 
            // cboStream2FileType
            // 
            this.cboStream2FileType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream2FileType.Items.AddRange(new object[] {
            "BMP",
            "TIFF",
            "MultipageTIFF",
            "JPEG",
            "PDF",
            "MultipagePDF"});
            this.cboStream2FileType.Location = new System.Drawing.Point(301, 14);
            this.cboStream2FileType.MaxDropDownItems = 6;
            this.cboStream2FileType.Name = "cboStream2FileType";
            this.cboStream2FileType.Size = new System.Drawing.Size(105, 20);
            this.cboStream2FileType.TabIndex = 3;
            // 
            // label300
            // 
            this.label300.Location = new System.Drawing.Point(230, 17);
            this.label300.Name = "label300";
            this.label300.Size = new System.Drawing.Size(60, 16);
            this.label300.TabIndex = 2;
            this.label300.Text = "FileType";
            // 
            // Stream3
            // 
            this.Stream3.BackColor = System.Drawing.SystemColors.Control;
            this.Stream3.Controls.Add(this.groupBox33);
            this.Stream3.Controls.Add(this.groupBox32);
            this.Stream3.Controls.Add(this.groupBox31);
            this.Stream3.Controls.Add(this.groupBox30);
            this.Stream3.Controls.Add(this.groupBox29);
            this.Stream3.Controls.Add(this.groupBox28);
            this.Stream3.Location = new System.Drawing.Point(4, 22);
            this.Stream3.Name = "Stream3";
            this.Stream3.Size = new System.Drawing.Size(728, 595);
            this.Stream3.TabIndex = 10;
            this.Stream3.Text = "3rdStream";
            // 
            // groupBox33
            // 
            this.groupBox33.Controls.Add(this.chkStream3sRGB);
            this.groupBox33.Controls.Add(this.label418);
            this.groupBox33.Controls.Add(this.label419);
            this.groupBox33.Controls.Add(this.txtStream3AdjustRGBB);
            this.groupBox33.Controls.Add(this.label420);
            this.groupBox33.Controls.Add(this.label421);
            this.groupBox33.Controls.Add(this.txtStream3AdjustRGBG);
            this.groupBox33.Controls.Add(this.label422);
            this.groupBox33.Controls.Add(this.label423);
            this.groupBox33.Controls.Add(this.txtStream3AdjustRGBR);
            this.groupBox33.Controls.Add(this.label424);
            this.groupBox33.Controls.Add(this.chkStream3AdjustRGB);
            this.groupBox33.Controls.Add(this.label425);
            this.groupBox33.Controls.Add(this.label426);
            this.groupBox33.Controls.Add(this.txtStream3ColorReproductionShadow);
            this.groupBox33.Controls.Add(this.label427);
            this.groupBox33.Controls.Add(this.label428);
            this.groupBox33.Controls.Add(this.txtStream3ColorReproductionHighlight);
            this.groupBox33.Controls.Add(this.label429);
            this.groupBox33.Controls.Add(this.label430);
            this.groupBox33.Controls.Add(this.txtStream3ColorReproductionCustomGamma);
            this.groupBox33.Controls.Add(this.label431);
            this.groupBox33.Controls.Add(this.label432);
            this.groupBox33.Controls.Add(this.txtStream3ColorReproductionContrast);
            this.groupBox33.Controls.Add(this.label433);
            this.groupBox33.Controls.Add(this.label434);
            this.groupBox33.Controls.Add(this.txtStream3ColorReproductionBrightness);
            this.groupBox33.Controls.Add(this.label435);
            this.groupBox33.Controls.Add(this.cboStream3ColorReproduction);
            this.groupBox33.Controls.Add(this.label436);
            this.groupBox33.Location = new System.Drawing.Point(8, 461);
            this.groupBox33.Name = "groupBox33";
            this.groupBox33.Size = new System.Drawing.Size(711, 128);
            this.groupBox33.TabIndex = 7;
            this.groupBox33.TabStop = false;
            this.groupBox33.Text = "for RGB";
            // 
            // chkStream3sRGB
            // 
            this.chkStream3sRGB.Location = new System.Drawing.Point(341, 86);
            this.chkStream3sRGB.Name = "chkStream3sRGB";
            this.chkStream3sRGB.Size = new System.Drawing.Size(15, 14);
            this.chkStream3sRGB.TabIndex = 20;
            this.chkStream3sRGB.UseVisualStyleBackColor = true;
            // 
            // label418
            // 
            this.label418.Location = new System.Drawing.Point(238, 86);
            this.label418.Name = "label418";
            this.label418.Size = new System.Drawing.Size(51, 16);
            this.label418.TabIndex = 19;
            this.label418.Text = "sRGB";
            // 
            // label419
            // 
            this.label419.Location = new System.Drawing.Point(614, 109);
            this.label419.Name = "label419";
            this.label419.Size = new System.Drawing.Size(49, 16);
            this.label419.TabIndex = 29;
            this.label419.Text = "(1-255)";
            // 
            // txtStream3AdjustRGBB
            // 
            this.txtStream3AdjustRGBB.Location = new System.Drawing.Point(572, 105);
            this.txtStream3AdjustRGBB.MaxLength = 3;
            this.txtStream3AdjustRGBB.Name = "txtStream3AdjustRGBB";
            this.txtStream3AdjustRGBB.Size = new System.Drawing.Size(36, 19);
            this.txtStream3AdjustRGBB.TabIndex = 28;
            this.txtStream3AdjustRGBB.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3AdjustRGBB.TextChanged += new System.EventHandler(this.txtStream3AdjustRGBB_TextChanged);
            // 
            // label420
            // 
            this.label420.Location = new System.Drawing.Point(469, 109);
            this.label420.Name = "label420";
            this.label420.Size = new System.Drawing.Size(85, 16);
            this.label420.TabIndex = 27;
            this.label420.Text = "AdjustRGBB";
            // 
            // label421
            // 
            this.label421.Location = new System.Drawing.Point(383, 109);
            this.label421.Name = "label421";
            this.label421.Size = new System.Drawing.Size(49, 16);
            this.label421.TabIndex = 26;
            this.label421.Text = "(1-255)";
            // 
            // txtStream3AdjustRGBG
            // 
            this.txtStream3AdjustRGBG.Location = new System.Drawing.Point(341, 105);
            this.txtStream3AdjustRGBG.MaxLength = 3;
            this.txtStream3AdjustRGBG.Name = "txtStream3AdjustRGBG";
            this.txtStream3AdjustRGBG.Size = new System.Drawing.Size(36, 19);
            this.txtStream3AdjustRGBG.TabIndex = 25;
            this.txtStream3AdjustRGBG.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3AdjustRGBG.TextChanged += new System.EventHandler(this.txtStream3AdjustRGBG_TextChanged);
            // 
            // label422
            // 
            this.label422.Location = new System.Drawing.Point(238, 109);
            this.label422.Name = "label422";
            this.label422.Size = new System.Drawing.Size(85, 16);
            this.label422.TabIndex = 24;
            this.label422.Text = "AdjustRGBG";
            // 
            // label423
            // 
            this.label423.Location = new System.Drawing.Point(153, 109);
            this.label423.Name = "label423";
            this.label423.Size = new System.Drawing.Size(49, 16);
            this.label423.TabIndex = 23;
            this.label423.Text = "(1-255)";
            // 
            // txtStream3AdjustRGBR
            // 
            this.txtStream3AdjustRGBR.Location = new System.Drawing.Point(111, 105);
            this.txtStream3AdjustRGBR.MaxLength = 3;
            this.txtStream3AdjustRGBR.Name = "txtStream3AdjustRGBR";
            this.txtStream3AdjustRGBR.Size = new System.Drawing.Size(36, 19);
            this.txtStream3AdjustRGBR.TabIndex = 22;
            this.txtStream3AdjustRGBR.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3AdjustRGBR.TextChanged += new System.EventHandler(this.txtStream3AdjustRGBR_TextChanged);
            // 
            // label424
            // 
            this.label424.Location = new System.Drawing.Point(8, 109);
            this.label424.Name = "label424";
            this.label424.Size = new System.Drawing.Size(85, 16);
            this.label424.TabIndex = 21;
            this.label424.Text = "AdjustRGBR";
            // 
            // chkStream3AdjustRGB
            // 
            this.chkStream3AdjustRGB.Location = new System.Drawing.Point(111, 86);
            this.chkStream3AdjustRGB.Name = "chkStream3AdjustRGB";
            this.chkStream3AdjustRGB.Size = new System.Drawing.Size(15, 14);
            this.chkStream3AdjustRGB.TabIndex = 18;
            this.chkStream3AdjustRGB.UseVisualStyleBackColor = true;
            // 
            // label425
            // 
            this.label425.Location = new System.Drawing.Point(8, 86);
            this.label425.Name = "label425";
            this.label425.Size = new System.Drawing.Size(78, 16);
            this.label425.TabIndex = 17;
            this.label425.Text = "AdjustRGB";
            // 
            // label426
            // 
            this.label426.Location = new System.Drawing.Point(544, 63);
            this.label426.Name = "label426";
            this.label426.Size = new System.Drawing.Size(49, 16);
            this.label426.TabIndex = 16;
            this.label426.Text = "(0-254)";
            // 
            // txtStream3ColorReproductionShadow
            // 
            this.txtStream3ColorReproductionShadow.Location = new System.Drawing.Point(502, 59);
            this.txtStream3ColorReproductionShadow.MaxLength = 3;
            this.txtStream3ColorReproductionShadow.Name = "txtStream3ColorReproductionShadow";
            this.txtStream3ColorReproductionShadow.Size = new System.Drawing.Size(36, 19);
            this.txtStream3ColorReproductionShadow.TabIndex = 15;
            this.txtStream3ColorReproductionShadow.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3ColorReproductionShadow.TextChanged += new System.EventHandler(this.txtStream3ColorReproductionShadow_TextChanged);
            // 
            // label427
            // 
            this.label427.Location = new System.Drawing.Point(298, 63);
            this.label427.Name = "label427";
            this.label427.Size = new System.Drawing.Size(157, 16);
            this.label427.TabIndex = 14;
            this.label427.Text = "ColorReproductionShadow";
            // 
            // label428
            // 
            this.label428.Location = new System.Drawing.Point(223, 63);
            this.label428.Name = "label428";
            this.label428.Size = new System.Drawing.Size(49, 16);
            this.label428.TabIndex = 13;
            this.label428.Text = "(1-255)";
            // 
            // txtStream3ColorReproductionHighlight
            // 
            this.txtStream3ColorReproductionHighlight.Location = new System.Drawing.Point(181, 59);
            this.txtStream3ColorReproductionHighlight.MaxLength = 3;
            this.txtStream3ColorReproductionHighlight.Name = "txtStream3ColorReproductionHighlight";
            this.txtStream3ColorReproductionHighlight.Size = new System.Drawing.Size(36, 19);
            this.txtStream3ColorReproductionHighlight.TabIndex = 12;
            this.txtStream3ColorReproductionHighlight.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3ColorReproductionHighlight.TextChanged += new System.EventHandler(this.txtStream3ColorReproductionHighlight_TextChanged);
            // 
            // label429
            // 
            this.label429.Location = new System.Drawing.Point(8, 63);
            this.label429.Name = "label429";
            this.label429.Size = new System.Drawing.Size(156, 16);
            this.label429.TabIndex = 11;
            this.label429.Text = "ColorReproductionHighlight";
            // 
            // label430
            // 
            this.label430.Location = new System.Drawing.Point(544, 40);
            this.label430.Name = "label430";
            this.label430.Size = new System.Drawing.Size(62, 16);
            this.label430.TabIndex = 10;
            this.label430.Text = "(0.1-10.0)";
            // 
            // txtStream3ColorReproductionCustomGamma
            // 
            this.txtStream3ColorReproductionCustomGamma.Location = new System.Drawing.Point(502, 36);
            this.txtStream3ColorReproductionCustomGamma.MaxLength = 4;
            this.txtStream3ColorReproductionCustomGamma.Name = "txtStream3ColorReproductionCustomGamma";
            this.txtStream3ColorReproductionCustomGamma.Size = new System.Drawing.Size(36, 19);
            this.txtStream3ColorReproductionCustomGamma.TabIndex = 9;
            this.txtStream3ColorReproductionCustomGamma.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3ColorReproductionCustomGamma.TextChanged += new System.EventHandler(this.txtStream3ColorReproductionCustomGamma_TextChanged);
            // 
            // label431
            // 
            this.label431.Location = new System.Drawing.Point(298, 40);
            this.label431.Name = "label431";
            this.label431.Size = new System.Drawing.Size(196, 16);
            this.label431.TabIndex = 8;
            this.label431.Text = "ColorReproductionCustomGamma";
            // 
            // label432
            // 
            this.label432.Location = new System.Drawing.Point(223, 40);
            this.label432.Name = "label432";
            this.label432.Size = new System.Drawing.Size(49, 16);
            this.label432.TabIndex = 7;
            this.label432.Text = "(1-255)";
            // 
            // txtStream3ColorReproductionContrast
            // 
            this.txtStream3ColorReproductionContrast.Location = new System.Drawing.Point(181, 36);
            this.txtStream3ColorReproductionContrast.MaxLength = 3;
            this.txtStream3ColorReproductionContrast.Name = "txtStream3ColorReproductionContrast";
            this.txtStream3ColorReproductionContrast.Size = new System.Drawing.Size(36, 19);
            this.txtStream3ColorReproductionContrast.TabIndex = 6;
            this.txtStream3ColorReproductionContrast.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3ColorReproductionContrast.TextChanged += new System.EventHandler(this.txtStream3ColorReproductionContrast_TextChanged);
            // 
            // label433
            // 
            this.label433.Location = new System.Drawing.Point(8, 40);
            this.label433.Name = "label433";
            this.label433.Size = new System.Drawing.Size(162, 16);
            this.label433.TabIndex = 5;
            this.label433.Text = "ColorReproductionContrast";
            // 
            // label434
            // 
            this.label434.Location = new System.Drawing.Point(544, 17);
            this.label434.Name = "label434";
            this.label434.Size = new System.Drawing.Size(49, 16);
            this.label434.TabIndex = 4;
            this.label434.Text = "(1-255)";
            // 
            // txtStream3ColorReproductionBrightness
            // 
            this.txtStream3ColorReproductionBrightness.Location = new System.Drawing.Point(502, 13);
            this.txtStream3ColorReproductionBrightness.MaxLength = 3;
            this.txtStream3ColorReproductionBrightness.Name = "txtStream3ColorReproductionBrightness";
            this.txtStream3ColorReproductionBrightness.Size = new System.Drawing.Size(36, 19);
            this.txtStream3ColorReproductionBrightness.TabIndex = 3;
            this.txtStream3ColorReproductionBrightness.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3ColorReproductionBrightness.TextChanged += new System.EventHandler(this.txtStream3ColorReproductionBrightness_TextChanged);
            // 
            // label435
            // 
            this.label435.Location = new System.Drawing.Point(298, 17);
            this.label435.Name = "label435";
            this.label435.Size = new System.Drawing.Size(171, 16);
            this.label435.TabIndex = 2;
            this.label435.Text = "ColorReproductionBrightness";
            // 
            // cboStream3ColorReproduction
            // 
            this.cboStream3ColorReproduction.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream3ColorReproduction.Items.AddRange(new object[] {
            "Contrast",
            "Hue"});
            this.cboStream3ColorReproduction.Location = new System.Drawing.Point(134, 13);
            this.cboStream3ColorReproduction.MaxDropDownItems = 2;
            this.cboStream3ColorReproduction.Name = "cboStream3ColorReproduction";
            this.cboStream3ColorReproduction.Size = new System.Drawing.Size(121, 20);
            this.cboStream3ColorReproduction.TabIndex = 1;
            // 
            // label436
            // 
            this.label436.Location = new System.Drawing.Point(8, 17);
            this.label436.Name = "label436";
            this.label436.Size = new System.Drawing.Size(113, 16);
            this.label436.TabIndex = 0;
            this.label436.Text = "ColorReproduction";
            // 
            // groupBox32
            // 
            this.groupBox32.Controls.Add(this.label411);
            this.groupBox32.Controls.Add(this.cboStream3BackgroundSmoothing);
            this.groupBox32.Controls.Add(this.label412);
            this.groupBox32.Controls.Add(this.label413);
            this.groupBox32.Controls.Add(this.label414);
            this.groupBox32.Controls.Add(this.txtStream3Shadow);
            this.groupBox32.Controls.Add(this.txtStream3BackgroundSmoothness);
            this.groupBox32.Controls.Add(this.label415);
            this.groupBox32.Controls.Add(this.label416);
            this.groupBox32.Controls.Add(this.txtStream3Highlight);
            this.groupBox32.Controls.Add(this.label417);
            this.groupBox32.Location = new System.Drawing.Point(271, 369);
            this.groupBox32.Name = "groupBox32";
            this.groupBox32.Size = new System.Drawing.Size(448, 89);
            this.groupBox32.TabIndex = 6;
            this.groupBox32.TabStop = false;
            this.groupBox32.Text = "for Grayscale or RGB";
            // 
            // label411
            // 
            this.label411.Location = new System.Drawing.Point(8, 40);
            this.label411.Name = "label411";
            this.label411.Size = new System.Drawing.Size(136, 16);
            this.label411.TabIndex = 6;
            this.label411.Text = "BackgroundSmoothing";
            // 
            // cboStream3BackgroundSmoothing
            // 
            this.cboStream3BackgroundSmoothing.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream3BackgroundSmoothing.Items.AddRange(new object[] {
            "None",
            "Automatic",
            "White"});
            this.cboStream3BackgroundSmoothing.Location = new System.Drawing.Point(168, 37);
            this.cboStream3BackgroundSmoothing.MaxDropDownItems = 3;
            this.cboStream3BackgroundSmoothing.Name = "cboStream3BackgroundSmoothing";
            this.cboStream3BackgroundSmoothing.Size = new System.Drawing.Size(86, 20);
            this.cboStream3BackgroundSmoothing.TabIndex = 7;
            // 
            // label412
            // 
            this.label412.Location = new System.Drawing.Point(210, 64);
            this.label412.Name = "label412";
            this.label412.Size = new System.Drawing.Size(43, 16);
            this.label412.TabIndex = 10;
            this.label412.Text = "(0-10)";
            // 
            // label413
            // 
            this.label413.Location = new System.Drawing.Point(8, 17);
            this.label413.Name = "label413";
            this.label413.Size = new System.Drawing.Size(70, 16);
            this.label413.TabIndex = 0;
            this.label413.Text = "Highlight";
            // 
            // label414
            // 
            this.label414.Location = new System.Drawing.Point(317, 17);
            this.label414.Name = "label414";
            this.label414.Size = new System.Drawing.Size(49, 16);
            this.label414.TabIndex = 5;
            this.label414.Text = "(0-254)";
            // 
            // txtStream3Shadow
            // 
            this.txtStream3Shadow.Location = new System.Drawing.Point(275, 13);
            this.txtStream3Shadow.MaxLength = 3;
            this.txtStream3Shadow.Name = "txtStream3Shadow";
            this.txtStream3Shadow.Size = new System.Drawing.Size(36, 19);
            this.txtStream3Shadow.TabIndex = 4;
            this.txtStream3Shadow.Text = "10";
            this.txtStream3Shadow.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3Shadow.TextChanged += new System.EventHandler(this.txtStream3Shadow_TextChanged);
            // 
            // txtStream3BackgroundSmoothness
            // 
            this.txtStream3BackgroundSmoothness.Location = new System.Drawing.Point(168, 60);
            this.txtStream3BackgroundSmoothness.MaxLength = 2;
            this.txtStream3BackgroundSmoothness.Name = "txtStream3BackgroundSmoothness";
            this.txtStream3BackgroundSmoothness.Size = new System.Drawing.Size(36, 19);
            this.txtStream3BackgroundSmoothness.TabIndex = 9;
            this.txtStream3BackgroundSmoothness.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3BackgroundSmoothness.TextChanged += new System.EventHandler(this.txtStream3BackgroundSmoothness_TextChanged);
            // 
            // label415
            // 
            this.label415.Location = new System.Drawing.Point(203, 17);
            this.label415.Name = "label415";
            this.label415.Size = new System.Drawing.Size(69, 16);
            this.label415.TabIndex = 3;
            this.label415.Text = "Shadow";
            // 
            // label416
            // 
            this.label416.Location = new System.Drawing.Point(8, 63);
            this.label416.Name = "label416";
            this.label416.Size = new System.Drawing.Size(154, 16);
            this.label416.TabIndex = 8;
            this.label416.Text = "BackgroundSmoothness";
            // 
            // txtStream3Highlight
            // 
            this.txtStream3Highlight.Location = new System.Drawing.Point(84, 13);
            this.txtStream3Highlight.MaxLength = 3;
            this.txtStream3Highlight.Name = "txtStream3Highlight";
            this.txtStream3Highlight.Size = new System.Drawing.Size(36, 19);
            this.txtStream3Highlight.TabIndex = 1;
            this.txtStream3Highlight.Text = "230";
            this.txtStream3Highlight.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3Highlight.TextChanged += new System.EventHandler(this.txtStream3Highlight_TextChanged);
            // 
            // label417
            // 
            this.label417.Location = new System.Drawing.Point(126, 18);
            this.label417.Name = "label417";
            this.label417.Size = new System.Drawing.Size(49, 16);
            this.label417.TabIndex = 2;
            this.label417.Text = "(1-255)";
            // 
            // groupBox31
            // 
            this.groupBox31.Controls.Add(this.label408);
            this.groupBox31.Controls.Add(this.txtStream3FilterSaturationSensitivity);
            this.groupBox31.Controls.Add(this.label409);
            this.groupBox31.Controls.Add(this.cboStream3Filter);
            this.groupBox31.Controls.Add(this.label410);
            this.groupBox31.Location = new System.Drawing.Point(8, 369);
            this.groupBox31.Name = "groupBox31";
            this.groupBox31.Size = new System.Drawing.Size(255, 63);
            this.groupBox31.TabIndex = 5;
            this.groupBox31.TabStop = false;
            this.groupBox31.Text = "for Black&&White or Grayscale";
            // 
            // label408
            // 
            this.label408.Location = new System.Drawing.Point(206, 41);
            this.label408.Name = "label408";
            this.label408.Size = new System.Drawing.Size(45, 16);
            this.label408.TabIndex = 4;
            this.label408.Text = "(0-100)";
            // 
            // txtStream3FilterSaturationSensitivity
            // 
            this.txtStream3FilterSaturationSensitivity.Location = new System.Drawing.Point(164, 37);
            this.txtStream3FilterSaturationSensitivity.MaxLength = 3;
            this.txtStream3FilterSaturationSensitivity.Name = "txtStream3FilterSaturationSensitivity";
            this.txtStream3FilterSaturationSensitivity.Size = new System.Drawing.Size(36, 19);
            this.txtStream3FilterSaturationSensitivity.TabIndex = 3;
            this.txtStream3FilterSaturationSensitivity.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3FilterSaturationSensitivity.TextChanged += new System.EventHandler(this.txtStream3FilterSaturationSensitivity_TextChanged);
            // 
            // label409
            // 
            this.label409.Location = new System.Drawing.Point(8, 40);
            this.label409.Name = "label409";
            this.label409.Size = new System.Drawing.Size(157, 16);
            this.label409.TabIndex = 2;
            this.label409.Text = "FilterSaturationSensitivity";
            // 
            // cboStream3Filter
            // 
            this.cboStream3Filter.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream3Filter.Items.AddRange(new object[] {
            "Green",
            "Red",
            "Blue",
            "None",
            "White",
            "Saturation",
            "Specified by device",
            "Custom1",
            "Custom2",
            "Custom3",
            "Custom4"});
            this.cboStream3Filter.Location = new System.Drawing.Point(71, 14);
            this.cboStream3Filter.MaxDropDownItems = 11;
            this.cboStream3Filter.Name = "cboStream3Filter";
            this.cboStream3Filter.Size = new System.Drawing.Size(150, 20);
            this.cboStream3Filter.TabIndex = 1;
            // 
            // label410
            // 
            this.label410.Location = new System.Drawing.Point(8, 17);
            this.label410.Name = "label410";
            this.label410.Size = new System.Drawing.Size(56, 16);
            this.label410.TabIndex = 0;
            this.label410.Text = "Filter";
            // 
            // groupBox30
            // 
            this.groupBox30.Controls.Add(this.cboStream3SEE);
            this.groupBox30.Controls.Add(this.label384);
            this.groupBox30.Controls.Add(this.txtStream3HalftoneFile);
            this.groupBox30.Controls.Add(this.cboStream3Halftone);
            this.groupBox30.Controls.Add(this.label385);
            this.groupBox30.Controls.Add(this.label386);
            this.groupBox30.Controls.Add(this.txtStream3SDTCSensitivity);
            this.groupBox30.Controls.Add(this.label387);
            this.groupBox30.Controls.Add(this.label388);
            this.groupBox30.Controls.Add(this.txtStream3ADTCThreshold);
            this.groupBox30.Controls.Add(this.label389);
            this.groupBox30.Controls.Add(this.chkStream3SimpleSlicePatternRemoval);
            this.groupBox30.Controls.Add(this.label390);
            this.groupBox30.Controls.Add(this.chkStream3StampRemoval);
            this.groupBox30.Controls.Add(this.label391);
            this.groupBox30.Controls.Add(this.chkStream3HalftoneRemoval);
            this.groupBox30.Controls.Add(this.label392);
            this.groupBox30.Controls.Add(this.chkStream3ReversedTypeExtraction);
            this.groupBox30.Controls.Add(this.label393);
            this.groupBox30.Controls.Add(this.chkStream3CharacterExtraction);
            this.groupBox30.Controls.Add(this.label394);
            this.groupBox30.Controls.Add(this.cboStream3PatternRemoval);
            this.groupBox30.Controls.Add(this.label395);
            this.groupBox30.Controls.Add(this.label396);
            this.groupBox30.Controls.Add(this.txtStream3NoiseRejection);
            this.groupBox30.Controls.Add(this.label397);
            this.groupBox30.Controls.Add(this.label398);
            this.groupBox30.Controls.Add(this.txtStream3FadingCompensation);
            this.groupBox30.Controls.Add(this.label399);
            this.groupBox30.Controls.Add(this.label400);
            this.groupBox30.Controls.Add(this.txtStream3CharacterThickness);
            this.groupBox30.Controls.Add(this.label401);
            this.groupBox30.Controls.Add(this.label402);
            this.groupBox30.Controls.Add(this.txtStream3BackgroundThreshold);
            this.groupBox30.Controls.Add(this.label403);
            this.groupBox30.Controls.Add(this.label404);
            this.groupBox30.Controls.Add(this.txtStream3DTCSensitivity);
            this.groupBox30.Controls.Add(this.label405);
            this.groupBox30.Controls.Add(this.label406);
            this.groupBox30.Controls.Add(this.txtStream3Threshold);
            this.groupBox30.Controls.Add(this.label407);
            this.groupBox30.Location = new System.Drawing.Point(8, 211);
            this.groupBox30.Name = "groupBox30";
            this.groupBox30.Size = new System.Drawing.Size(711, 154);
            this.groupBox30.TabIndex = 4;
            this.groupBox30.TabStop = false;
            this.groupBox30.Text = "for Black&&White";
            // 
            // cboStream3SEE
            // 
            this.cboStream3SEE.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream3SEE.Items.AddRange(new object[] {
            "OFF",
            "ON"});
            this.cboStream3SEE.Location = new System.Drawing.Point(592, 128);
            this.cboStream3SEE.MaxDropDownItems = 2;
            this.cboStream3SEE.Name = "cboStream3SEE";
            this.cboStream3SEE.Size = new System.Drawing.Size(57, 20);
            this.cboStream3SEE.TabIndex = 40;
            // 
            // label384
            // 
            this.label384.Location = new System.Drawing.Point(546, 132);
            this.label384.Name = "label384";
            this.label384.Size = new System.Drawing.Size(40, 16);
            this.label384.TabIndex = 39;
            this.label384.Text = "SEE";
            // 
            // txtStream3HalftoneFile
            // 
            this.txtStream3HalftoneFile.Location = new System.Drawing.Point(204, 128);
            this.txtStream3HalftoneFile.MaxLength = 254;
            this.txtStream3HalftoneFile.Name = "txtStream3HalftoneFile";
            this.txtStream3HalftoneFile.Size = new System.Drawing.Size(305, 19);
            this.txtStream3HalftoneFile.TabIndex = 38;
            // 
            // cboStream3Halftone
            // 
            this.cboStream3Halftone.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream3Halftone.Items.AddRange(new object[] {
            "None",
            "DitherPattern0",
            "DitherPattern1",
            "DitherPattern2",
            "DitherPattern3",
            "DitherPatternFile",
            "ErrorDiffusion"});
            this.cboStream3Halftone.Location = new System.Drawing.Point(74, 128);
            this.cboStream3Halftone.MaxDropDownItems = 7;
            this.cboStream3Halftone.Name = "cboStream3Halftone";
            this.cboStream3Halftone.Size = new System.Drawing.Size(125, 20);
            this.cboStream3Halftone.TabIndex = 37;
            // 
            // label385
            // 
            this.label385.Location = new System.Drawing.Point(8, 132);
            this.label385.Name = "label385";
            this.label385.Size = new System.Drawing.Size(60, 16);
            this.label385.TabIndex = 36;
            this.label385.Text = "Halftone";
            // 
            // label386
            // 
            this.label386.Location = new System.Drawing.Point(624, 109);
            this.label386.Name = "label386";
            this.label386.Size = new System.Drawing.Size(43, 16);
            this.label386.TabIndex = 35;
            this.label386.Text = "(1-3)";
            // 
            // txtStream3SDTCSensitivity
            // 
            this.txtStream3SDTCSensitivity.Location = new System.Drawing.Point(582, 105);
            this.txtStream3SDTCSensitivity.MaxLength = 1;
            this.txtStream3SDTCSensitivity.Name = "txtStream3SDTCSensitivity";
            this.txtStream3SDTCSensitivity.Size = new System.Drawing.Size(36, 19);
            this.txtStream3SDTCSensitivity.TabIndex = 34;
            this.txtStream3SDTCSensitivity.Text = "2";
            this.txtStream3SDTCSensitivity.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3SDTCSensitivity.TextChanged += new System.EventHandler(this.txtStream3SDTCSensitivity_TextChanged);
            // 
            // label387
            // 
            this.label387.Location = new System.Drawing.Point(466, 109);
            this.label387.Name = "label387";
            this.label387.Size = new System.Drawing.Size(105, 16);
            this.label387.TabIndex = 33;
            this.label387.Text = "SDTCSensitivity";
            // 
            // label388
            // 
            this.label388.Location = new System.Drawing.Point(384, 109);
            this.label388.Name = "label388";
            this.label388.Size = new System.Drawing.Size(45, 16);
            this.label388.TabIndex = 32;
            this.label388.Text = "(1-255)";
            // 
            // txtStream3ADTCThreshold
            // 
            this.txtStream3ADTCThreshold.Location = new System.Drawing.Point(342, 105);
            this.txtStream3ADTCThreshold.MaxLength = 3;
            this.txtStream3ADTCThreshold.Name = "txtStream3ADTCThreshold";
            this.txtStream3ADTCThreshold.Size = new System.Drawing.Size(36, 19);
            this.txtStream3ADTCThreshold.TabIndex = 31;
            this.txtStream3ADTCThreshold.Text = "83";
            this.txtStream3ADTCThreshold.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3ADTCThreshold.TextChanged += new System.EventHandler(this.txtStream3ADTCThreshold_TextChanged);
            // 
            // label389
            // 
            this.label389.Location = new System.Drawing.Point(225, 109);
            this.label389.Name = "label389";
            this.label389.Size = new System.Drawing.Size(105, 16);
            this.label389.TabIndex = 30;
            this.label389.Text = "ADTCThreshold";
            // 
            // chkStream3SimpleSlicePatternRemoval
            // 
            this.chkStream3SimpleSlicePatternRemoval.Location = new System.Drawing.Point(176, 109);
            this.chkStream3SimpleSlicePatternRemoval.Name = "chkStream3SimpleSlicePatternRemoval";
            this.chkStream3SimpleSlicePatternRemoval.Size = new System.Drawing.Size(15, 14);
            this.chkStream3SimpleSlicePatternRemoval.TabIndex = 29;
            this.chkStream3SimpleSlicePatternRemoval.UseVisualStyleBackColor = true;
            // 
            // label390
            // 
            this.label390.Location = new System.Drawing.Point(8, 109);
            this.label390.Name = "label390";
            this.label390.Size = new System.Drawing.Size(160, 16);
            this.label390.TabIndex = 28;
            this.label390.Text = "SimpleSlicePatternRemoval";
            // 
            // chkStream3StampRemoval
            // 
            this.chkStream3StampRemoval.Location = new System.Drawing.Point(512, 86);
            this.chkStream3StampRemoval.Name = "chkStream3StampRemoval";
            this.chkStream3StampRemoval.Size = new System.Drawing.Size(15, 14);
            this.chkStream3StampRemoval.TabIndex = 27;
            this.chkStream3StampRemoval.UseVisualStyleBackColor = true;
            // 
            // label391
            // 
            this.label391.Location = new System.Drawing.Point(407, 86);
            this.label391.Name = "label391";
            this.label391.Size = new System.Drawing.Size(95, 16);
            this.label391.TabIndex = 26;
            this.label391.Text = "StampRemoval";
            // 
            // chkStream3HalftoneRemoval
            // 
            this.chkStream3HalftoneRemoval.Location = new System.Drawing.Point(342, 86);
            this.chkStream3HalftoneRemoval.Name = "chkStream3HalftoneRemoval";
            this.chkStream3HalftoneRemoval.Size = new System.Drawing.Size(15, 14);
            this.chkStream3HalftoneRemoval.TabIndex = 25;
            this.chkStream3HalftoneRemoval.UseVisualStyleBackColor = true;
            // 
            // label392
            // 
            this.label392.Location = new System.Drawing.Point(225, 86);
            this.label392.Name = "label392";
            this.label392.Size = new System.Drawing.Size(105, 16);
            this.label392.TabIndex = 24;
            this.label392.Text = "HalftoneRemoval";
            // 
            // chkStream3ReversedTypeExtraction
            // 
            this.chkStream3ReversedTypeExtraction.Location = new System.Drawing.Point(159, 86);
            this.chkStream3ReversedTypeExtraction.Name = "chkStream3ReversedTypeExtraction";
            this.chkStream3ReversedTypeExtraction.Size = new System.Drawing.Size(15, 14);
            this.chkStream3ReversedTypeExtraction.TabIndex = 23;
            this.chkStream3ReversedTypeExtraction.UseVisualStyleBackColor = true;
            // 
            // label393
            // 
            this.label393.Location = new System.Drawing.Point(8, 86);
            this.label393.Name = "label393";
            this.label393.Size = new System.Drawing.Size(147, 16);
            this.label393.TabIndex = 22;
            this.label393.Text = "ReversedTypeExtraction";
            // 
            // chkStream3CharacterExtraction
            // 
            this.chkStream3CharacterExtraction.Location = new System.Drawing.Point(381, 63);
            this.chkStream3CharacterExtraction.Name = "chkStream3CharacterExtraction";
            this.chkStream3CharacterExtraction.Size = new System.Drawing.Size(15, 14);
            this.chkStream3CharacterExtraction.TabIndex = 21;
            this.chkStream3CharacterExtraction.UseVisualStyleBackColor = true;
            // 
            // label394
            // 
            this.label394.Location = new System.Drawing.Point(251, 63);
            this.label394.Name = "label394";
            this.label394.Size = new System.Drawing.Size(113, 16);
            this.label394.TabIndex = 20;
            this.label394.Text = "CharacterExtraction";
            // 
            // cboStream3PatternRemoval
            // 
            this.cboStream3PatternRemoval.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream3PatternRemoval.Items.AddRange(new object[] {
            "OFF",
            "Standard",
            "Advanced",
            "Strong"});
            this.cboStream3PatternRemoval.Location = new System.Drawing.Point(120, 59);
            this.cboStream3PatternRemoval.MaxDropDownItems = 4;
            this.cboStream3PatternRemoval.Name = "cboStream3PatternRemoval";
            this.cboStream3PatternRemoval.Size = new System.Drawing.Size(91, 20);
            this.cboStream3PatternRemoval.TabIndex = 19;
            // 
            // label395
            // 
            this.label395.Location = new System.Drawing.Point(8, 63);
            this.label395.Name = "label395";
            this.label395.Size = new System.Drawing.Size(100, 16);
            this.label395.TabIndex = 18;
            this.label395.Text = "PatternRemoval";
            // 
            // label396
            // 
            this.label396.Location = new System.Drawing.Point(632, 40);
            this.label396.Name = "label396";
            this.label396.Size = new System.Drawing.Size(43, 16);
            this.label396.TabIndex = 17;
            this.label396.Text = "(0-20)";
            // 
            // txtStream3NoiseRejection
            // 
            this.txtStream3NoiseRejection.Location = new System.Drawing.Point(590, 36);
            this.txtStream3NoiseRejection.MaxLength = 2;
            this.txtStream3NoiseRejection.Name = "txtStream3NoiseRejection";
            this.txtStream3NoiseRejection.Size = new System.Drawing.Size(36, 19);
            this.txtStream3NoiseRejection.TabIndex = 16;
            this.txtStream3NoiseRejection.Text = "0";
            this.txtStream3NoiseRejection.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3NoiseRejection.TextChanged += new System.EventHandler(this.txtStream3NoiseRejection_TextChanged);
            // 
            // label397
            // 
            this.label397.Location = new System.Drawing.Point(486, 40);
            this.label397.Name = "label397";
            this.label397.Size = new System.Drawing.Size(100, 16);
            this.label397.TabIndex = 15;
            this.label397.Text = "NoiseRejection";
            // 
            // label398
            // 
            this.label398.Location = new System.Drawing.Point(423, 40);
            this.label398.Name = "label398";
            this.label398.Size = new System.Drawing.Size(41, 16);
            this.label398.TabIndex = 14;
            this.label398.Text = "(0-5)";
            // 
            // txtStream3FadingCompensation
            // 
            this.txtStream3FadingCompensation.Location = new System.Drawing.Point(381, 36);
            this.txtStream3FadingCompensation.MaxLength = 1;
            this.txtStream3FadingCompensation.Name = "txtStream3FadingCompensation";
            this.txtStream3FadingCompensation.Size = new System.Drawing.Size(36, 19);
            this.txtStream3FadingCompensation.TabIndex = 13;
            this.txtStream3FadingCompensation.Text = "0";
            this.txtStream3FadingCompensation.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3FadingCompensation.TextChanged += new System.EventHandler(this.txtStream3FadingCompensation_TextChanged);
            // 
            // label399
            // 
            this.label399.Location = new System.Drawing.Point(251, 40);
            this.label399.Name = "label399";
            this.label399.Size = new System.Drawing.Size(122, 16);
            this.label399.TabIndex = 12;
            this.label399.Text = "FadingCompensation";
            // 
            // label400
            // 
            this.label400.Location = new System.Drawing.Point(184, 40);
            this.label400.Name = "label400";
            this.label400.Size = new System.Drawing.Size(45, 16);
            this.label400.TabIndex = 11;
            this.label400.Text = "(0-10)";
            // 
            // txtStream3CharacterThickness
            // 
            this.txtStream3CharacterThickness.Location = new System.Drawing.Point(142, 36);
            this.txtStream3CharacterThickness.MaxLength = 2;
            this.txtStream3CharacterThickness.Name = "txtStream3CharacterThickness";
            this.txtStream3CharacterThickness.Size = new System.Drawing.Size(36, 19);
            this.txtStream3CharacterThickness.TabIndex = 10;
            this.txtStream3CharacterThickness.Text = "5";
            this.txtStream3CharacterThickness.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3CharacterThickness.TextChanged += new System.EventHandler(this.txtStream3CharacterThickness_TextChanged);
            // 
            // label401
            // 
            this.label401.Location = new System.Drawing.Point(8, 40);
            this.label401.Name = "label401";
            this.label401.Size = new System.Drawing.Size(120, 16);
            this.label401.TabIndex = 9;
            this.label401.Text = "CharacterThickness";
            // 
            // label402
            // 
            this.label402.Location = new System.Drawing.Point(611, 17);
            this.label402.Name = "label402";
            this.label402.Size = new System.Drawing.Size(45, 16);
            this.label402.TabIndex = 8;
            this.label402.Text = "(0-100)";
            // 
            // txtStream3BackgroundThreshold
            // 
            this.txtStream3BackgroundThreshold.Location = new System.Drawing.Point(569, 13);
            this.txtStream3BackgroundThreshold.MaxLength = 3;
            this.txtStream3BackgroundThreshold.Name = "txtStream3BackgroundThreshold";
            this.txtStream3BackgroundThreshold.Size = new System.Drawing.Size(36, 19);
            this.txtStream3BackgroundThreshold.TabIndex = 7;
            this.txtStream3BackgroundThreshold.Text = "50";
            this.txtStream3BackgroundThreshold.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3BackgroundThreshold.TextChanged += new System.EventHandler(this.txtStream3BackgroundThreshold_TextChanged);
            // 
            // label403
            // 
            this.label403.Location = new System.Drawing.Point(432, 17);
            this.label403.Name = "label403";
            this.label403.Size = new System.Drawing.Size(125, 16);
            this.label403.TabIndex = 6;
            this.label403.Text = "BackgroundThreshold";
            // 
            // label404
            // 
            this.label404.Location = new System.Drawing.Point(368, 17);
            this.label404.Name = "label404";
            this.label404.Size = new System.Drawing.Size(45, 16);
            this.label404.TabIndex = 5;
            this.label404.Text = "(0-100)";
            // 
            // txtStream3DTCSensitivity
            // 
            this.txtStream3DTCSensitivity.Location = new System.Drawing.Point(326, 13);
            this.txtStream3DTCSensitivity.MaxLength = 3;
            this.txtStream3DTCSensitivity.Name = "txtStream3DTCSensitivity";
            this.txtStream3DTCSensitivity.Size = new System.Drawing.Size(36, 19);
            this.txtStream3DTCSensitivity.TabIndex = 4;
            this.txtStream3DTCSensitivity.Text = "50";
            this.txtStream3DTCSensitivity.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3DTCSensitivity.TextChanged += new System.EventHandler(this.txtStream3DTCSensitivity_TextChanged);
            // 
            // label405
            // 
            this.label405.Location = new System.Drawing.Point(225, 17);
            this.label405.Name = "label405";
            this.label405.Size = new System.Drawing.Size(97, 16);
            this.label405.TabIndex = 3;
            this.label405.Text = "DTCSensitivity";
            // 
            // label406
            // 
            this.label406.Location = new System.Drawing.Point(130, 17);
            this.label406.Name = "label406";
            this.label406.Size = new System.Drawing.Size(77, 16);
            this.label406.TabIndex = 2;
            this.label406.Text = "(-2,-1,0-255)";
            // 
            // txtStream3Threshold
            // 
            this.txtStream3Threshold.Location = new System.Drawing.Point(88, 13);
            this.txtStream3Threshold.MaxLength = 3;
            this.txtStream3Threshold.Name = "txtStream3Threshold";
            this.txtStream3Threshold.Size = new System.Drawing.Size(36, 19);
            this.txtStream3Threshold.TabIndex = 1;
            this.txtStream3Threshold.Text = "128";
            this.txtStream3Threshold.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3Threshold.TextChanged += new System.EventHandler(this.txtStream3Threshold_TextChanged);
            // 
            // label407
            // 
            this.label407.Location = new System.Drawing.Point(8, 17);
            this.label407.Name = "label407";
            this.label407.Size = new System.Drawing.Size(76, 16);
            this.label407.TabIndex = 0;
            this.label407.Text = "Threshold";
            // 
            // groupBox29
            // 
            this.groupBox29.Controls.Add(this.cboStream3Sharpness);
            this.groupBox29.Controls.Add(this.label372);
            this.groupBox29.Controls.Add(this.cboStream3Background);
            this.groupBox29.Controls.Add(this.label374);
            this.groupBox29.Controls.Add(this.label375);
            this.groupBox29.Controls.Add(this.txtStream3CustomGamma);
            this.groupBox29.Controls.Add(this.label376);
            this.groupBox29.Controls.Add(this.label377);
            this.groupBox29.Controls.Add(this.txtStream3Contrast);
            this.groupBox29.Controls.Add(this.label378);
            this.groupBox29.Controls.Add(this.label379);
            this.groupBox29.Controls.Add(this.txtStream3Brightness);
            this.groupBox29.Controls.Add(this.label380);
            this.groupBox29.Controls.Add(this.txtStream3GammaFile);
            this.groupBox29.Controls.Add(this.cboStream3Gamma);
            this.groupBox29.Controls.Add(this.label381);
            this.groupBox29.Controls.Add(this.chkStream3Reverse);
            this.groupBox29.Controls.Add(this.label382);
            this.groupBox29.Controls.Add(this.chkStream3AutoBright);
            this.groupBox29.Controls.Add(this.label383);
            this.groupBox29.Location = new System.Drawing.Point(8, 100);
            this.groupBox29.Name = "groupBox29";
            this.groupBox29.Size = new System.Drawing.Size(711, 107);
            this.groupBox29.TabIndex = 3;
            this.groupBox29.TabStop = false;
            this.groupBox29.Text = "for All PixelType";
            // 
            // cboStream3Sharpness
            // 
            this.cboStream3Sharpness.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream3Sharpness.Items.AddRange(new object[] {
            "None",
            "Emphasis Low",
            "Emphasis Mid",
            "Emphasis High",
            "Edge Extract",
            "Level 1",
            "Level 2",
            "Level 3",
            "Level 4"});
            this.cboStream3Sharpness.Location = new System.Drawing.Point(286, 82);
            this.cboStream3Sharpness.MaxDropDownItems = 9;
            this.cboStream3Sharpness.Name = "cboStream3Sharpness";
            this.cboStream3Sharpness.Size = new System.Drawing.Size(125, 20);
            this.cboStream3Sharpness.TabIndex = 21;
            // 
            // label372
            // 
            this.label372.Location = new System.Drawing.Point(214, 86);
            this.label372.Name = "label372";
            this.label372.Size = new System.Drawing.Size(77, 16);
            this.label372.TabIndex = 20;
            this.label372.Text = "Sharpness";
            // 
            // cboStream3Background
            // 
            this.cboStream3Background.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream3Background.Items.AddRange(new object[] {
            "OFF",
            "ON",
            "AUTO"});
            this.cboStream3Background.Location = new System.Drawing.Point(105, 82);
            this.cboStream3Background.MaxDropDownItems = 3;
            this.cboStream3Background.Name = "cboStream3Background";
            this.cboStream3Background.Size = new System.Drawing.Size(60, 20);
            this.cboStream3Background.TabIndex = 17;
            // 
            // label374
            // 
            this.label374.Location = new System.Drawing.Point(8, 86);
            this.label374.Name = "label374";
            this.label374.Size = new System.Drawing.Size(77, 16);
            this.label374.TabIndex = 16;
            this.label374.Text = "Background";
            // 
            // label375
            // 
            this.label375.Location = new System.Drawing.Point(591, 64);
            this.label375.Name = "label375";
            this.label375.Size = new System.Drawing.Size(62, 16);
            this.label375.TabIndex = 15;
            this.label375.Text = "(0.1-10.0)";
            // 
            // txtStream3CustomGamma
            // 
            this.txtStream3CustomGamma.Location = new System.Drawing.Point(550, 60);
            this.txtStream3CustomGamma.MaxLength = 4;
            this.txtStream3CustomGamma.Name = "txtStream3CustomGamma";
            this.txtStream3CustomGamma.Size = new System.Drawing.Size(36, 19);
            this.txtStream3CustomGamma.TabIndex = 14;
            this.txtStream3CustomGamma.Text = "2.2";
            this.txtStream3CustomGamma.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3CustomGamma.TextChanged += new System.EventHandler(this.txtStream3CustomGamma_TextChanged);
            // 
            // label376
            // 
            this.label376.Location = new System.Drawing.Point(432, 63);
            this.label376.Name = "label376";
            this.label376.Size = new System.Drawing.Size(90, 16);
            this.label376.TabIndex = 13;
            this.label376.Text = "CustomGamma";
            // 
            // label377
            // 
            this.label377.Location = new System.Drawing.Point(342, 64);
            this.label377.Name = "label377";
            this.label377.Size = new System.Drawing.Size(50, 16);
            this.label377.TabIndex = 12;
            this.label377.Text = "(1-255)";
            // 
            // txtStream3Contrast
            // 
            this.txtStream3Contrast.Location = new System.Drawing.Point(301, 60);
            this.txtStream3Contrast.MaxLength = 3;
            this.txtStream3Contrast.Name = "txtStream3Contrast";
            this.txtStream3Contrast.Size = new System.Drawing.Size(36, 19);
            this.txtStream3Contrast.TabIndex = 11;
            this.txtStream3Contrast.Text = "128";
            this.txtStream3Contrast.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3Contrast.TextChanged += new System.EventHandler(this.txtStream3Contrast_TextChanged);
            // 
            // label378
            // 
            this.label378.Location = new System.Drawing.Point(214, 63);
            this.label378.Name = "label378";
            this.label378.Size = new System.Drawing.Size(76, 16);
            this.label378.TabIndex = 10;
            this.label378.Text = "Contrast";
            // 
            // label379
            // 
            this.label379.Location = new System.Drawing.Point(146, 64);
            this.label379.Name = "label379";
            this.label379.Size = new System.Drawing.Size(50, 16);
            this.label379.TabIndex = 9;
            this.label379.Text = "(1-255)";
            // 
            // txtStream3Brightness
            // 
            this.txtStream3Brightness.Location = new System.Drawing.Point(105, 60);
            this.txtStream3Brightness.MaxLength = 3;
            this.txtStream3Brightness.Name = "txtStream3Brightness";
            this.txtStream3Brightness.Size = new System.Drawing.Size(36, 19);
            this.txtStream3Brightness.TabIndex = 8;
            this.txtStream3Brightness.Text = "128";
            this.txtStream3Brightness.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3Brightness.TextChanged += new System.EventHandler(this.txtStream3Brightness_TextChanged);
            // 
            // label380
            // 
            this.label380.Location = new System.Drawing.Point(8, 63);
            this.label380.Name = "label380";
            this.label380.Size = new System.Drawing.Size(91, 16);
            this.label380.TabIndex = 7;
            this.label380.Text = "Brightness";
            // 
            // txtStream3GammaFile
            // 
            this.txtStream3GammaFile.Location = new System.Drawing.Point(235, 36);
            this.txtStream3GammaFile.MaxLength = 254;
            this.txtStream3GammaFile.Name = "txtStream3GammaFile";
            this.txtStream3GammaFile.Size = new System.Drawing.Size(309, 19);
            this.txtStream3GammaFile.TabIndex = 6;
            // 
            // cboStream3Gamma
            // 
            this.cboStream3Gamma.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream3Gamma.Items.AddRange(new object[] {
            "None",
            "Soft",
            "Sharp",
            "GammaPatternFile",
            "Custom",
            "Bright",
            "Standard"});
            this.cboStream3Gamma.Location = new System.Drawing.Point(105, 36);
            this.cboStream3Gamma.Name = "cboStream3Gamma";
            this.cboStream3Gamma.Size = new System.Drawing.Size(125, 20);
            this.cboStream3Gamma.TabIndex = 5;
            // 
            // label381
            // 
            this.label381.Location = new System.Drawing.Point(8, 40);
            this.label381.Name = "label381";
            this.label381.Size = new System.Drawing.Size(81, 16);
            this.label381.TabIndex = 4;
            this.label381.Text = "Gamma";
            // 
            // chkStream3Reverse
            // 
            this.chkStream3Reverse.Location = new System.Drawing.Point(301, 17);
            this.chkStream3Reverse.Name = "chkStream3Reverse";
            this.chkStream3Reverse.Size = new System.Drawing.Size(15, 14);
            this.chkStream3Reverse.TabIndex = 3;
            this.chkStream3Reverse.UseVisualStyleBackColor = true;
            // 
            // label382
            // 
            this.label382.Location = new System.Drawing.Point(214, 17);
            this.label382.Name = "label382";
            this.label382.Size = new System.Drawing.Size(76, 16);
            this.label382.TabIndex = 2;
            this.label382.Text = "Reverse";
            // 
            // chkStream3AutoBright
            // 
            this.chkStream3AutoBright.Location = new System.Drawing.Point(105, 17);
            this.chkStream3AutoBright.Name = "chkStream3AutoBright";
            this.chkStream3AutoBright.Size = new System.Drawing.Size(15, 14);
            this.chkStream3AutoBright.TabIndex = 1;
            this.chkStream3AutoBright.UseVisualStyleBackColor = true;
            // 
            // label383
            // 
            this.label383.Location = new System.Drawing.Point(8, 17);
            this.label383.Name = "label383";
            this.label383.Size = new System.Drawing.Size(85, 16);
            this.label383.TabIndex = 0;
            this.label383.Text = "AutoBright";
            // 
            // groupBox28
            // 
            this.groupBox28.Controls.Add(this.txtFileName3);
            this.groupBox28.Controls.Add(this.label445);
            this.groupBox28.Controls.Add(this.label444);
            this.groupBox28.Controls.Add(this.txtFileCounter3);
            this.groupBox28.Controls.Add(this.label443);
            this.groupBox28.Controls.Add(this.cboStream3PixelType);
            this.groupBox28.Controls.Add(this.label366);
            this.groupBox28.Controls.Add(this.label367);
            this.groupBox28.Controls.Add(this.txtStream3CustomResolution);
            this.groupBox28.Controls.Add(this.label368);
            this.groupBox28.Controls.Add(this.cboStream3CompressionType);
            this.groupBox28.Controls.Add(this.label369);
            this.groupBox28.Controls.Add(this.cboStream3Resolution);
            this.groupBox28.Controls.Add(this.label370);
            this.groupBox28.Controls.Add(this.cboStream3FileType);
            this.groupBox28.Controls.Add(this.label371);
            this.groupBox28.Location = new System.Drawing.Point(8, 8);
            this.groupBox28.Name = "groupBox28";
            this.groupBox28.Size = new System.Drawing.Size(711, 88);
            this.groupBox28.TabIndex = 2;
            this.groupBox28.TabStop = false;
            // 
            // txtFileName3
            // 
            this.txtFileName3.Location = new System.Drawing.Point(89, 60);
            this.txtFileName3.MaxLength = 254;
            this.txtFileName3.Name = "txtFileName3";
            this.txtFileName3.Size = new System.Drawing.Size(430, 19);
            this.txtFileName3.TabIndex = 15;
            // 
            // label445
            // 
            this.label445.Location = new System.Drawing.Point(8, 63);
            this.label445.Name = "label445";
            this.label445.Size = new System.Drawing.Size(75, 16);
            this.label445.TabIndex = 14;
            this.label445.Text = "FileName";
            // 
            // label444
            // 
            this.label444.Location = new System.Drawing.Point(498, 40);
            this.label444.Name = "label444";
            this.label444.Size = new System.Drawing.Size(82, 16);
            this.label444.TabIndex = 11;
            this.label444.Text = "FileCounter";
            // 
            // txtFileCounter3
            // 
            this.txtFileCounter3.Location = new System.Drawing.Point(588, 37);
            this.txtFileCounter3.MaxLength = 5;
            this.txtFileCounter3.Name = "txtFileCounter3";
            this.txtFileCounter3.Size = new System.Drawing.Size(45, 19);
            this.txtFileCounter3.TabIndex = 12;
            this.txtFileCounter3.Text = "-1";
            this.txtFileCounter3.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtFileCounter3.TextChanged += new System.EventHandler(this.txtFileCounter3_TextChanged);
            // 
            // label443
            // 
            this.label443.Location = new System.Drawing.Point(638, 41);
            this.label443.Name = "label443";
            this.label443.Size = new System.Drawing.Size(70, 16);
            this.label443.TabIndex = 13;
            this.label443.Text = "(-1,0-65535)";
            // 
            // cboStream3PixelType
            // 
            this.cboStream3PixelType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream3PixelType.FormattingEnabled = true;
            this.cboStream3PixelType.Items.AddRange(new object[] {
            "Black&White",
            "Grayscale",
            "RGB"});
            this.cboStream3PixelType.Location = new System.Drawing.Point(89, 14);
            this.cboStream3PixelType.Name = "cboStream3PixelType";
            this.cboStream3PixelType.Size = new System.Drawing.Size(106, 20);
            this.cboStream3PixelType.TabIndex = 1;
            // 
            // label366
            // 
            this.label366.Location = new System.Drawing.Point(8, 17);
            this.label366.Name = "label366";
            this.label366.Size = new System.Drawing.Size(72, 16);
            this.label366.TabIndex = 0;
            this.label366.Text = "PixelType";
            // 
            // label367
            // 
            this.label367.Location = new System.Drawing.Point(410, 41);
            this.label367.Name = "label367";
            this.label367.Size = new System.Drawing.Size(76, 16);
            this.label367.TabIndex = 10;
            this.label367.Text = "(50-600dpi)";
            // 
            // txtStream3CustomResolution
            // 
            this.txtStream3CustomResolution.Location = new System.Drawing.Point(360, 37);
            this.txtStream3CustomResolution.MaxLength = 4;
            this.txtStream3CustomResolution.Name = "txtStream3CustomResolution";
            this.txtStream3CustomResolution.Size = new System.Drawing.Size(45, 19);
            this.txtStream3CustomResolution.TabIndex = 9;
            this.txtStream3CustomResolution.TextAlign = System.Windows.Forms.HorizontalAlignment.Right;
            this.txtStream3CustomResolution.TextChanged += new System.EventHandler(this.txtStream3CustomResolution_TextChanged);
            // 
            // label368
            // 
            this.label368.Location = new System.Drawing.Point(240, 40);
            this.label368.Name = "label368";
            this.label368.Size = new System.Drawing.Size(115, 16);
            this.label368.TabIndex = 8;
            this.label368.Text = "CustomResolution";
            // 
            // cboStream3CompressionType
            // 
            this.cboStream3CompressionType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream3CompressionType.Items.AddRange(new object[] {
            "No Compress",
            "CCITT G3(1D)",
            "CCITT G3(2D)(KFactor=2)",
            "CCITT G3(2D)(KFactor=4)",
            "CCITT G4",
            "JPEG",
            "Old JPEG"});
            this.cboStream3CompressionType.Location = new System.Drawing.Point(544, 14);
            this.cboStream3CompressionType.MaxDropDownItems = 7;
            this.cboStream3CompressionType.Name = "cboStream3CompressionType";
            this.cboStream3CompressionType.Size = new System.Drawing.Size(161, 20);
            this.cboStream3CompressionType.TabIndex = 5;
            // 
            // label369
            // 
            this.label369.Location = new System.Drawing.Point(432, 17);
            this.label369.Name = "label369";
            this.label369.Size = new System.Drawing.Size(103, 16);
            this.label369.TabIndex = 4;
            this.label369.Text = "CompressionType";
            // 
            // cboStream3Resolution
            // 
            this.cboStream3Resolution.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream3Resolution.Items.AddRange(new object[] {
            "200dpi",
            "240dpi",
            "300dpi",
            "400dpi",
            "500dpi",
            "600dpi",
            "700dpi",
            "800dpi",
            "1200dpi",
            "Custom"});
            this.cboStream3Resolution.Location = new System.Drawing.Point(89, 37);
            this.cboStream3Resolution.MaxDropDownItems = 10;
            this.cboStream3Resolution.Name = "cboStream3Resolution";
            this.cboStream3Resolution.Size = new System.Drawing.Size(121, 20);
            this.cboStream3Resolution.TabIndex = 7;
            this.cboStream3Resolution.SelectedIndexChanged += new System.EventHandler(this.cboStream3Resolution_SelectedIndexChanged);
            // 
            // label370
            // 
            this.label370.Location = new System.Drawing.Point(8, 40);
            this.label370.Name = "label370";
            this.label370.Size = new System.Drawing.Size(76, 16);
            this.label370.TabIndex = 6;
            this.label370.Text = "Resolution";
            // 
            // cboStream3FileType
            // 
            this.cboStream3FileType.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;
            this.cboStream3FileType.Items.AddRange(new object[] {
            "BMP",
            "TIFF",
            "MultipageTIFF",
            "JPEG",
            "PDF",
            "MultipagePDF"});
            this.cboStream3FileType.Location = new System.Drawing.Point(301, 14);
            this.cboStream3FileType.MaxDropDownItems = 6;
            this.cboStream3FileType.Name = "cboStream3FileType";
            this.cboStream3FileType.Size = new System.Drawing.Size(105, 20);
            this.cboStream3FileType.TabIndex = 3;
            // 
            // label371
            // 
            this.label371.Location = new System.Drawing.Point(230, 17);
            this.label371.Name = "label371";
            this.label371.Size = new System.Drawing.Size(60, 16);
            this.label371.TabIndex = 2;
            this.label371.Text = "FileType";
            // 
            // statusBar1
            // 
            this.statusBar1.Location = new System.Drawing.Point(0, 649);
            this.statusBar1.Name = "statusBar1";
            this.statusBar1.Size = new System.Drawing.Size(872, 21);
            this.statusBar1.SizingGrip = false;
            this.statusBar1.TabIndex = 7;
            // 
            // mainMenu1
            // 
            this.mainMenu1.MenuItems.AddRange(new System.Windows.Forms.MenuItem[] {
            this.MenuItemFile,
            this.MenuItemScanner,
            this.MenuItemOption,
            this.MenuItemHelp});
            // 
            // MenuItemFile
            // 
            this.MenuItemFile.Index = 0;
            this.MenuItemFile.MenuItems.AddRange(new System.Windows.Forms.MenuItem[] {
            this.MenuItemExit});
            this.MenuItemFile.Text = "&File";
            // 
            // MenuItemExit
            // 
            this.MenuItemExit.Index = 0;
            this.MenuItemExit.Text = "&Exit";
            this.MenuItemExit.Click += new System.EventHandler(this.MenuItemExit_Click);
            // 
            // MenuItemScanner
            // 
            this.MenuItemScanner.Index = 1;
            this.MenuItemScanner.MenuItems.AddRange(new System.Windows.Forms.MenuItem[] {
            this.MenuItemStartScan,
            this.MenuItemSeparator1,
            this.MenuItemSelectSource,
            this.MenuItemSeparator2,
            this.MenuItemClearPage,
            this.menuItemSeparator4,
            this.menuItemFeederLoaded});
            this.MenuItemScanner.Text = "&Scanner";
            // 
            // MenuItemStartScan
            // 
            this.MenuItemStartScan.Index = 0;
            this.MenuItemStartScan.Text = "&StartScan";
            this.MenuItemStartScan.Click += new System.EventHandler(this.MenuItemStartScan_Click);
            // 
            // MenuItemSeparator1
            // 
            this.MenuItemSeparator1.Index = 1;
            this.MenuItemSeparator1.Text = "-";
            // 
            // MenuItemSelectSource
            // 
            this.MenuItemSelectSource.Index = 2;
            this.MenuItemSelectSource.Text = "Se&lectSource...";
            this.MenuItemSelectSource.Click += new System.EventHandler(this.MenuItemSelectSource_Click);
            // 
            // MenuItemSeparator2
            // 
            this.MenuItemSeparator2.Index = 3;
            this.MenuItemSeparator2.Text = "-";
            // 
            // MenuItemClearPage
            // 
            this.MenuItemClearPage.Index = 4;
            this.MenuItemClearPage.Text = "&ClearPage";
            this.MenuItemClearPage.Click += new System.EventHandler(this.MenuItemClearPage_Click);
            // 
            // menuItemSeparator4
            // 
            this.menuItemSeparator4.Index = 5;
            this.menuItemSeparator4.Text = "-";
            // 
            // menuItemFeederLoaded
            // 
            this.menuItemFeederLoaded.Index = 6;
            this.menuItemFeederLoaded.Text = "&FeederLoaded";
            this.menuItemFeederLoaded.Click += new System.EventHandler(this.menuItemFeederLoaded_Click);
            // 
            // MenuItemOption
            // 
            this.MenuItemOption.Index = 2;
            this.MenuItemOption.MenuItems.AddRange(new System.Windows.Forms.MenuItem[] {
            this.MenuItemShowSourceUI,
            this.MenuItemCloseSourceUI,
            this.MenuItemSourceCurrentScan,
            this.MenuItemAutoProfile,
            this.MenuItemSilentMode,
            this.MenuItemIndicator,
            this.MenuItemCarrierSheetClippingMode,
            this.MenuItemReport,
            this.MenuItemSeparator3,
            this.MenuItemSIPCTemplate,
            this.MenuItemTWAINTemplate,
            this.MenuItemSourceList,
            this.MenuItemSeparator5,
            this.MenuItemShowEvent,
            this.MenuItemOutputResult});
            this.MenuItemOption.Text = "&Option";
            // 
            // MenuItemShowSourceUI
            // 
            this.MenuItemShowSourceUI.Checked = true;
            this.MenuItemShowSourceUI.Index = 0;
            this.MenuItemShowSourceUI.Text = "S&howSourceUI";
            this.MenuItemShowSourceUI.Click += new System.EventHandler(this.MenuItemShowSourceUI_Click);
            // 
            // MenuItemCloseSourceUI
            // 
            this.MenuItemCloseSourceUI.Checked = true;
            this.MenuItemCloseSourceUI.Index = 1;
            this.MenuItemCloseSourceUI.Text = "C&loseSourceUI";
            this.MenuItemCloseSourceUI.Click += new System.EventHandler(this.MenuItemCloseSourceUI_Click);
            // 
            // MenuItemSourceCurrentScan
            // 
            this.MenuItemSourceCurrentScan.Checked = true;
            this.MenuItemSourceCurrentScan.Index = 2;
            this.MenuItemSourceCurrentScan.Text = "Source&CurrentScan";
            this.MenuItemSourceCurrentScan.Click += new System.EventHandler(this.MenuItemSourceCurrentScan_Click);
            // 
            // MenuItemAutoProfile
            // 
            this.MenuItemAutoProfile.Index = 3;
            this.MenuItemAutoProfile.Text = "&AutoProfile...";
            this.MenuItemAutoProfile.Click += new System.EventHandler(this.MenuItemAutoProfile_Click);
            // 
            // MenuItemSilentMode
            // 
            this.MenuItemSilentMode.Checked = true;
            this.MenuItemSilentMode.Index = 4;
            this.MenuItemSilentMode.Text = "&SilentMode";
            this.MenuItemSilentMode.Click += new System.EventHandler(this.MenuItemSilentMode_Click);
            // 
            // MenuItemIndicator
            // 
            this.MenuItemIndicator.Checked = true;
            this.MenuItemIndicator.Index = 5;
            this.MenuItemIndicator.Text = "&Indicator";
            this.MenuItemIndicator.Click += new System.EventHandler(this.MenuItemIndicator_Click);
            // 
            // MenuItemCarrierSheetClippingMode
            // 
            this.MenuItemCarrierSheetClippingMode.Index = 6;
            this.MenuItemCarrierSheetClippingMode.MenuItems.AddRange(new System.Windows.Forms.MenuItem[] {
            this.MenuItemCarrierSheetClippingModeContent,
            this.MenuItemCarrierSheetClippingModeEdge,
            this.MenuItemCarrierSheetClippingModeDriverSetting});
            this.MenuItemCarrierSheetClippingMode.Text = "CarrierSheetCli&ppingMode";
            // 
            // MenuItemCarrierSheetClippingModeContent
            // 
            this.MenuItemCarrierSheetClippingModeContent.Index = 0;
            this.MenuItemCarrierSheetClippingModeContent.Text = "&Content";
            this.MenuItemCarrierSheetClippingModeContent.Click += new System.EventHandler(this.MenuItemCarrierSheetClippingModeContent_Click);
            // 
            // MenuItemCarrierSheetClippingModeEdge
            // 
            this.MenuItemCarrierSheetClippingModeEdge.Index = 1;
            this.MenuItemCarrierSheetClippingModeEdge.Text = "&Edge";
            this.MenuItemCarrierSheetClippingModeEdge.Click += new System.EventHandler(this.MenuItemCarrierSheetClippingModeEdge_Click);
            // 
            // MenuItemCarrierSheetClippingModeDriverSetting
            // 
            this.MenuItemCarrierSheetClippingModeDriverSetting.Checked = true;
            this.MenuItemCarrierSheetClippingModeDriverSetting.Index = 2;
            this.MenuItemCarrierSheetClippingModeDriverSetting.Text = "&Driver Setting";
            this.MenuItemCarrierSheetClippingModeDriverSetting.Click += new System.EventHandler(this.MenuItemCarrierSheetClippingModeDriverSetting_Click);
            // 
            // MenuItemReport
            // 
            this.MenuItemReport.Index = 7;
            this.MenuItemReport.MenuItems.AddRange(new System.Windows.Forms.MenuItem[] {
            this.MenuItemReportOFF,
            this.MenuItemReportDisplay,
            this.MenuItemReportFile,
            this.MenuItemReportBoth});
            this.MenuItemReport.Text = "&Report";
            // 
            // MenuItemReportOFF
            // 
            this.MenuItemReportOFF.Checked = true;
            this.MenuItemReportOFF.Index = 0;
            this.MenuItemReportOFF.RadioCheck = true;
            this.MenuItemReportOFF.Text = "&OFF";
            this.MenuItemReportOFF.Click += new System.EventHandler(this.MenuItemReportOFF_Click);
            // 
            // MenuItemReportDisplay
            // 
            this.MenuItemReportDisplay.Index = 1;
            this.MenuItemReportDisplay.RadioCheck = true;
            this.MenuItemReportDisplay.Text = "&Display";
            this.MenuItemReportDisplay.Click += new System.EventHandler(this.MenuItemReportDisplay_Click);
            // 
            // MenuItemReportFile
            // 
            this.MenuItemReportFile.Index = 2;
            this.MenuItemReportFile.RadioCheck = true;
            this.MenuItemReportFile.Text = "&File";
            this.MenuItemReportFile.Click += new System.EventHandler(this.MenuItemReportFile_Click);
            // 
            // MenuItemReportBoth
            // 
            this.MenuItemReportBoth.Index = 3;
            this.MenuItemReportBoth.RadioCheck = true;
            this.MenuItemReportBoth.Text = "Display&&File(&B)";
            this.MenuItemReportBoth.Click += new System.EventHandler(this.MenuItemReportBoth_Click);
            // 
            // MenuItemSeparator3
            // 
            this.MenuItemSeparator3.Index = 8;
            this.MenuItemSeparator3.Text = "-";
            // 
            // MenuItemSIPCTemplate
            // 
            this.MenuItemSIPCTemplate.Index = 9;
            this.MenuItemSIPCTemplate.Text = "SoftIPC &Template...";
            this.MenuItemSIPCTemplate.Click += new System.EventHandler(this.MenuItemSIPCTemplate_Click);
            // 
            // MenuItemTWAINTemplate
            // 
            this.MenuItemTWAINTemplate.Index = 10;
            this.MenuItemTWAINTemplate.Text = "T&WAIN Template...";
            this.MenuItemTWAINTemplate.Click += new System.EventHandler(this.MenuItemTWAINTemplate_Click);
            // 
            // MenuItemSourceList
            // 
            this.MenuItemSourceList.Index = 11;
            this.MenuItemSourceList.Text = "So&urce List...";
            this.MenuItemSourceList.Click += new System.EventHandler(this.MenuItemSourceList_Click);
            // 
            // MenuItemSeparator5
            // 
            this.MenuItemSeparator5.Index = 12;
            this.MenuItemSeparator5.Text = "-";
            // 
            // MenuItemShowEvent
            // 
            this.MenuItemShowEvent.Index = 13;
            this.MenuItemShowEvent.Text = "Show&Event";
            this.MenuItemShowEvent.Click += new System.EventHandler(this.MenuItemShowEvent_Click);
            // 
            // MenuItemOutputResult
            // 
            this.MenuItemOutputResult.Checked = true;
            this.MenuItemOutputResult.Index = 14;
            this.MenuItemOutputResult.Text = "&OutputResult";
            this.MenuItemOutputResult.Click += new System.EventHandler(this.MenuItemOutputResult_Click);
            // 
            // MenuItemHelp
            // 
            this.MenuItemHelp.Index = 3;
            this.MenuItemHelp.MenuItems.AddRange(new System.Windows.Forms.MenuItem[] {
            this.MenuItemVersion});
            this.MenuItemHelp.Text = "&Help";
            // 
            // MenuItemVersion
            // 
            this.MenuItemVersion.Index = 0;
            this.MenuItemVersion.Text = "&Version...";
            this.MenuItemVersion.Click += new System.EventHandler(this.MenuItemVersion_Click);
            // 
            // ButtonCheckADF
            // 
            this.ButtonCheckADF.Location = new System.Drawing.Point(758, 229);
            this.ButtonCheckADF.Name = "ButtonCheckADF";
            this.ButtonCheckADF.Size = new System.Drawing.Size(102, 24);
            this.ButtonCheckADF.TabIndex = 4;
            this.ButtonCheckADF.Text = "CheckADF";
            this.ButtonCheckADF.Click += new System.EventHandler(this.ButtonCheckADF_Click);
            // 
            // ButtonPSIPDefault
            // 
            this.ButtonPSIPDefault.Font = new System.Drawing.Font("MS UI Gothic", 9F);
            this.ButtonPSIPDefault.Location = new System.Drawing.Point(758, 162);
            this.ButtonPSIPDefault.Name = "ButtonPSIPDefault";
            this.ButtonPSIPDefault.Size = new System.Drawing.Size(102, 24);
            this.ButtonPSIPDefault.TabIndex = 3;
            this.ButtonPSIPDefault.Text = "PSIP Default";
            this.ButtonPSIPDefault.Click += new System.EventHandler(this.ButtonPSIP_Click);
            // 
            // ButtonSerialNo
            // 
            this.ButtonSerialNo.Location = new System.Drawing.Point(758, 263);
            this.ButtonSerialNo.Name = "ButtonSerialNo";
            this.ButtonSerialNo.Size = new System.Drawing.Size(102, 24);
            this.ButtonSerialNo.TabIndex = 5;
            this.ButtonSerialNo.Text = "Serial No.";
            this.ButtonSerialNo.UseVisualStyleBackColor = true;
            this.ButtonSerialNo.Click += new System.EventHandler(this.ButtonSerialNo_Click);
            // 
            // axFiScn1
            // 
            this.axFiScn1.Enabled = true;
            this.axFiScn1.Location = new System.Drawing.Point(789, 431);
            this.axFiScn1.Name = "axFiScn1";
            this.axFiScn1.OcxState = ((System.Windows.Forms.AxHost.State)(resources.GetObject("axFiScn1.OcxState")));
            this.axFiScn1.Size = new System.Drawing.Size(48, 48);
            this.axFiScn1.TabIndex = 8;
            this.axFiScn1.DetectJobSeparator += new System.EventHandler(this.axFiScn1_DetectJobSeparator);
            this.axFiScn1.NegotiateCapabilities += new System.EventHandler(this.axFiscn1_NegotiateCapabilities);
            this.axFiScn1.ScanToFile += new AxFiScnLib._DFiScnEvents_ScanToFileEventHandler(this.axFiScn1_ScanToFile);
            this.axFiScn1.DetectBarcode += new AxFiScnLib._DFiScnEvents_DetectBarcodeEventHandler(this.axFiScn1_DetectBarcode);
            this.axFiScn1.DetectPatchCode += new AxFiScnLib._DFiScnEvents_DetectPatchCodeEventHandler(this.axFiScn1_DetectPatchCode);
            this.axFiScn1.DetectBarcodeDetail += new AxFiScnLib._DFiScnEvents_DetectBarcodeDetailEventHandler(this.axFiScn1_DetectBarcodeDetail);
            this.axFiScn1.PagePartition += new System.EventHandler(this.axFiscn1_Pagepartition);
            this.axFiScn1.ScanToDibEx += new AxFiScnLib._DFiScnEvents_ScanToDibExEventHandler(this.axFiScn1_ScanToDibEx);
            this.axFiScn1.ScanToRawEx += new AxFiScnLib._DFiScnEvents_ScanToRawExEventHandler(this.axFiScn1_ScanToRawEx);
            this.axFiScn1.AutoProfileSelection += new AxFiScnLib._DFiScnEvents_AutoProfileSelectionEventHandler(this.axFiScn1_AutoProfileSelection);
            this.axFiScn1.MultiStreamPropertySetting += new AxFiScnLib._DFiScnEvents_MultiStreamPropertySettingEventHandler(this.axFiScn1_MultiStreamPropertySetting);
            // 
            // FormScan
            // 
            this.AcceptButton = this.ButtonScan;
            this.AutoScaleBaseSize = new System.Drawing.Size(5, 12);
            this.CancelButton = this.ButtonExit;
            this.ClientSize = new System.Drawing.Size(872, 670);
            this.Controls.Add(this.axFiScn1);
            this.Controls.Add(this.ButtonSerialNo);
            this.Controls.Add(this.ButtonPSIPDefault);
            this.Controls.Add(this.ButtonCheckADF);
            this.Controls.Add(this.statusBar1);
            this.Controls.Add(this.tabControl1);
            this.Controls.Add(this.ButtonReset);
            this.Controls.Add(this.ButtonExit);
            this.Controls.Add(this.ButtonScan);
            this.FormBorderStyle = System.Windows.Forms.FormBorderStyle.Fixed3D;
            this.MaximizeBox = false;
            this.Menu = this.mainMenu1;
            this.MinimizeBox = false;
            this.Name = "FormScan";
            this.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen;
            this.Text = "fiScanTest";
            this.Closed += new System.EventHandler(this.FormScan_Closed);
            this.Load += new System.EventHandler(this.FormScan_Load);
            this.tabControl1.ResumeLayout(false);
            this.Standard.ResumeLayout(false);
            this.groupBox3.ResumeLayout(false);
            this.groupBox3.PerformLayout();
            this.groupBox2.ResumeLayout(false);
            this.groupBox2.PerformLayout();
            this.groupBox1.ResumeLayout(false);
            this.groupBox1.PerformLayout();
            this.Image.ResumeLayout(false);
            this.groupBox5.ResumeLayout(false);
            this.groupBox4.ResumeLayout(false);
            this.groupBox4.PerformLayout();
            this.Image2.ResumeLayout(false);
            this.groupBox15.ResumeLayout(false);
            this.groupBox15.PerformLayout();
            this.Extention.ResumeLayout(false);
            this.groupBox7.ResumeLayout(false);
            this.groupBox7.PerformLayout();
            this.Endorser.ResumeLayout(false);
            this.groupBox6.ResumeLayout(false);
            this.groupBox6.PerformLayout();
            this.groupBox14.ResumeLayout(false);
            this.groupBox14.PerformLayout();
            this.Barcode.ResumeLayout(false);
            this.groupBox8.ResumeLayout(false);
            this.groupBox8.PerformLayout();
            this.groupBox9.ResumeLayout(false);
            this.groupBox9.PerformLayout();
            this.PatchCode.ResumeLayout(false);
            this.groupBox10.ResumeLayout(false);
            this.groupBox11.ResumeLayout(false);
            this.EdgeFiller.ResumeLayout(false);
            this.groupBox12.ResumeLayout(false);
            this.groupBox13.ResumeLayout(false);
            this.groupBox13.PerformLayout();
            this.Stream1.ResumeLayout(false);
            this.groupBox21.ResumeLayout(false);
            this.groupBox21.PerformLayout();
            this.groupBox20.ResumeLayout(false);
            this.groupBox20.PerformLayout();
            this.groupBox19.ResumeLayout(false);
            this.groupBox19.PerformLayout();
            this.groupBox18.ResumeLayout(false);
            this.groupBox18.PerformLayout();
            this.groupBox17.ResumeLayout(false);
            this.groupBox17.PerformLayout();
            this.groupBox16.ResumeLayout(false);
            this.groupBox16.PerformLayout();
            this.Stream2.ResumeLayout(false);
            this.groupBox27.ResumeLayout(false);
            this.groupBox27.PerformLayout();
            this.groupBox26.ResumeLayout(false);
            this.groupBox26.PerformLayout();
            this.groupBox25.ResumeLayout(false);
            this.groupBox25.PerformLayout();
            this.groupBox24.ResumeLayout(false);
            this.groupBox24.PerformLayout();
            this.groupBox23.ResumeLayout(false);
            this.groupBox23.PerformLayout();
            this.groupBox22.ResumeLayout(false);
            this.groupBox22.PerformLayout();
            this.Stream3.ResumeLayout(false);
            this.groupBox33.ResumeLayout(false);
            this.groupBox33.PerformLayout();
            this.groupBox32.ResumeLayout(false);
            this.groupBox32.PerformLayout();
            this.groupBox31.ResumeLayout(false);
            this.groupBox31.PerformLayout();
            this.groupBox30.ResumeLayout(false);
            this.groupBox30.PerformLayout();
            this.groupBox29.ResumeLayout(false);
            this.groupBox29.PerformLayout();
            this.groupBox28.ResumeLayout(false);
            this.groupBox28.PerformLayout();
            ((System.ComponentModel.ISupportInitialize)(this.axFiScn1)).EndInit();
            this.ResumeLayout(false);

        }
        #endregion

        public static FormScan CurrentInstance;

        //----------------------------------------------------------------------------
        //   Function    : The form was loaded
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void FormScan_Load(object sender, System.EventArgs e)
        {

            CurrentInstance = this;
            FormSplash frmSplash = new FormSplash();
            string lpFileName;
            string lpFilePath;

            frmSplash.Show();
            System.Windows.Forms.Application.DoEvents();
            
            ModuleScan.blnFjtwn= true;
            ModuleScan.blnOpenScanner = true;
            ModuleScan.strTwainDS = "";

            //Generation of a file path
            lpFileName = Application.ExecutablePath;
            lpFilePath = Application.StartupPath;

            if(lpFilePath != null && lpFilePath.Equals("") == false && 
                lpFileName != null && lpFileName.Equals("") == false)
            {
                ModuleScan.strFilePath = lpFilePath + "\\fiScanTest.ini";
                ModuleScan.strDirPath = lpFilePath;
                ModuleScan.strReportFile = lpFilePath + "\\Report.txt";
                ModuleScan.strOutputResult = lpFilePath + "\\OutputResult.txt";
            }
            else
            {
                ModuleScan.strFilePath = "";
                ModuleScan.strDirPath = "";
                ModuleScan.strReportFile = "";
                ModuleScan.strOutputResult = "";
            }
            
            //Scanner pretreatment
            OpenScanner();

            //Reading of a configuration file
            InitialFileRead();

            frmSplash.Close();
            frmSplash.Dispose();
        }

        //----------------------------------------------------------------------------
        //  Function    : The form was closed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void FormScan_Closed(object sender, System.EventArgs e)
        {
            int status;
            int ErrorCode;

            //Call "CloseScanner" method
            status = axFiScn1.CloseScanner(this.Handle.ToInt32());

            if(status == ModuleScan.RC_FAILURE)
            {
                ErrorCode = axFiScn1.ErrorCode;
                MessageBox.Show("The \"CloseScanner\" function became an error.\n\terror code : " + HexString(ErrorCode), "fiScanTest");
            }

            if(ModuleScan.blnFjtwn == true)
            {
                WriteScanINIFile();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The "Exit" menu was chosen
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemExit_Click(object sender, System.EventArgs e)
        {
            this.Close();
        }

        //----------------------------------------------------------------------------
        //   Function    : The "StartScan" menu was chosen
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemStartScan_Click(object sender, System.EventArgs e)
        {
            StartScan();
        }
        
        //----------------------------------------------------------------------------
        //   Function    : The "SelectSource" menu was chosen
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemSelectSource_Click(object sender, System.EventArgs e)
        {
            int status;
            int ErrorCode;

            //Call "SelectSource" method
            status = axFiScn1.SelectSource(this.Handle.ToInt32());

            //failure
            if(status == ModuleScan.RC_FAILURE)
            {
                ErrorCode = axFiScn1.ErrorCode;
                MessageBox.Show("A scanner was not able to be selected.\n\terror code : " + HexString(ErrorCode), "fiScanTest");
                this.ButtonScan.Enabled = false;
                this.MenuItemStartScan.Enabled = false;
                this.MenuItemClearPage.Enabled = false;
            }
            else if(status == ModuleScan.RC_SUCCESS)
            {
                //A scanner is reopened
                if(ModuleScan.blnOpenScanner == true)
                {
                    axFiScn1.CloseScanner(this.Handle.ToInt32());
                }
                ModuleScan.blnFjtwn = true;
                ModuleScan.blnOpenScanner = true;
                OpenScanner();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The "ClearPage" menu was chosen
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemClearPage_Click(object sender, System.EventArgs e)
        {
            int status;
            int ErrorCode;

            //Call "ClearPage" method
            status = axFiScn1.ClearPage(this.Handle.ToInt32());
            
            if(status == ModuleScan.RC_FAILURE)
            {
                ErrorCode = axFiScn1.ErrorCode;
                MessageBox.Show("The error occurred in discharge of a paper. Or, the ClearPage function is not supported.\n\terror code : " + HexString(ErrorCode), "fiScanTest");
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The "ShowSourceUI" menu was chosen
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemShowSourceUI_Click(object sender, System.EventArgs e)
        {
            if((this.cboPaperSupply.SelectedIndex == ModuleScan.ADF_A3CS) ||
                (this.cboPaperSupply.SelectedIndex == ModuleScan.ADF_DLCS) ||
                (this.cboPaperSupply.SelectedIndex == ModuleScan.ADF_B4CS) ||
                (this.cboPaperSupply.SelectedIndex == ModuleScan.ADF_CS))
            {
                if( this. MenuItemShowSourceUI.Checked == true) 
                {
                    this.MenuItemShowSourceUI.Checked = false;
                }
            }
            else
            {
                if (this.MenuItemShowSourceUI.Checked == true) 
                {
                    this.MenuItemShowSourceUI.Checked = false;
                }
                else
                {
                    this.MenuItemShowSourceUI.Checked = true;
                    this.MenuItemIndicator.Checked = true;
                }
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The "CloseSourceUI" menu was chosen
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemCloseSourceUI_Click(object sender, System.EventArgs e)
        {
            if(this.MenuItemCloseSourceUI.Checked == true)
            {
                this.MenuItemCloseSourceUI.Checked = false;
            }
            else
            {
                this.MenuItemCloseSourceUI.Checked = true;
            }
        
        }

        //----------------------------------------------------------------------------
        //  Function    : The "SourceCurrentScan" menu was chosen
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemSourceCurrentScan_Click(object sender, System.EventArgs e)
        {
            if(this.MenuItemSourceCurrentScan.Checked == true)
            {
                this.MenuItemSourceCurrentScan.Checked = false;
            }
            else
            {
                this.MenuItemSourceCurrentScan.Checked = true;
            }
            this.MenuItemTWAINTemplate.Enabled = this.MenuItemSourceCurrentScan.Checked;
        }

        //----------------------------------------------------------------------------
        //  Function    : The "SilentMode" menu was chosen
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemSilentMode_Click(object sender, System.EventArgs e)
        {
            if(this.MenuItemSilentMode.Checked == true)
            {
                this.MenuItemSilentMode.Checked = false;
            }
            else
            {
                this.MenuItemSilentMode.Checked = true;
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The "Report->OFF" menu was chosen
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemReportOFF_Click(object sender, System.EventArgs e)
        {
            this.MenuItemReportOFF.Checked = true;
            this.MenuItemReportDisplay.Checked = false;
            this.MenuItemReportFile.Checked = false;
            this.MenuItemReportBoth.Checked = false;
            ModuleScan.intReport = 0;
        }

        //----------------------------------------------------------------------------
        //  Function    : The "Report->Display" menu was chosen
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemReportDisplay_Click(object sender, System.EventArgs e)
        {
            this.MenuItemReportOFF.Checked = false;
            this.MenuItemReportDisplay.Checked = true;
            this.MenuItemReportFile.Checked = false;
            this.MenuItemReportBoth.Checked = false;
            ModuleScan.intReport = 1;
        }

        //----------------------------------------------------------------------------
        //  Function    : The "Report->File" menu was chosen
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemReportFile_Click(object sender, System.EventArgs e)
        {
            this.MenuItemReportOFF.Checked = false;
            this.MenuItemReportDisplay.Checked = false;
            this.MenuItemReportFile.Checked = true;
            this.MenuItemReportBoth.Checked = false;
            ModuleScan.intReport = 2;
        }

        //----------------------------------------------------------------------------
        //  Function    : The "Report->Display&File" menu was chosen
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemReportBoth_Click(object sender, System.EventArgs e)
        {
            this.MenuItemReportOFF.Checked = false;
            this.MenuItemReportDisplay.Checked = false;
            this.MenuItemReportFile.Checked = false;
            this.MenuItemReportBoth.Checked = true;
            ModuleScan.intReport = 3;
        }

        //----------------------------------------------------------------------------
        //  Function    : The "SoftIPC Template..." menu was chosen
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemSIPCTemplate_Click(object sender, System.EventArgs e)
        {
            FormSoftIPC frmSoftIPC = new FormSoftIPC();
            frmSoftIPC.ShowDialog();
        }

        //----------------------------------------------------------------------------
        //  Function    : The "TWAIN Template..." menu was chosen
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemTWAINTemplate_Click(object sender, System.EventArgs e)
        {
            FormTWAIN frmTWAIN = new FormTWAIN();
            frmTWAIN.ShowDialog();
        }

        //----------------------------------------------------------------------------
        //  Function    : The "Version..." menu was chosen
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemVersion_Click(object sender, System.EventArgs e)
        {
            FormAbout frmAbout = new FormAbout();
            frmAbout.ShowDialog();
        }

        //----------------------------------------------------------------------------
        //  Function    : The "Scan" button was pushed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void ButtonScan_Click(object sender, System.EventArgs e)
        {
            this.StartScan();
        }

        //----------------------------------------------------------------------------
        //  Function    : The "Exit" button was pushed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void ButtonExit_Click(object sender, System.EventArgs e)
        {
            this.Close();
        }

        //----------------------------------------------------------------------------
        //  Function    : The "Reset" button was pushed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void ButtonReset_Click(object sender, System.EventArgs e)
        {
            this.DefaultSet();
        }

        //----------------------------------------------------------------------------
        //  Function    : Scanning is started
        //  Argument    : Nothing
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void StartScan()
        {
            int status;
            int ErrorCode;
            FormCancelScan frmCancelScan = new FormCancelScan();

            //A scanning parameter is set as scanner control.
            ScanModeSet();

            frmCancelScan.StartPosition = FormStartPosition.Manual;
            frmCancelScan.Top = this.Top;
            frmCancelScan.Left = this.Left + this.Width;
            frmCancelScan.Owner = this;
            frmCancelScan.Show();

            //Scanning start
            status = axFiScn1.StartScan(this.Handle.ToInt32());

            //failure
            if(status == ModuleScan.RC_FAILURE)
            {
                ErrorCode = axFiScn1.ErrorCode;
                MessageBox.Show("The scanning error occurred.\n\terror code : " + HexString(ErrorCode), "fiScanTest");
                this.statusBar1.Text = axFiScn1.PageCount + "sheets were scanned.";
                if (ErrorCode == 0x00000002)
                {
                    if (resultList.Count > 0)
                    {
                        FormResultOfDetect frmResultOfDetect = new FormResultOfDetect();
                        frmResultOfDetect.resultArray = (ArrayList)resultList.Clone();
                        frmResultOfDetect.InsertResultOfDetect();
                        frmResultOfDetect.ShowDialog();
                    }
                }
                resultList.Clear();
            }
            else if( status == ModuleScan.RC_CANCEL)
            {
                MessageBox.Show("The user canceled scanning.\nOr the error which cannot continue scanning was detected.", "fiScanTest");
                this.statusBar1.Text = axFiScn1.PageCount + "sheets were scanned.";
                resultList.Clear();
            }
            else
            {
                if (resultList.Count > 0)
                {
                    FormResultOfDetect frmResultOfDetect = new FormResultOfDetect();
                    frmResultOfDetect.resultArray = (ArrayList)resultList.Clone();
                    frmResultOfDetect.InsertResultOfDetect();
                    frmResultOfDetect.ShowDialog();
                    resultList.RemoveRange(0, resultList.Count);
                }
                this.statusBar1.Text = axFiScn1.PageCount + "sheets were scanned.";
            }

            //Update of FileCounter
            this.txtFileCounter.Text = axFiScn1.FileCounter.ToString();
            this.txtFileCounter1.Text = axFiScn1.FileCounter1.ToString();
            this.txtFileCounter2.Text = axFiScn1.FileCounter2.ToString();
            this.txtFileCounter3.Text = axFiScn1.FileCounter3.ToString();

            frmCancelScan.Close();
        }

        //----------------------------------------------------------------------------
        //  Function    : Pretreatment
        //  Argument    : Nothing
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        public void OpenScanner()
        {
            int status;
            int ErrorCode;

            //Call "OpenScanner" method
            status = axFiScn1.OpenScanner(this.Handle.ToInt32());
            if(status == ModuleScan.RC_FAILURE)
            {
                ErrorCode = axFiScn1.ErrorCode;
                MessageBox.Show("The \"OpenScanner\" function became an error.\n\terror code : " + HexString(ErrorCode), "fiScanTest");
                ModuleScan.blnFjtwn = false;
                ModuleScan.blnOpenScanner = false;
            }
            else if(status == ModuleScan.RC_NOT_DS_FJTWAIN)
            {
                MessageBox.Show("It is not \"TWAIN Driver.\"", "fiScanTest");
                ModuleScan.blnFjtwn = false;
            }

            //A "Scan" button is disabled when "OpenScanner" failed.
            if( ModuleScan.blnOpenScanner == false)
            {
                this.ButtonScan.Enabled = false;
                this.MenuItemStartScan.Enabled = false;
                this.MenuItemClearPage.Enabled = false;
            }
            else
            {
                this.ButtonScan.Enabled = true;
                this.MenuItemStartScan.Enabled = true;
                this.MenuItemClearPage.Enabled = true;
            }

            //An image scanner name is displayed on a title.
            if(axFiScn1.ImageScanner.Length > 0)
            {
                this.Text = "Visual C# Sample fiScanTest(" + axFiScn1.ImageScanner + ")";
            }
            else
            {
                this.Text = "Visual C# Sample fiScanTest";
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The hexadecimal number character string of 8 figures is
        //                generated.
        //  Argument    : ErrorCode
        //  Return code : String
        //----------------------------------------------------------------------------
        public string HexString(int ErrorCode)
        {
            string strWork;
            strWork = ErrorCode.ToString("X");
            if(strWork.Length == 1)
            {
                strWork = "0x0000000" + strWork;
            }
            else if(strWork.Length == 2)
            {
                strWork = "0x000000" + strWork;
            }
            else if(strWork.Length == 3)
            {
                strWork = "0x00000" + strWork;
            }
            else if(strWork.Length == 4)
            {
                strWork = "0x0000" + strWork;
            }
            else if(strWork.Length == 5)
            {
                strWork = "0x000" + strWork;
            }
            else if(strWork.Length == 6)
            {
                strWork = "0x00" + strWork;
            }
            else if(strWork.Length == 7)
            {
                strWork = "0x0" + strWork;
            }
            else 
            {
                strWork = "0x" + strWork;
            }
            return strWork;
        }

        //----------------------------------------------------------------------------
        //  Function    : The parameter information set as scanner control
        //  Argument    : Nothing
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void ScanModeSet()
        {
            //Scanner parameter setting
            this.axFiScn1.Outline = ModuleScan.NONE;
            this.axFiScn1.ScanTo = (short)this.cboScanTo.SelectedIndex;
            this.axFiScn1.FileType = (short)this.cboFileType.SelectedIndex;
            this.axFiScn1.FileName = this.txtFileName.Text;
            this.axFiScn1.Overwrite = (short)this.cboOverwrite.SelectedIndex;
            this.axFiScn1.FileCounter = System.Int32.Parse(this.txtFileCounter.Text);
            this.axFiScn1.CompressionType = (short)this.cboCompType.SelectedIndex;
            this.axFiScn1.JpegQuality = (short)this.cboJpegQuality.SelectedIndex;
            this.axFiScn1.ScanMode = (short)this.cboScanMode.SelectedIndex;
            this.axFiScn1.ScanContinue = this.chkScanContinue.Checked;
            this.axFiScn1.ScanContinueMode = (short)this.cboScanContinueMode.SelectedIndex;
            this.axFiScn1.PixelType = (short)this.cboPixelType.SelectedIndex;
            this.axFiScn1.AutomaticColorSensitivity = short.Parse(this.txtAutomaticColorSensitivity.Text);
            this.axFiScn1.AutomaticColorBackground = (short)this.cboAutomaticColorBackground.SelectedIndex;
            if (this.cboResolution.SelectedIndex == 8)
            {
                this.axFiScn1.Resolution = ModuleScan.RS_1200;
            }
            else if (this.cboResolution.SelectedIndex == 9)
            {
                this.axFiScn1.Resolution = ModuleScan.RS_CUSTM;
            }
            else
            {
                this.axFiScn1.Resolution = (short)this.cboResolution.SelectedIndex;
            }
            this.axFiScn1.CustomResolution = short.Parse(this.txtCustomResolution.Text);
            this.axFiScn1.Brightness = short.Parse(this.txtBrightness.Text);
            this.axFiScn1.Contrast = short.Parse(this.txtContrast.Text);
            this.axFiScn1.Threshold = short.Parse(this.txtThreshold.Text);
            this.axFiScn1.Reverse = this.chkReverse.Checked;
            this.axFiScn1.Mirroring = this.chkMirroring.Checked;
            this.axFiScn1.Rotation = (short)this.cboRotation.SelectedIndex;
            this.axFiScn1.AutomaticRotateMode = (short)(this.cboAutomaticRotateMode.SelectedIndex);
            this.axFiScn1.Background = (short)this.cboBackground.SelectedIndex;
            if(this.cboPixelType.SelectedIndex == ModuleScan.PIXEL_RGB
                && this.cboOutline.SelectedIndex > 3)
            {
                this.axFiScn1.Outline = (short)(this.cboOutline.SelectedIndex + 1);
            }
            else
            {
                this.axFiScn1.Outline = (short)this.cboOutline.SelectedIndex;
            }
            this.axFiScn1.Halftone = (short)this.cboHalftone.SelectedIndex;
            this.axFiScn1.HalftoneFile = this.txtHalftoneFile.Text;
            this.axFiScn1.Gamma = (short)this.cboGamma.SelectedIndex;
            this.axFiScn1.GammaFile = this.txtGammaFile.Text;

            float customGammaValue;
            try
            {
                customGammaValue = float.Parse(txtCustomGamma.Text);
            }
            catch (FormatException)
            {
                customGammaValue = float.Parse(txtCustomGamma.Text.Replace('.', ','));
            }
            this.axFiScn1.CustomGamma = customGammaValue;

            this.axFiScn1.AutoSeparation = (short)this.cboAutoSeparation.SelectedIndex;
            this.axFiScn1.SEE = (short)this.cboSEE.SelectedIndex;
            int iPaperSupply = 0;
            if (this.cboPaperSupply.SelectedIndex >= 8 && this.cboPaperSupply.SelectedIndex <= 47)
            {
                iPaperSupply = 2;
            }
            this.axFiScn1.PaperSupply = (short)(this.cboPaperSupply.SelectedIndex + iPaperSupply);
            this.axFiScn1.ScanCount =short.Parse(this.txtScanCount.Text);
            if(this.cboPaperSize.SelectedIndex == ModuleScan.PSIZE_INDEX_CUSTOM)
            {
                this.axFiScn1.PaperSize = ModuleScan.PSIZE_DATA_CUSTOM;
            }
            else
            {
                this.axFiScn1.PaperSize = (short)this.cboPaperSize.SelectedIndex;
            }
            this.axFiScn1.LongPage = this.chkLongPage.Checked;
            this.axFiScn1.Orientation = (short)this.cboOrientation.SelectedIndex;

            float customPaperWidthValue;
            try
            {
                customPaperWidthValue = float.Parse(txtCustomPaperWidth.Text);
            }
            catch (FormatException)
            {
                customPaperWidthValue = float.Parse(txtCustomPaperWidth.Text.Replace('.', ','));
            }
            this.axFiScn1.CustomPaperWidth = customPaperWidthValue;
            float customPaperLengthValue;
            try
            {
                customPaperLengthValue = float.Parse(txtCustomPaperLength.Text);
            }
            catch (FormatException)
            {
                customPaperLengthValue = float.Parse(txtCustomPaperLength.Text.Replace('.', ','));
            }
            this.axFiScn1.CustomPaperLength = customPaperLengthValue;

            float regionLeftValue;
            try
            {
                regionLeftValue = float.Parse(txtRegionLeft.Text);
            }
            catch (FormatException)
            {
                regionLeftValue = float.Parse(txtRegionLeft.Text.Replace('.', ','));
            }
            this.axFiScn1.RegionLeft = regionLeftValue;

            float regionTopValue;
            try
            {
                regionTopValue = float.Parse(txtRegionTop.Text);
            }
            catch (FormatException)
            {
                regionTopValue = float.Parse(txtRegionTop.Text.Replace('.', ','));
            }
            this.axFiScn1.RegionTop = regionTopValue;

            float regionWidthValue;
            try
            {
                regionWidthValue = float.Parse(txtRegionWidth.Text);
            }
            catch (FormatException)
            {
                regionWidthValue = float.Parse(txtRegionWidth.Text.Replace('.', ','));
            }
            this.axFiScn1.RegionWidth = regionWidthValue;

            float regionLengthValue;
            try
            {
                regionLengthValue = float.Parse(txtRegionLength.Text);
            }
            catch (FormatException)
            {
                regionLengthValue = float.Parse(txtRegionLength.Text.Replace('.', ','));
            }
            this.axFiScn1.RegionLength = regionLengthValue;

            this.axFiScn1.UndefinedScanning = this.chkUndefinedScanning.Checked;
            this.axFiScn1.BackgroundColor = (short)this.cboBackgroundColor.SelectedIndex;
            this.axFiScn1.ThresholdCurve = (short)this.cboThresholdCurve.SelectedIndex;
            this.axFiScn1.NoiseRemoval = (short)this.cboNoiseRemoval.SelectedIndex;
            this.axFiScn1.PreFiltering = this.chkPreFiltering.Checked;
            this.axFiScn1.Smoothing = this.chkSmoothing.Checked;
            this.axFiScn1.Endorser = this.chkEndorser.Checked;
            this.axFiScn1.EndorserDialog = (short)this.cboEndorserDialog.SelectedIndex;

            float endorserOffsetValue;
            try
            {
                endorserOffsetValue = float.Parse(txtEndorserOffset.Text);
            }
            catch (FormatException)
            {
                endorserOffsetValue = float.Parse(txtEndorserOffset.Text.Replace('.', ','));
            }
            this.axFiScn1.EndorserOffset = endorserOffsetValue;

            this.axFiScn1.EndorserString = this.txtEndorserString.Text;
            this.axFiScn1.EndorserCounter = System.Int32.Parse(this.txtEndorserCounter.Text);
            if(this.cboEndorserDirection.SelectedIndex == 1)
            {
                this.axFiScn1.EndorserDirection = 3;
            }
            else
            {
                this.axFiScn1.EndorserDirection = 1;
            }
            this.axFiScn1.EndorserCountStep = (short)this.cboEndorserCountStep.SelectedIndex;
            this.axFiScn1.EndorserCountDirection = (short)this.cboEndorserCountDirection.SelectedIndex;
            this.axFiScn1.EndorserFont = (short)this.cboEndorserFont.SelectedIndex;
            this.axFiScn1.SynchronizationDigitalEndorser = this.chkSynchronizationDigitalEndorser.Checked;
            this.axFiScn1.DigitalEndorser = this.chkDigitalEndorser.Checked;

            float endorserDigitalXOffsetValue;
            try
            {
                endorserDigitalXOffsetValue = float.Parse(txtDigitalEndorserXOffset.Text);
            }
            catch (FormatException)
            {
                endorserDigitalXOffsetValue = float.Parse(txtDigitalEndorserXOffset.Text.Replace('.', ','));
            }
            this.axFiScn1.DigitalEndorserXOffset = endorserDigitalXOffsetValue;
            float endorserDigitalYOffsetValue;
            try
            {
                endorserDigitalYOffsetValue = float.Parse(txtDigitalEndorserYOffset.Text);
            }
            catch (FormatException)
            {
                endorserDigitalYOffsetValue = float.Parse(txtDigitalEndorserYOffset.Text.Replace('.', ','));
            }
            this.axFiScn1.DigitalEndorserYOffset = endorserDigitalYOffsetValue;
            this.axFiScn1.DigitalEndorserString = this.txtDigitalEndorserString.Text;
            this.axFiScn1.DigitalEndorserCounter = System.Int32.Parse(this.txtDigitalEndorserCounter.Text);
            this.axFiScn1.DigitalEndorserDirection = (short)this.cboDigitalEndorserDirection.SelectedIndex;
            this.axFiScn1.DigitalEndorserCountStep = (short)this.cboDigitalEndorserCountStep.SelectedIndex;
            this.axFiScn1.DigitalEndorserCountDirection = (short)this.cboDigitalEndorserCountDirection.SelectedIndex;

            this.axFiScn1.JobControl = (short)this.cboJobControl.SelectedIndex;
            this.axFiScn1.Binding = (short)this.cboBinding.SelectedIndex;
            this.axFiScn1.MultiFeed = (short)this.cboMultiFeed.SelectedIndex;
            if(this.cboFilter.SelectedIndex == 7)
            {
                this.axFiScn1.Filter = 99;
            }
            else if(cboFilter.SelectedIndex == 8)
            {
                this.axFiScn1.Filter = 100;
            }
            else if(this.cboFilter.SelectedIndex == 9)
            {
                this.axFiScn1.Filter = 101;
            }
            else if(this.cboFilter.SelectedIndex == 10)
            {
                this.axFiScn1.Filter = 102;
            }
            else
            {
                this.axFiScn1.Filter = (short)this.cboFilter.SelectedIndex;
            }
            this.axFiScn1.FilterSaturationSensitivity = short.Parse(this.txtFilterSaturationSensitivity.Text);
            this.axFiScn1.SkipWhitePage = short.Parse(this.txtSkipWhitePage.Text);
            this.axFiScn1.SkipBlackPage = short.Parse(this.txtSkipBlackPage.Text);
            this.axFiScn1.AutoBorderDetection = this.chkAutoBorderDetection.Checked;
            this.axFiScn1.ShowSourceUI = this.MenuItemShowSourceUI.Checked;
            this.axFiScn1.CloseSourceUI = this.MenuItemCloseSourceUI.Checked;
            this.axFiScn1.SourceCurrentScan = this.MenuItemSourceCurrentScan.Checked;
            this.axFiScn1.SilentMode = this.MenuItemSilentMode.Checked;
            this.axFiScn1.Report = (short)ModuleScan.intReport;
            this.axFiScn1.ReportFile = ModuleScan.strReportFile;
            this.axFiScn1.Indicator = MenuItemIndicator.Checked;
            this.axFiScn1.Highlight = short.Parse(txtHighlight.Text);
            this.axFiScn1.Shadow = short.Parse(txtShadow.Text);
            this.axFiScn1.OverScan = (short)this.cboOverScan.SelectedIndex;
            this.axFiScn1.Unit = (short)this.cboUnit.SelectedIndex;
            this.axFiScn1.AutoBright = this.chkAutoBright.Checked;
            this.axFiScn1.AutomaticSenseMedium = this.chkAutomaticSenseMedium.Checked;
            this.axFiScn1.BackgroundSmoothing = (short)this.cboBackgroundSmoothing.SelectedIndex;
            this.axFiScn1.BlankPageSkip = short.Parse(this.txtBlankPageSkip.Text);
            this.axFiScn1.JobControlMode = (short)this.cboJobControlMode.SelectedIndex;
            this.axFiScn1.DTCSensitivity = short.Parse(this.txtDTCSensitivity.Text);
            this.axFiScn1.BackgroundThreshold = short.Parse(this.txtBackgroundThreshold.Text);
            this.axFiScn1.CharacterThickness = short.Parse(this.txtCharacterThickness.Text);
            this.axFiScn1.SDTCSensitivity = short.Parse(this.txtSDTCSensitivity.Text);
            this.axFiScn1.NoiseRejection = short.Parse(this.txtNoiseRejection.Text);
            this.axFiScn1.ADTCThreshold = short.Parse(this.txtADTCThreshold.Text);
            this.axFiScn1.FadingCompensation = short.Parse(this.txtFadingCompensation.Text);
            this.axFiScn1.sRGB = this.chksRGB.Checked;
            this.axFiScn1.PatternRemoval = (short)this.cboPatternRemoval.SelectedIndex;
            this.axFiScn1.Sharpness = (short)this.cboSharpness.SelectedIndex;
            this.axFiScn1.PunchHoleRemoval = (short)this.cboPunchHoleRemoval.SelectedIndex;
            this.axFiScn1.PunchHoleRemovalMode = (short)this.cboPunchHoleRemovalMode.SelectedIndex;
            this.axFiScn1.VerticalLineReduction = this.chkVerticalLineReduction.Checked;
            this.axFiScn1.AIQCNotice = this.chkAIQCNotice.Checked;
            this.axFiScn1.MultiFeedNotice = this.chkMultiFeedNotice.Checked;
            this.axFiScn1.BackgroundSmoothness = short.Parse(this.txtBackgroundSmoothness.Text);
            this.axFiScn1.CropPriority = (short)this.cboCropPriority.SelectedIndex;
            this.axFiScn1.Deskew = (short)this.cboDeskew.SelectedIndex;
            this.axFiScn1.DeskewBackground = (short)this.cboDeskewBackground.SelectedIndex;
            this.axFiScn1.DeskewMode = (short)this.cboDeskewMode.SelectedIndex;
            this.axFiScn1.BlankPageSkipMode = (short)this.cboBlankPageSkipMode.SelectedIndex;
            this.axFiScn1.BlankPageSkipTabPage = (short)this.cboBlankPageSkipTabPage.SelectedIndex;
            this.axFiScn1.BlankPageIgnoreAreaSize = short.Parse(this.txtBlankPageIgnoreAreaSize.Text);
            float cropMarginSize;
            try
            {
                cropMarginSize = float.Parse(txtCropMarginSize.Text);
            }
            catch (FormatException)
            {
                cropMarginSize = float.Parse(txtCropMarginSize.Text.Replace('.', ','));
            }
            this.axFiScn1.CropMarginSize = cropMarginSize;
            this.axFiScn1.SelectOutputSize = (short)this.cboSelectOutputSize.SelectedIndex;
            float multiFeedModeChangeSize;
            try
            {
                multiFeedModeChangeSize = float.Parse(txtMultiFeedModeChangeSize.Text);
            }
            catch (FormatException)
            {
                multiFeedModeChangeSize = float.Parse(txtMultiFeedModeChangeSize.Text.Replace('.', ','));
            }
            this.axFiScn1.MultiFeedModeChangeSize = multiFeedModeChangeSize;
            this.axFiScn1.BlankPageNotice = (short)this.cboBlankPageNotice.SelectedIndex;
            this.axFiScn1.HwCompression = this.chkHwCompression.Checked;
            this.axFiScn1.LengthDetection = (short)this.cboLengthDetection.SelectedIndex;
            this.axFiScn1.FrontBackMergingEnabled = this.chkFrontBackMergingEnabled.Checked;
            this.axFiScn1.FrontBackMergingLocation = (short)this.cboFrontBackMergingLocation.SelectedIndex;
            if (this.cboFrontBackMergingRotation.SelectedIndex == ModuleScan.FBMR_INDEX_R180)
            {
                this.axFiScn1.FrontBackMergingRotation = (short)ModuleScan.FBMR_R180;
            }
            else
            {
                this.axFiScn1.FrontBackMergingRotation = (short)this.cboFrontBackMergingRotation.SelectedIndex;
            }
            this.axFiScn1.FrontBackMergingTarget = (short)this.cboFrontBackMergingTarget.SelectedIndex;
            if (this.cboFrontBackMergingTargetMode.SelectedIndex == ModuleScan.FBMTM_INDEX_CUSTOM)
            {
                this.axFiScn1.FrontBackMergingTargetMode = (short)ModuleScan.FBMTM_CUSTOM;
            }
            else if (this.cboFrontBackMergingTargetMode.SelectedIndex == ModuleScan.FBMTM_INDEX_CARDSIZE)
            {
                this.axFiScn1.FrontBackMergingTargetMode = (short)ModuleScan.FBMTM_CARDSIZE;
            }
            float frontBackMergingTargetSize;
            try
            {
                frontBackMergingTargetSize = float.Parse(txtFrontBackMergingTargetSize.Text);
            }
            catch (FormatException)
            {
                frontBackMergingTargetSize = float.Parse(txtFrontBackMergingTargetSize.Text.Replace('.', ','));
            }
            this.axFiScn1.FrontBackMergingTargetSize = frontBackMergingTargetSize;
            this.axFiScn1.DivideLongPage = this.chkDivideLongPage.Checked;
            this.axFiScn1.CharacterExtraction = this.chkCharacterExtraction.Checked;
            int CharacterExtractionMethod = 0;
            if (this.chkReversedTypeExtraction.Checked)
            {
                CharacterExtractionMethod += ModuleScan.CEM_REVERSEDTYPEEXTRACTION;
            }
            if (this.chkHalftoneRemoval.Checked)
            {
                CharacterExtractionMethod += ModuleScan.CEM_HALFTONEREMOVAL;
            }
            if (this.chkStampRemoval.Checked)
            {
                CharacterExtractionMethod += ModuleScan.CEM_STAMPREMOVAL;
            }
            this.axFiScn1.CharacterExtractionMethod = CharacterExtractionMethod;
            this.axFiScn1.SimpleSlicePatternRemoval = this.chkSimpleSlicePatternRemoval.Checked;
            this.axFiScn1.FrontBackDetection = (short)this.cboFrontBackDetection.SelectedIndex;
            this.axFiScn1.PaperProtection = (short)this.cboPaperProtection.SelectedIndex;

            this.axFiScn1.ColorReproduction = (short)this.cboColorReproduction.SelectedIndex;
            this.axFiScn1.ColorReproductionBrightness = short.Parse(this.txtColorReproductionBrightness.Text);
            this.axFiScn1.ColorReproductionContrast = short.Parse(this.txtColorReproductionContrast.Text);
            this.axFiScn1.ColorReproductionHighlight = short.Parse(txtColorReproductionHighlight.Text);
            this.axFiScn1.ColorReproductionShadow = short.Parse(txtColorReproductionShadow.Text);
            float colorReproductionCustomGammaValue;
            try
            {
                colorReproductionCustomGammaValue = float.Parse(txtColorReproductionCustomGamma.Text);
            }
            catch (FormatException)
            {
                colorReproductionCustomGammaValue = float.Parse(txtColorReproductionCustomGamma.Text.Replace('.', ','));
            }
            this.axFiScn1.ColorReproductionCustomGamma = colorReproductionCustomGammaValue;
            this.axFiScn1.AdjustRGB = this.chkAdjustRGB.Checked;
            this.axFiScn1.AdjustRGBR = short.Parse(txtAdjustRGBR.Text);
            this.axFiScn1.AdjustRGBG = short.Parse(txtAdjustRGBG.Text);
            this.axFiScn1.AdjustRGBB = short.Parse(txtAdjustRGBB.Text);

            this.axFiScn1.BarcodeDetection = this.chkBarcodeDetection.Checked;
            this.axFiScn1.BarcodeDirection = (short)this.cboBarcodeDirection.SelectedIndex;
            float barcodeLeft;
            try
            {
                barcodeLeft = float.Parse(txtBarcodeRegionLeft.Text);
            }
            catch (FormatException)
            {
                barcodeLeft = float.Parse(txtBarcodeRegionLeft.Text.Replace('.', ','));
            }
            this.axFiScn1.BarcodeRegionLeft = barcodeLeft;
            float barcodeTop;
            try
            {
                barcodeTop = float.Parse(txtBarcodeRegionTop.Text);
            }
            catch (FormatException)
            {
                barcodeTop = float.Parse(txtBarcodeRegionTop.Text.Replace('.', ','));
            }
            this.axFiScn1.BarcodeRegionTop = barcodeTop;
            float barcodeWidth;
            try
            {
                barcodeWidth = float.Parse(txtBarcodeRegionWidth.Text);
            }
            catch (FormatException)
            {
                barcodeWidth = float.Parse(txtBarcodeRegionWidth.Text.Replace('.', ','));
            }
            this.axFiScn1.BarcodeRegionWidth = barcodeWidth;
            float barcodeLength;
            try
            {
                barcodeLength = float.Parse(txtBarcodeRegionLength.Text);
            }
            catch (FormatException)
            {
                barcodeLength = float.Parse(txtBarcodeRegionLength.Text.Replace('.', ','));
            }
            this.axFiScn1.BarcodeRegionLength = barcodeLength;
            int barcodeType = 0;
            if (this.chkEAN8.Checked) 
            {
                barcodeType += ModuleScan.BA_EAN8;
            }
            if (this.chkEAN13.Checked) 
            {
                barcodeType += ModuleScan.BA_EAN13;
            }
            if (this.chkCode3of9.Checked) 
            {
                barcodeType += ModuleScan.BA_CODE3OF9;
            }
            if (this.chkCode128.Checked) 
            {
                barcodeType += ModuleScan.BA_CODE128;
            }
            if (this.chkITF.Checked) 
            {
                barcodeType += ModuleScan.BA_ITF;
            }
            if (this.chkUPCA.Checked) 
            {
                barcodeType += ModuleScan.BA_UPCA;
            }
            if (this.chkCodabar.Checked) 
            {
                barcodeType += ModuleScan.BA_CODABAR;
            }
            if (this.chkPDF417.Checked) 
            {
                barcodeType += ModuleScan.BA_PDF417;
            }
            if (this.chkQRCode.Checked) 
            {
                barcodeType += ModuleScan.BA_QRCODE;
            }
            if (this.chkDataMatrix.Checked)
            {
                barcodeType += ModuleScan.BA_DATAMATRIX;
            }
            if (this.chkAztecCode.Checked)
            {
                barcodeType += ModuleScan.BA_AZTECCODE;
            }
            this.axFiScn1.BarcodeType = barcodeType;
            this.axFiScn1.BarcodeMaxSearchPriorities = short.Parse(this.txtBarcodeMaxSearchPriorities.Text);
            this.axFiScn1.BarcodeNotDetectionNotice = this.chkBarcodeNotDetectionNotice.Checked;

            this.axFiScn1.PatchCodeDetection = this.chkPatchCodeDetection.Checked;
            this.axFiScn1.PatchCodeDirection = (short)this.cboPatchCodeDirection.SelectedIndex;
            int patchCodeType = 0;
            if (this.chkPatch1.Checked) 
            {
                patchCodeType += ModuleScan.PA_PATCH1;
            }
            if (this.chkPatch2.Checked) 
            {
                patchCodeType += ModuleScan.PA_PATCH2;
            }
            if (this.chkPatch3.Checked) 
            {
                patchCodeType += ModuleScan.PA_PATCH3;
            }
            if (this.chkPatch4.Checked) 
            {
                patchCodeType += ModuleScan.PA_PATCH4;
            }
            if (this.chkPatch6.Checked) 
            {
                patchCodeType += ModuleScan.PA_PATCH6;
            }
            if (this.chkPatchT.Checked) 
            {
                patchCodeType += ModuleScan.PA_PATCHT;
            }
            this.axFiScn1.PatchCodeType = patchCodeType;

            this.axFiScn1.EdgeFiller = (short)this.cboEdgeFiller.SelectedIndex;
            float edgeTop;
            try
            {
                edgeTop = float.Parse(txtEdgeFillerTop.Text);
            }
            catch (FormatException)
            {
                edgeTop = float.Parse(txtEdgeFillerTop.Text.Replace('.', ','));
            }
            this.axFiScn1.EdgeFillerTop = edgeTop;
            float edgeBottom;
            try
            {
                edgeBottom = float.Parse(txtEdgeFillerBottom.Text);
            }
            catch (FormatException)
            {
                edgeBottom = float.Parse(txtEdgeFillerBottom.Text.Replace('.', ','));
            }
            this.axFiScn1.EdgeFillerBottom = edgeBottom;
            float edgeLeft;
            try
            {
                edgeLeft = float.Parse(txtEdgeFillerLeft.Text);
            }
            catch (FormatException)
            {
                edgeLeft = float.Parse(txtEdgeFillerLeft.Text.Replace('.', ','));
            }
            this.axFiScn1.EdgeFillerLeft = edgeLeft;
            float edgeRight;
            try
            {
                edgeRight = float.Parse(txtEdgeFillerRight.Text);
            }
            catch (FormatException)
            {
                edgeRight = float.Parse(txtEdgeFillerRight.Text.Replace('.', ','));
            }
            this.axFiScn1.EdgeFillerRight = edgeRight;
            this.axFiScn1.EdgeRepair = (bool)this.chkEdgeRepair.Checked;

            this.axFiScn1.MultiStreamMode = (short)this.cboMultiStreamMode.SelectedIndex;
            this.axFiScn1.MultiStreamFileNameMode = (short)this.cboMultiStreamFileNameMode.SelectedIndex;
            this.axFiScn1.MultiStreamDefaultValueMode = (short)this.cboMultiStreamDefaultValueMode.SelectedIndex;
            this.axFiScn1.FileCounter1 = System.Int32.Parse(this.txtFileCounter1.Text);
            this.axFiScn1.FileName1 = this.txtFileName1.Text;
            this.axFiScn1.FileCounter2 = System.Int32.Parse(this.txtFileCounter2.Text);
            this.axFiScn1.FileName2 = this.txtFileName2.Text;
            this.axFiScn1.FileCounter3 = System.Int32.Parse(this.txtFileCounter3.Text);
            this.axFiScn1.FileName3 = this.txtFileName3.Text;

            this.axFiScn1.AutoProfile = (short)formAutoProfile.cboAutoProfile.SelectedIndex;
            this.axFiScn1.AutoProfileSensitivity = short.Parse(formAutoProfile.txtAutoProfileSensitivity.Text);

            this.axFiScn1.CarrierSheetClippingMode = (short)ModuleScan.intCarrierSheetClippingMode;
            this.axFiScn1.ManualFeedMode = (short)(this.cboManualFeedMode.SelectedIndex + 1);

        }
        //----------------------------------------------------------------------------
        //  Function    : Reading of the parameter information stored in the ini file
        //  Argument    : Nothing
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void InitialFileRead()
        {
            int topWnd;
            int leftWnd;

            StringBuilder strWork;
            int rcl;

            if(ModuleScan.strFilePath == null || ModuleScan.strFilePath.Equals("") == true)
            {
                //A default value is used when reading of a ini file goes wrong.
                DefaultSet();
                return;
            }
            
            try
            {
                //Display position information on a dialog
                leftWnd = ModuleScan.GetPrivateProfileInt("Form", "Left", -1, ModuleScan.strFilePath);
                topWnd = ModuleScan.GetPrivateProfileInt("Form", "Top", -1, ModuleScan.strFilePath);
                if(topWnd != -1)
                {
                    this.Top = topWnd;
                }
                if(leftWnd != -1)
                {
                    this.Left = leftWnd;
                }

                //Read configuration parameter
                this.cboScanTo.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "ScanToType", ModuleScan.TYPE_FILE, ModuleScan.strFilePath);
                this.cboFileType.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "FileType", ModuleScan.FILE_TIF, ModuleScan.strFilePath);
                strWork = new StringBuilder(ModuleScan.MAX_PATH);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "FileName", "", strWork, ModuleScan.MAX_PATH, ModuleScan.strFilePath);
                if(rcl > 0)
                {
                    this.txtFileName.Text = strWork.ToString();
                }
                else
                {
                    this.txtFileName.Text = ModuleScan.strDirPath + "\\image#####";
                }
                this.cboOverwrite.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Overwrite", ModuleScan.OW_CONFIRM, ModuleScan.strFilePath);
                this.txtFileCounter.Text = ModuleScan.GetPrivateProfileInt("Scan", "FileCounter", 1, ModuleScan.strFilePath).ToString();
                this.cboCompType.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "CompressionType", ModuleScan.COMP_MMR, ModuleScan.strFilePath);
                this.cboJpegQuality.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "JpegQuality", ModuleScan.COMP_JPEG4, ModuleScan.strFilePath);
                this.cboScanMode.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "ScanMode", ModuleScan.SM_NORMAL, ModuleScan.strFilePath);
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "ScanContinue", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkScanContinue.Checked = true;
                }
                else
                {
                    this.chkScanContinue.Checked = false;
                }
                this.cboScanContinueMode.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "ScanContinueMode", 0, ModuleScan.strFilePath);
                this.cboPaperSupply.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "PaperSupply", ModuleScan.ADF, ModuleScan.strFilePath);
                this.txtScanCount.Text = ModuleScan.GetPrivateProfileInt("Scan", "ScanCount", -1, ModuleScan.strFilePath).ToString();
                this.cboPaperSize.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "PaperSize", ModuleScan.PSIZE_A4, ModuleScan.strFilePath);
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "LongPage", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkLongPage.Checked = true;
                }
                else
                {
                    this.chkLongPage.Checked = false;
                }
                this.cboOrientation.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Orientation", ModuleScan.PORTRAIT, ModuleScan.strFilePath);
                this.cboUnit.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Unit", 0, ModuleScan.strFilePath);
                strWork = new StringBuilder(10);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "CustomPaperWidth", "8.268", strWork, 10, ModuleScan.strFilePath);
                if (rcl > 0)
                {
                    this.txtCustomPaperWidth.Text = strWork.ToString();
                }
                else
                {
                    this.txtCustomPaperWidth.Text = "8.268";
                }
                strWork = new StringBuilder(10);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "CustomPaperLength", "11.693", strWork, 10, ModuleScan.strFilePath);
                if (rcl > 0)
                {
                    this.txtCustomPaperLength.Text = strWork.ToString();
                }
                else
                {
                    this.txtCustomPaperLength.Text = "11.693";
                }
                strWork = new StringBuilder(10);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "RegionLeft", "0", strWork, 10, ModuleScan.strFilePath);
                if(rcl > 0) 
                {
                    txtRegionLeft.Text = strWork.ToString();
                }
                else
                {
                    txtRegionLeft.Text = "0";
                }
                strWork = new StringBuilder(10);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "RegionTop", "0", strWork, 10, ModuleScan.strFilePath);
                if(rcl > 0) 
                {
                    txtRegionTop.Text = strWork.ToString();
                }
                else
                {
                    txtRegionTop.Text = "0";
                }
                strWork = new StringBuilder(10);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "RegionWidth", "0", strWork, 10, ModuleScan.strFilePath);
                if(rcl > 0) 
                {
                    txtRegionWidth.Text = strWork.ToString();
                }
                else
                {
                    txtRegionWidth.Text = "0";
                }
                strWork = new StringBuilder(10);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "RegionLength", "0", strWork, 10, ModuleScan.strFilePath);
                if(rcl > 0) 
                {
                    txtRegionLength.Text = strWork.ToString();
                }
                else
                {
                    txtRegionLength.Text = "0";
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "UndefinedScanning", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkUndefinedScanning.Checked = true;
                }
                else
                {
                    this.chkUndefinedScanning.Checked = false;
                }
                this.cboBackgroundColor.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "BackgroundColor", 0, ModuleScan.strFilePath);
                this.cboPixelType.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "PixelType", ModuleScan.PIXEL_BLACK_WHITE, ModuleScan.strFilePath);
                this.txtAutomaticColorSensitivity.Text = ModuleScan.GetPrivateProfileInt("Scan", "AutomaticColorSensitivity", 0, ModuleScan.strFilePath).ToString();
                this.cboAutomaticColorBackground.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "AutomaticColorBackground", 0, ModuleScan.strFilePath);
                this.cboResolution.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Resolution", ModuleScan.RS_300, ModuleScan.strFilePath);
                this.txtCustomResolution.Text = ModuleScan.GetPrivateProfileInt("Scan", "CustomResolution", 300, ModuleScan.strFilePath).ToString();
                this.txtBrightness.Text = ModuleScan.GetPrivateProfileInt("Scan", "Brightness", 128, ModuleScan.strFilePath).ToString();
                this.txtContrast.Text = ModuleScan.GetPrivateProfileInt("Scan", "Contrast", 128, ModuleScan.strFilePath).ToString();
                this.txtThreshold.Text = ModuleScan.GetPrivateProfileInt("Scan", "Threshold", 128, ModuleScan.strFilePath).ToString();
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Reverse", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkReverse.Checked = true;
                }
                else
                {
                    this.chkReverse.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Mirroring", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkMirroring.Checked = true;
                }
                else
                {
                    this.chkMirroring.Checked = false;
                }
                this.cboRotation.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Rotation", ModuleScan.RT_NONE, ModuleScan.strFilePath);
                this.cboAutomaticRotateMode.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "AutomaticRotateMode", ModuleScan.ARM_STANDARD, ModuleScan.strFilePath);
                this.cboBackground.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Background", ModuleScan.MODE_OFF, ModuleScan.strFilePath);
                this.cboOutline.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Outline", ModuleScan.NONE, ModuleScan.strFilePath);
                this.cboHalftone.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Halftone", ModuleScan.NONE, ModuleScan.strFilePath);
                strWork = new StringBuilder(ModuleScan.MAX_PATH);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "HalftoneFile", "", strWork, ModuleScan.MAX_PATH, ModuleScan.strFilePath);
                if(rcl > 0)
                {
                    this.txtHalftoneFile.Text = strWork.ToString();
                }
                this.cboGamma.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Gamma", ModuleScan.NONE, ModuleScan.strFilePath);
                strWork = new StringBuilder(ModuleScan.MAX_PATH);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "GammaFile", "", strWork, ModuleScan.MAX_PATH, ModuleScan.strFilePath);
                if(rcl > 0)
                {
                    this.txtGammaFile.Text = strWork.ToString();
                }
                strWork = new StringBuilder(10);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "CustomGamma", "2.2", strWork, 10, ModuleScan.strFilePath);
                if(rcl > 0)
                {
                    this.txtCustomGamma.Text = strWork.ToString();
                }
                else
                {
                    this.txtCustomGamma.Text = "2.2";
                }
                this.cboAutoSeparation.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Separation", ModuleScan.AS_OFF, ModuleScan.strFilePath);
                this.cboSEE.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "SEE", ModuleScan.SEE_OFF, ModuleScan.strFilePath);
                this.cboThresholdCurve.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "ThresholdCurve", ModuleScan.TH_CURVE1, ModuleScan.strFilePath);
                this.cboNoiseRemoval.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "NoiseRemoval", ModuleScan.NONE, ModuleScan.strFilePath);
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "PreFiltering", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkPreFiltering.Checked = true;
                }
                else
                {
                    this.chkPreFiltering.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Smoothing", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkSmoothing.Checked = true;
                }
                else
                {
                    this.chkSmoothing.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Endorser", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkEndorser.Checked = true;
                }
                else
                {
                    this.chkEndorser.Checked = false;
                    this.cboEndorserDialog.Enabled = false;
                    this.txtEndorserCounter.Enabled = false;
                    this.txtEndorserString.Enabled = false;
                    this.txtEndorserOffset.Enabled = false;
                    this.cboEndorserDirection.Enabled = false;
                    this.cboEndorserCountStep.Enabled = false;
                    this.cboEndorserCountDirection.Enabled = false;
                    this.cboEndorserFont.Enabled = false;
                    this.chkSynchronizationDigitalEndorser.Enabled = false;
                }
                this.cboEndorserDialog.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "EndorserDialog", ModuleScan.EDD_OFF, ModuleScan.strFilePath);
                this.txtEndorserCounter.Text = ModuleScan.GetPrivateProfileInt("Scan", "EndorserCounter", 0, ModuleScan.strFilePath).ToString();
                strWork = new StringBuilder(50);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "EndorserString", "", strWork, 50, ModuleScan.strFilePath);
                if(rcl > 0)
                {
                    this.txtEndorserString.Text = strWork.ToString();
                }
                strWork = new StringBuilder(10);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "EndorserOffset", "0", strWork, 10, ModuleScan.strFilePath);
                if(rcl > 0)
                {
                    txtEndorserOffset.Text = strWork.ToString();
                }
                else
                {
                    txtEndorserOffset.Text = "0";
                }
                this.cboEndorserDirection.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "EndorserDirection", 0, ModuleScan.strFilePath);
                this.cboEndorserCountStep.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "EndorserCountStep", 1, ModuleScan.strFilePath);
                this.cboEndorserCountDirection.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "EndorserCountDirection", 0, ModuleScan.strFilePath);
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "DigitalEndorser", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkDigitalEndorser.Checked = true;
                }
                else
                {
                    this.chkDigitalEndorser.Checked = false;
                    this.txtDigitalEndorserCounter.Enabled = false;
                    this.txtDigitalEndorserString.Enabled = false;
                    this.txtDigitalEndorserXOffset.Enabled = false;
                    this.txtDigitalEndorserYOffset.Enabled = false;
                    this.cboDigitalEndorserDirection.Enabled = false;
                    this.cboDigitalEndorserCountStep.Enabled = false;
                    this.cboDigitalEndorserCountDirection.Enabled = false;
                }
                this.txtDigitalEndorserCounter.Text = ModuleScan.GetPrivateProfileInt("Scan", "DigitalEndorserCounter", 0, ModuleScan.strFilePath).ToString();
                strWork = new StringBuilder(246);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "DigitalEndorserString", "", strWork, 246, ModuleScan.strFilePath);
                if(rcl > 0)
                {
                    this.txtDigitalEndorserString.Text = strWork.ToString();
                }
                strWork = new StringBuilder(10);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "DigitalEndorserXOffset", "0", strWork, 10, ModuleScan.strFilePath);
                if(rcl > 0)
                {
                    txtDigitalEndorserXOffset.Text = strWork.ToString();
                }
                else
                {
                    txtDigitalEndorserXOffset.Text = "0";
                }
                strWork = new StringBuilder(10);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "DigitalEndorserYOffset", "0", strWork, 10, ModuleScan.strFilePath);
                if(rcl > 0)
                {
                    txtDigitalEndorserYOffset.Text = strWork.ToString();
                }
                else
                {
                    txtDigitalEndorserYOffset.Text = "0";
                }
                this.cboDigitalEndorserDirection.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "DigitalEndorserDirection", 0, ModuleScan.strFilePath);
                this.cboDigitalEndorserCountStep.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "DigitalEndorserCountStep", 1, ModuleScan.strFilePath);
                this.cboDigitalEndorserCountDirection.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "DigitalEndorserCountDirection", 0, ModuleScan.strFilePath);
                

                rcl = ModuleScan.GetPrivateProfileInt("Scan", "SynchronizationDigitalEndorser", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkSynchronizationDigitalEndorser.Checked = true;
                }
                else
                {
                    this.chkSynchronizationDigitalEndorser.Checked = false;
                }
                this.cboJobControl.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "JobControl", 0, ModuleScan.strFilePath);
                this.cboBinding.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Binding", 0, ModuleScan.strFilePath);
                this.cboMultiFeed.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "DoubleFeed", 0, ModuleScan.strFilePath);
                this.cboFilter.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Filter", ModuleScan.FILTER_GREEN, ModuleScan.strFilePath);
                this.txtFilterSaturationSensitivity.Text = ModuleScan.GetPrivateProfileInt("Scan", "FilterSaturationSensitivity", 50, ModuleScan.strFilePath).ToString();
                this.txtSkipWhitePage.Text = ModuleScan.GetPrivateProfileInt("Scan", "SkipWhitePage", 0, ModuleScan.strFilePath).ToString();
                this.txtSkipBlackPage.Text = ModuleScan.GetPrivateProfileInt("Scan", "SkipBlackPage", 0, ModuleScan.strFilePath).ToString();
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "AutoBorderDetection", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkAutoBorderDetection.Checked = true;
                }
                else
                {
                    this.chkAutoBorderDetection.Checked = false;
                }
                this.cboBlankPageNotice.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "BlankPageNotice", 0, ModuleScan.strFilePath);
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "HwCompression", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkHwCompression.Checked = true;
                }
                else
                {
                    this.chkHwCompression.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "ShowSourceUI", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.MenuItemShowSourceUI.Checked = true;
                }
                else
                {
                    this.MenuItemShowSourceUI.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "CloseSourceUI", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.MenuItemCloseSourceUI.Checked = true;
                }
                else
                {
                    this.MenuItemCloseSourceUI.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "SourceCurrentScan", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.MenuItemSourceCurrentScan.Checked = true;
                }
                else
                {
                    this.MenuItemSourceCurrentScan.Checked = false;
                }
                this.MenuItemTWAINTemplate.Enabled = this.MenuItemSourceCurrentScan.Checked;
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "SilentMode", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.MenuItemSilentMode.Checked = true;
                }
                else
                {
                    this.MenuItemSilentMode.Checked = false;
                }
                ModuleScan.intCarrierSheetClippingMode = ModuleScan.GetPrivateProfileInt("Scan", "CarrierSheetClippingMode", ModuleScan.CSCM_DRIVERSETTING, ModuleScan.strFilePath);
                this.MenuItemCarrierSheetClippingModeContent.Checked = false;
                this.MenuItemCarrierSheetClippingModeEdge.Checked = false;
                this.MenuItemCarrierSheetClippingModeDriverSetting.Checked = false;
                if (ModuleScan.intCarrierSheetClippingMode == 0)
                {
                    this.MenuItemCarrierSheetClippingModeContent.Checked = true;
                }
                else if (ModuleScan.intCarrierSheetClippingMode == 1)
                {
                    this.MenuItemCarrierSheetClippingModeEdge.Checked = true;
                }
                else
                {
                    this.MenuItemCarrierSheetClippingModeDriverSetting.Checked = true;
                }
                ModuleScan.intReport = ModuleScan.GetPrivateProfileInt("Scan", "Report", ModuleScan.RP_OFF, ModuleScan.strFilePath);
                this.MenuItemReportOFF.Checked = false;
                this.MenuItemReportDisplay.Checked = false;
                this.MenuItemReportFile.Checked = false;
                this.MenuItemReportBoth.Checked = false;
                if(ModuleScan.intReport == 0)
                {
                    this.MenuItemReportOFF.Checked = true;
                }
                else if(ModuleScan.intReport == 1)
                {
                    this.MenuItemReportDisplay.Checked = true;
                }
                else if(ModuleScan.intReport == 2)
                {
                    this.MenuItemReportFile.Checked = true;
                }
                else
                {
                    this.MenuItemReportBoth.Checked = true;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Indicator", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.MenuItemIndicator.Checked = true;
                }
                else
                {
                    this.MenuItemIndicator.Checked = false;
                }
                this.txtHighlight.Text = ModuleScan.GetPrivateProfileInt("Scan", "Highlight", 230, ModuleScan.strFilePath).ToString();
                this.txtShadow.Text = ModuleScan.GetPrivateProfileInt("Scan", "Shadow", 10, ModuleScan.strFilePath).ToString();
                this.cboOverScan.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "OverScan", 0, ModuleScan.strFilePath);
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "AutomaticSenseMedium", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkAutomaticSenseMedium.Checked = true;
                }
                else
                {
                    this.chkAutomaticSenseMedium.Checked = false;
                }
                this.cboBackgroundSmoothing.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "BackgroundSmoothing", 0, ModuleScan.strFilePath);
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "AutoBright", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkAutoBright.Checked = true;
                }
                else
                {
                    this.chkAutoBright.Checked = false;
                }
                this.cboEndorserFont.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "EndorserFont", ModuleScan.EDF_HORIZONTAL, ModuleScan.strFilePath);
                this.cboJobControlMode.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "JobControlMode", ModuleScan.JCM_SPECIAL_DOCUMENT, ModuleScan.strFilePath);
                this.txtBlankPageSkip.Text = ModuleScan.GetPrivateProfileInt("Scan", "BlankPageSkip", 0, ModuleScan.strFilePath).ToString();
                this.txtDTCSensitivity.Text = ModuleScan.GetPrivateProfileInt("Scan", "DTCSensitivity", 50, ModuleScan.strFilePath).ToString();
                this.txtBackgroundThreshold.Text = ModuleScan.GetPrivateProfileInt("Scan", "BackgroundThreshold", 50, ModuleScan.strFilePath).ToString();
                this.txtCharacterThickness.Text = ModuleScan.GetPrivateProfileInt("Scan", "CharacterThickness", 5, ModuleScan.strFilePath).ToString();
                this.txtSDTCSensitivity.Text = ModuleScan.GetPrivateProfileInt("Scan", "SDTCSensitivity", 2, ModuleScan.strFilePath).ToString();
                this.txtNoiseRejection.Text = ModuleScan.GetPrivateProfileInt("Scan", "NoiseRejection", 0, ModuleScan.strFilePath).ToString();
                this.txtADTCThreshold.Text = ModuleScan.GetPrivateProfileInt("Scan", "ADTCThreshold", 83, ModuleScan.strFilePath).ToString();
                this.txtFadingCompensation.Text = ModuleScan.GetPrivateProfileInt("Scan", "FadingCompensation", 0, ModuleScan.strFilePath).ToString();
                this.cboSharpness.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Sharpness", ModuleScan.SH_NONE, ModuleScan.strFilePath);
                this.cboPunchHoleRemoval.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "PunchHoleRemoval", ModuleScan.PHR_DO_NOT_REMOVE, ModuleScan.strFilePath);
                this.cboPunchHoleRemovalMode.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "PunchHoleRemovalMode", ModuleScan.PHRM_STANDARD, ModuleScan.strFilePath);
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "sRGB", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chksRGB.Checked = true;
                }
                else
                {
                    this.chksRGB.Checked = false;
                }
                this.cboPatternRemoval.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "PatternRemoval", 1, ModuleScan.strFilePath);
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "VerticalLineReduction", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkVerticalLineReduction.Checked = true;
                }
                else
                {
                    this.chkVerticalLineReduction.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "AIQCNotice", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkAIQCNotice.Checked = true;
                }
                else
                {
                    this.chkAIQCNotice.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "MultiFeedNotice", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkMultiFeedNotice.Checked = true;
                }
                else
                {
                    this.chkMultiFeedNotice.Checked = false;
                }
                this.txtBackgroundSmoothness.Text = ModuleScan.GetPrivateProfileInt("Scan", "BackgroundSmoothness", 5, ModuleScan.strFilePath).ToString();
                this.cboCropPriority.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "CropPriority", 0, ModuleScan.strFilePath);
                this.cboDeskew.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Deskew", 2, ModuleScan.strFilePath);
                this.cboDeskewBackground.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "DeskewBackground", 1, ModuleScan.strFilePath);
                this.cboDeskewMode.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "DeskewMode", 1, ModuleScan.strFilePath);
                this.cboBlankPageSkipMode.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "BlankPageSkipMode", 0, ModuleScan.strFilePath);
                this.cboBlankPageSkipTabPage.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "BlankPageSkipTabPage", 0, ModuleScan.strFilePath);
                this.txtBlankPageIgnoreAreaSize.Text = ModuleScan.GetPrivateProfileInt("Scan", "BlankPageIgnoreAreaSize", 16, ModuleScan.strFilePath).ToString();
                strWork = new StringBuilder(10);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "CropMarginSize", "0", strWork, 10, ModuleScan.strFilePath);
                if(rcl > 0)
                {
                    this.txtCropMarginSize.Text = strWork.ToString();
                }
                else
                {
                    this.txtCropMarginSize.Text = "0";
                }
                this.cboSelectOutputSize.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "SelectOutputSize", ModuleScan.SOS_MARGIN, ModuleScan.strFilePath);
                strWork = new StringBuilder(10);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "MultiFeedModeChangeSize", "0", strWork, 10, ModuleScan.strFilePath);
                if(rcl > 0)
                {
                    this.txtMultiFeedModeChangeSize.Text = strWork.ToString();
                }
                else
                {
                    this.txtMultiFeedModeChangeSize.Text = "0";
                }
                this.cboLengthDetection.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "LengthDetection", 0, ModuleScan.strFilePath);
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "FrontBackMergingEnabled", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkFrontBackMergingEnabled.Checked = true;
                }
                else
                {
                    this.chkFrontBackMergingEnabled.Checked = false;
                }
                this.cboFrontBackMergingLocation.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "FrontBackMergingLocation", ModuleScan.FBML_RIGHT, ModuleScan.strFilePath);
                this.cboFrontBackMergingRotation.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "FrontBackMergingRotation", ModuleScan.FBMR_NONE, ModuleScan.strFilePath);
                this.cboFrontBackMergingTarget.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "FrontBackMergingTarget", ModuleScan.FBMT_ALL, ModuleScan.strFilePath);
                this.cboFrontBackMergingTargetMode.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "FrontBackMergingTargetMode", ModuleScan.FBMTM_INDEX_CUSTOM, ModuleScan.strFilePath);
                strWork = new StringBuilder(10);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "FrontBackMergingTargetSize", ModuleScan.FBMTG_DEFAULT.ToString(), strWork, 10, ModuleScan.strFilePath);
                if (rcl > 0)
                {
                    this.txtFrontBackMergingTargetSize.Text = strWork.ToString();
                }
                else
                {
                    this.txtFrontBackMergingTargetSize.Text = ModuleScan.FBMTG_DEFAULT.ToString();
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "DivideLongPage", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkDivideLongPage.Checked = true;
                }
                else
                {
                    this.chkDivideLongPage.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "CharacterExtraction", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkCharacterExtraction.Checked = true;
                }
                else
                {
                    this.chkCharacterExtraction.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "ReversedTypeExtraction", 1, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkReversedTypeExtraction.Checked = true;
                }
                else
                {
                    this.chkReversedTypeExtraction.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "HalftoneRemoval", 1, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkHalftoneRemoval.Checked = true;
                }
                else
                {
                    this.chkHalftoneRemoval.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "StampRemoval", 1, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStampRemoval.Checked = true;
                }
                else
                {
                    this.chkStampRemoval.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "SimpleSlicePatternRemoval", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkSimpleSlicePatternRemoval.Checked = true;
                }
                else
                {
                    this.chkSimpleSlicePatternRemoval.Checked = false;
                }
                this.cboFrontBackDetection.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "FrontBackDetection", ModuleScan.FBD_NONE, ModuleScan.strFilePath);
                this.cboPaperProtection.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "PaperProtection", ModuleScan.PP_DRIVERSETTING, ModuleScan.strFilePath);

                this.cboColorReproduction.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "ColorReproduction", ModuleScan.CR_CONTRAST, ModuleScan.strFilePath);
                this.txtColorReproductionBrightness.Text = ModuleScan.GetPrivateProfileInt("Scan", "ColorReproductionBrightness", 128, ModuleScan.strFilePath).ToString();
                this.txtColorReproductionContrast.Text = ModuleScan.GetPrivateProfileInt("Scan", "ColorReproductionContrast", 128, ModuleScan.strFilePath).ToString();
                this.txtColorReproductionHighlight.Text = ModuleScan.GetPrivateProfileInt("Scan", "ColorReproductionHighlight", 255, ModuleScan.strFilePath).ToString();
                this.txtColorReproductionShadow.Text = ModuleScan.GetPrivateProfileInt("Scan", "ColorReproductionShadow", 0, ModuleScan.strFilePath).ToString();
                strWork = new StringBuilder(10);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "ColorReproductionCustomGamma", "1.0", strWork, 10, ModuleScan.strFilePath);
                if (rcl > 0)
                {
                    this.txtColorReproductionCustomGamma.Text = strWork.ToString();
                }
                else
                {
                    this.txtColorReproductionCustomGamma.Text = "1.0";
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "AdjustRGB", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkAdjustRGB.Checked = true;
                }
                else
                {
                    this.chkAdjustRGB.Checked = false;
                }
                this.txtAdjustRGBR.Text = ModuleScan.GetPrivateProfileInt("Scan", "AdjustRGBR", 128, ModuleScan.strFilePath).ToString();
                this.txtAdjustRGBG.Text = ModuleScan.GetPrivateProfileInt("Scan", "AdjustRGBG", 128, ModuleScan.strFilePath).ToString();
                this.txtAdjustRGBB.Text = ModuleScan.GetPrivateProfileInt("Scan", "AdjustRGBB", 128, ModuleScan.strFilePath).ToString();

                rcl = ModuleScan.GetPrivateProfileInt("Scan", "BarcodeDetection", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkBarcodeDetection.Checked = true;
                }
                else
                {
                    this.chkBarcodeDetection.Checked = false;
                    this.cboBarcodeDirection.Enabled = false;
                    this.txtBarcodeRegionLeft.Enabled = false;
                    this.txtBarcodeRegionTop.Enabled = false;
                    this.txtBarcodeRegionWidth.Enabled = false;
                    this.txtBarcodeRegionLength.Enabled = false;
                    this.chkEAN8.Enabled = false;
                    this.chkEAN13.Enabled = false;
                    this.chkCode3of9.Enabled = false;
                    this.chkCode128.Enabled = false;
                    this.chkITF.Enabled = false;
                    this.chkUPCA.Enabled = false;
                    this.chkCodabar.Enabled = false;
                    this.chkPDF417.Enabled = false;
                    this.chkQRCode.Enabled = false;
                    this.chkDataMatrix.Enabled = false;
                    this.chkAztecCode.Enabled = false;
                    this.txtBarcodeMaxSearchPriorities.Enabled = false;
                    this.chkBarcodeNotDetectionNotice.Enabled = false;
                }
                this.cboBarcodeDirection.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "BarcodeDirection", ModuleScan.BD_HORIZONTAL_VERTICAL, ModuleScan.strFilePath);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "BarcodeRegionLeft", "0", strWork, 10, ModuleScan.strFilePath);
                if(rcl > 0)
                {
                    txtBarcodeRegionLeft.Text = strWork.ToString();
                }
                else
                {
                    txtBarcodeRegionLeft.Text = "0";
                }
                rcl = ModuleScan.GetPrivateProfileString("Scan", "BarcodeRegionTop", "0", strWork, 10, ModuleScan.strFilePath);
                if(rcl > 0)
                {
                    txtBarcodeRegionTop.Text = strWork.ToString();
                }
                else
                {
                    txtBarcodeRegionTop.Text = "0";
                }
                rcl = ModuleScan.GetPrivateProfileString("Scan", "BarcodeRegionWidth", "0", strWork, 10, ModuleScan.strFilePath);
                if(rcl > 0)
                {
                    txtBarcodeRegionWidth.Text = strWork.ToString();
                }
                else
                {
                    txtBarcodeRegionWidth.Text = "0";
                }
                rcl = ModuleScan.GetPrivateProfileString("Scan", "BarcodeRegionLength", "0", strWork, 10, ModuleScan.strFilePath);
                if(rcl > 0)
                {
                    txtBarcodeRegionLength.Text = strWork.ToString();
                }
                else
                {
                    txtBarcodeRegionLength.Text = "0";
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "BarcodeType_EAN8", 1, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkEAN8.Checked = true;
                }
                else
                {
                    this.chkEAN8.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "BarcodeType_EAN13", 1, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkEAN13.Checked = true;
                }
                else
                {
                    this.chkEAN13.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "BarcodeType_Code3of9", 1, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkCode3of9.Checked = true;
                }
                else
                {
                    this.chkCode3of9.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "BarcodeType_Code128", 1, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkCode128.Checked = true;
                }
                else
                {
                    this.chkCode128.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "BarcodeType_ITF", 1, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkITF.Checked = true;
                }
                else
                {
                    this.chkITF.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "BarcodeType_UPC-A", 1, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkUPCA.Checked = true;
                }
                else
                {
                    this.chkUPCA.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "BarcodeType_Codabar", 1, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkCodabar.Checked = true;
                }
                else
                {
                    this.chkCodabar.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "BarcodeType_PDF417", 1, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkPDF417.Checked = true;
                }
                else
                {
                    this.chkPDF417.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "BarcodeType_QRCode", 1, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkQRCode.Checked = true;
                }
                else
                {
                    this.chkQRCode.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "BarcodeType_DataMatrix", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkDataMatrix.Checked = true;
                }
                else
                {
                    this.chkDataMatrix.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "BarcodeType_AztecCode", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkAztecCode.Checked = true;
                }
                else
                {
                    this.chkAztecCode.Checked = false;
                }
                this.txtBarcodeMaxSearchPriorities.Text = ModuleScan.GetPrivateProfileInt("Scan", "BarcodeMaxSearchPriorities", 1, ModuleScan.strFilePath).ToString();
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "BarcodeNotDetectionNotice", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkBarcodeNotDetectionNotice.Checked = true;
                }
                else
                {
                    this.chkBarcodeNotDetectionNotice.Checked = false;
                }

                rcl = ModuleScan.GetPrivateProfileInt("Scan", "PatchCodeDetection", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkPatchCodeDetection.Checked = true;
                }
                else
                {
                    this.chkPatchCodeDetection.Checked = false;
                }
                this.cboPatchCodeDirection.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "PatchCodeDirection", ModuleScan.PD_VERTICAL, ModuleScan.strFilePath);
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "PatchCodeType_Patch1", 1, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkPatch1.Checked = true;
                }
                else
                {
                    this.chkPatch1.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "PatchCodeType_Patch2", 1, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkPatch2.Checked = true;
                }
                else
                {
                    this.chkPatch2.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "PatchCodeType_Patch3", 1, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkPatch3.Checked = true;
                }
                else
                {
                    this.chkPatch3.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "PatchCodeType_Patch4", 1, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkPatch4.Checked = true;
                }
                else
                {
                    this.chkPatch4.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "PatchCodeType_Patch6", 1, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkPatch6.Checked = true;
                }
                else
                {
                    this.chkPatch6.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "PatchCodeType_PatchT", 1, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkPatchT.Checked = true;
                }
                else
                {
                    this.chkPatchT.Checked = false;
                }

                this.cboEdgeFiller.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "EdgeFiller", ModuleScan.EF_OFF, ModuleScan.strFilePath);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "EdgeFillerTop", "0", strWork, 10, ModuleScan.strFilePath);
                if(rcl > 0)
                {
                    txtEdgeFillerTop.Text = strWork.ToString();
                }
                else
                {
                    txtEdgeFillerTop.Text = "0";
                }
                rcl = ModuleScan.GetPrivateProfileString("Scan", "EdgeFillerBottom", "0", strWork, 10, ModuleScan.strFilePath);
                if(rcl > 0)
                {
                    txtEdgeFillerBottom.Text = strWork.ToString();
                }
                else
                {
                    txtEdgeFillerBottom.Text = "0";
                }
                rcl = ModuleScan.GetPrivateProfileString("Scan", "EdgeFillerLeft", "0", strWork, 10, ModuleScan.strFilePath);
                if(rcl > 0)
                {
                    txtEdgeFillerLeft.Text = strWork.ToString();
                }
                else
                {
                    txtEdgeFillerLeft.Text = "0";
                }
                rcl = ModuleScan.GetPrivateProfileString("Scan", "EdgeFillerRight", "0", strWork, 10, ModuleScan.strFilePath);
                if(rcl > 0)
                {
                    txtEdgeFillerRight.Text = strWork.ToString();
                }
                else
                {
                    txtEdgeFillerRight.Text = "0";
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "EdgeRepair", 0, ModuleScan.strFilePath);
                if(rcl == 1)
                {
                    this.chkEdgeRepair.Checked = true;
                }
                else
                {
                    this.chkEdgeRepair.Checked = false;
                }

                this.cboMultiStreamMode.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "MultiStreamMode", ModuleScan.MSM_OFF, ModuleScan.strFilePath);
                this.cboMultiStreamFileNameMode.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "MultiStreamFileNameMode", ModuleScan.MSFNM_OFF, ModuleScan.strFilePath);
                this.cboMultiStreamDefaultValueMode.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "MultiStreamDefaultValueMode", ModuleScan.MSDVM_OFF, ModuleScan.strFilePath);
                this.cboStream1PixelType.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream1PixelType", ModuleScan.PIXEL_BLACK_WHITE, ModuleScan.strFilePath);
                this.cboStream1FileType.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream1FileType", ModuleScan.FILE_TIF, ModuleScan.strFilePath);
                this.cboStream1CompressionType.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream1CompressionType", ModuleScan.COMP_MMR, ModuleScan.strFilePath);
                this.cboStream1Resolution.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream1Resolution", ModuleScan.RS_300, ModuleScan.strFilePath);
                this.txtStream1CustomResolution.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1CustomResolution", 300, ModuleScan.strFilePath).ToString();
                this.txtFileCounter1.Text = ModuleScan.GetPrivateProfileInt("Scan", "FileCounter1", 1, ModuleScan.strFilePath).ToString();
                strWork = new StringBuilder(ModuleScan.MAX_PATH);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "FileName1", "", strWork, ModuleScan.MAX_PATH, ModuleScan.strFilePath);
                if (rcl > 0)
                {
                    this.txtFileName1.Text = strWork.ToString();
                }
                else
                {
                    this.txtFileName1.Text = ModuleScan.strDirPath + "\\image1_#####";
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream1AutoBright", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream1AutoBright.Checked = true;
                }
                else
                {
                    this.chkStream1AutoBright.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream1Reverse", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream1Reverse.Checked = true;
                }
                else
                {
                    this.chkStream1Reverse.Checked = false;
                }
                this.cboStream1Gamma.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream1Gamma", ModuleScan.NONE, ModuleScan.strFilePath);
                strWork = new StringBuilder(ModuleScan.MAX_PATH);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "Stream1GammaFile", "", strWork, ModuleScan.MAX_PATH, ModuleScan.strFilePath);
                if (rcl > 0)
                {
                    this.txtStream1GammaFile.Text = strWork.ToString();
                }
                this.txtStream1Brightness.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1Brightness", 128, ModuleScan.strFilePath).ToString();
                this.txtStream1Contrast.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1Contrast", 128, ModuleScan.strFilePath).ToString();
                strWork = new StringBuilder(10);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "Stream1CustomGamma", "2.2", strWork, 10, ModuleScan.strFilePath);
                if (rcl > 0)
                {
                    this.txtStream1CustomGamma.Text = strWork.ToString();
                }
                else
                {
                    this.txtStream1CustomGamma.Text = "2.2";
                }
                this.cboStream1Background.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream1Background", ModuleScan.MODE_OFF, ModuleScan.strFilePath);
                this.cboStream1Sharpness.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream1Sharpness", ModuleScan.SH_NONE, ModuleScan.strFilePath);
                this.txtStream1Threshold.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1Threshold", 128, ModuleScan.strFilePath).ToString();
                this.txtStream1DTCSensitivity.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1DTCSensitivity", 50, ModuleScan.strFilePath).ToString();
                this.txtStream1BackgroundThreshold.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1BackgroundThreshold", 50, ModuleScan.strFilePath).ToString();
                this.txtStream1CharacterThickness.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1CharacterThickness", 5, ModuleScan.strFilePath).ToString();
                this.txtStream1FadingCompensation.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1FadingCompensation", 0, ModuleScan.strFilePath).ToString();
                this.txtStream1NoiseRejection.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1NoiseRejection", 0, ModuleScan.strFilePath).ToString();
                this.cboStream1PatternRemoval.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream1PatternRemoval", 1, ModuleScan.strFilePath);
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream1CharacterExtraction", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream1CharacterExtraction.Checked = true;
                }
                else
                {
                    this.chkStream1CharacterExtraction.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream1ReversedTypeExtraction", 1, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream1ReversedTypeExtraction.Checked = true;
                }
                else
                {
                    this.chkStream1ReversedTypeExtraction.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream1HalftoneRemoval", 1, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream1HalftoneRemoval.Checked = true;
                }
                else
                {
                    this.chkStream1HalftoneRemoval.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream1StampRemoval", 1, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream1StampRemoval.Checked = true;
                }
                else
                {
                    this.chkStream1StampRemoval.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream1SimpleSlicePatternRemoval", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream1SimpleSlicePatternRemoval.Checked = true;
                }
                else
                {
                    this.chkStream1SimpleSlicePatternRemoval.Checked = false;
                }
                this.txtStream1ADTCThreshold.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1ADTCThreshold", 83, ModuleScan.strFilePath).ToString();
                this.txtStream1SDTCSensitivity.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1SDTCSensitivity", 2, ModuleScan.strFilePath).ToString();
                this.cboStream1Halftone.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream1Halftone", ModuleScan.NONE, ModuleScan.strFilePath);
                strWork = new StringBuilder(ModuleScan.MAX_PATH);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "Stream1HalftoneFile", "", strWork, ModuleScan.MAX_PATH, ModuleScan.strFilePath);
                if (rcl > 0)
                {
                    this.txtStream1HalftoneFile.Text = strWork.ToString();
                }
                this.cboStream1SEE.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream1SEE", ModuleScan.SEE_OFF, ModuleScan.strFilePath);
                this.cboStream1Filter.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream1Filter", ModuleScan.FILTER_GREEN, ModuleScan.strFilePath);
                this.txtStream1FilterSaturationSensitivity.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1FilterSaturationSensitivity", 50, ModuleScan.strFilePath).ToString();
                this.txtStream1Highlight.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1Highlight", 230, ModuleScan.strFilePath).ToString();
                this.txtStream1Shadow.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1Shadow", 10, ModuleScan.strFilePath).ToString();
                this.cboStream1BackgroundSmoothing.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream1BackgroundSmoothing", 0, ModuleScan.strFilePath);
                this.txtStream1BackgroundSmoothness.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1BackgroundSmoothness", 5, ModuleScan.strFilePath).ToString();
                this.cboStream1ColorReproduction.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream1ColorReproduction", ModuleScan.CR_CONTRAST, ModuleScan.strFilePath);
                this.txtStream1ColorReproductionBrightness.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1ColorReproductionBrightness", 128, ModuleScan.strFilePath).ToString();
                this.txtStream1ColorReproductionContrast.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1ColorReproductionContrast", 128, ModuleScan.strFilePath).ToString();
                this.txtStream1ColorReproductionHighlight.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1ColorReproductionHighlight", 255, ModuleScan.strFilePath).ToString();
                this.txtStream1ColorReproductionShadow.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1ColorReproductionShadow", 0, ModuleScan.strFilePath).ToString();
                strWork = new StringBuilder(10);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "Stream1ColorReproductionCustomGamma", "1.0", strWork, 10, ModuleScan.strFilePath);
                if (rcl > 0)
                {
                    this.txtStream1ColorReproductionCustomGamma.Text = strWork.ToString();
                }
                else
                {
                    this.txtStream1ColorReproductionCustomGamma.Text = "1.0";
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream1AdjustRGB", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream1AdjustRGB.Checked = true;
                }
                else
                {
                    this.chkStream1AdjustRGB.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream1sRGB", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream1sRGB.Checked = true;
                }
                else
                {
                    this.chkStream1sRGB.Checked = false;
                }
                this.txtStream1AdjustRGBR.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1AdjustRGBR", 128, ModuleScan.strFilePath).ToString();
                this.txtStream1AdjustRGBG.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1AdjustRGBG", 128, ModuleScan.strFilePath).ToString();
                this.txtStream1AdjustRGBB.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream1AdjustRGBB", 128, ModuleScan.strFilePath).ToString();
                this.cboStream2PixelType.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream2PixelType", ModuleScan.PIXEL_BLACK_WHITE, ModuleScan.strFilePath);
                this.cboStream2FileType.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream2FileType", ModuleScan.FILE_TIF, ModuleScan.strFilePath);
                this.cboStream2CompressionType.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream2CompressionType", ModuleScan.COMP_MMR, ModuleScan.strFilePath);
                this.cboStream2Resolution.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream2Resolution", ModuleScan.RS_300, ModuleScan.strFilePath);
                this.txtStream2CustomResolution.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2CustomResolution", 300, ModuleScan.strFilePath).ToString();
                this.txtFileCounter2.Text = ModuleScan.GetPrivateProfileInt("Scan", "FileCounter2", 1, ModuleScan.strFilePath).ToString();
                strWork = new StringBuilder(ModuleScan.MAX_PATH);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "FileName2", "", strWork, ModuleScan.MAX_PATH, ModuleScan.strFilePath);
                if (rcl > 0)
                {
                    this.txtFileName2.Text = strWork.ToString();
                }
                else
                {
                    this.txtFileName2.Text = ModuleScan.strDirPath + "\\image2_#####";
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream2AutoBright", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream2AutoBright.Checked = true;
                }
                else
                {
                    this.chkStream2AutoBright.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream2Reverse", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream2Reverse.Checked = true;
                }
                else
                {
                    this.chkStream2Reverse.Checked = false;
                }
                this.cboStream2Gamma.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream2Gamma", ModuleScan.NONE, ModuleScan.strFilePath);
                strWork = new StringBuilder(ModuleScan.MAX_PATH);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "Stream2GammaFile", "", strWork, ModuleScan.MAX_PATH, ModuleScan.strFilePath);
                if (rcl > 0)
                {
                    this.txtStream2GammaFile.Text = strWork.ToString();
                }
                this.txtStream2Brightness.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2Brightness", 128, ModuleScan.strFilePath).ToString();
                this.txtStream2Contrast.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2Contrast", 128, ModuleScan.strFilePath).ToString();
                strWork = new StringBuilder(10);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "Stream2CustomGamma", "2.2", strWork, 10, ModuleScan.strFilePath);
                if (rcl > 0)
                {
                    this.txtStream2CustomGamma.Text = strWork.ToString();
                }
                else
                {
                    this.txtStream2CustomGamma.Text = "2.2";
                }
                this.cboStream2Background.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream2Background", ModuleScan.MODE_OFF, ModuleScan.strFilePath);
                this.cboStream2Sharpness.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream2Sharpness", ModuleScan.SH_NONE, ModuleScan.strFilePath);
                this.txtStream2Threshold.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2Threshold", 128, ModuleScan.strFilePath).ToString();
                this.txtStream2DTCSensitivity.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2DTCSensitivity", 50, ModuleScan.strFilePath).ToString();
                this.txtStream2BackgroundThreshold.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2BackgroundThreshold", 50, ModuleScan.strFilePath).ToString();
                this.txtStream2CharacterThickness.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2CharacterThickness", 5, ModuleScan.strFilePath).ToString();
                this.txtStream2FadingCompensation.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2FadingCompensation", 0, ModuleScan.strFilePath).ToString();
                this.txtStream2NoiseRejection.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2NoiseRejection", 0, ModuleScan.strFilePath).ToString();
                this.cboStream2PatternRemoval.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream2PatternRemoval", 1, ModuleScan.strFilePath);
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream2CharacterExtraction", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream2CharacterExtraction.Checked = true;
                }
                else
                {
                    this.chkStream2CharacterExtraction.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream2ReversedTypeExtraction", 1, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream2ReversedTypeExtraction.Checked = true;
                }
                else
                {
                    this.chkStream2ReversedTypeExtraction.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream2HalftoneRemoval", 1, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream2HalftoneRemoval.Checked = true;
                }
                else
                {
                    this.chkStream2HalftoneRemoval.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream2StampRemoval", 1, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream2StampRemoval.Checked = true;
                }
                else
                {
                    this.chkStream2StampRemoval.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream2SimpleSlicePatternRemoval", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream2SimpleSlicePatternRemoval.Checked = true;
                }
                else
                {
                    this.chkStream2SimpleSlicePatternRemoval.Checked = false;
                }
                this.txtStream2ADTCThreshold.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2ADTCThreshold", 83, ModuleScan.strFilePath).ToString();
                this.txtStream2SDTCSensitivity.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2SDTCSensitivity", 2, ModuleScan.strFilePath).ToString();
                this.cboStream2Halftone.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream2Halftone", ModuleScan.NONE, ModuleScan.strFilePath);
                strWork = new StringBuilder(ModuleScan.MAX_PATH);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "Stream2HalftoneFile", "", strWork, ModuleScan.MAX_PATH, ModuleScan.strFilePath);
                if (rcl > 0)
                {
                    this.txtStream2HalftoneFile.Text = strWork.ToString();
                }
                this.cboStream2SEE.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream2SEE", ModuleScan.SEE_OFF, ModuleScan.strFilePath);
                this.cboStream2Filter.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream2Filter", ModuleScan.FILTER_GREEN, ModuleScan.strFilePath);
                this.txtStream2FilterSaturationSensitivity.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2FilterSaturationSensitivity", 50, ModuleScan.strFilePath).ToString();
                this.txtStream2Highlight.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2Highlight", 230, ModuleScan.strFilePath).ToString();
                this.txtStream2Shadow.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2Shadow", 10, ModuleScan.strFilePath).ToString();
                this.cboStream2BackgroundSmoothing.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream2BackgroundSmoothing", 0, ModuleScan.strFilePath);
                this.txtStream2BackgroundSmoothness.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2BackgroundSmoothness", 5, ModuleScan.strFilePath).ToString();
                this.cboStream2ColorReproduction.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream2ColorReproduction", ModuleScan.CR_CONTRAST, ModuleScan.strFilePath);
                this.txtStream2ColorReproductionBrightness.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2ColorReproductionBrightness", 128, ModuleScan.strFilePath).ToString();
                this.txtStream2ColorReproductionContrast.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2ColorReproductionContrast", 128, ModuleScan.strFilePath).ToString();
                this.txtStream2ColorReproductionHighlight.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2ColorReproductionHighlight", 255, ModuleScan.strFilePath).ToString();
                this.txtStream2ColorReproductionShadow.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2ColorReproductionShadow", 0, ModuleScan.strFilePath).ToString();
                strWork = new StringBuilder(10);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "Stream2ColorReproductionCustomGamma", "1.0", strWork, 10, ModuleScan.strFilePath);
                if (rcl > 0)
                {
                    this.txtStream2ColorReproductionCustomGamma.Text = strWork.ToString();
                }
                else
                {
                    this.txtStream2ColorReproductionCustomGamma.Text = "1.0";
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream2AdjustRGB", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream2AdjustRGB.Checked = true;
                }
                else
                {
                    this.chkStream2AdjustRGB.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream2sRGB", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream2sRGB.Checked = true;
                }
                else
                {
                    this.chkStream2sRGB.Checked = false;
                }
                this.txtStream2AdjustRGBR.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2AdjustRGBR", 128, ModuleScan.strFilePath).ToString();
                this.txtStream2AdjustRGBG.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2AdjustRGBG", 128, ModuleScan.strFilePath).ToString();
                this.txtStream2AdjustRGBB.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream2AdjustRGBB", 128, ModuleScan.strFilePath).ToString();
                this.cboStream3PixelType.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream3PixelType", ModuleScan.PIXEL_BLACK_WHITE, ModuleScan.strFilePath);
                this.cboStream3FileType.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream3FileType", ModuleScan.FILE_TIF, ModuleScan.strFilePath);
                this.cboStream3CompressionType.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream3CompressionType", ModuleScan.COMP_MMR, ModuleScan.strFilePath);
                this.cboStream3Resolution.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream3Resolution", ModuleScan.RS_300, ModuleScan.strFilePath);
                this.txtStream3CustomResolution.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3CustomResolution", 300, ModuleScan.strFilePath).ToString();
                this.txtFileCounter3.Text = ModuleScan.GetPrivateProfileInt("Scan", "FileCounter3", 1, ModuleScan.strFilePath).ToString();
                strWork = new StringBuilder(ModuleScan.MAX_PATH);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "FileName3", "", strWork, ModuleScan.MAX_PATH, ModuleScan.strFilePath);
                if (rcl > 0)
                {
                    this.txtFileName3.Text = strWork.ToString();
                }
                else
                {
                    this.txtFileName3.Text = ModuleScan.strDirPath + "\\image3_#####";
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream3AutoBright", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream3AutoBright.Checked = true;
                }
                else
                {
                    this.chkStream3AutoBright.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream3Reverse", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream3Reverse.Checked = true;
                }
                else
                {
                    this.chkStream3Reverse.Checked = false;
                }
                this.cboStream3Gamma.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream3Gamma", ModuleScan.NONE, ModuleScan.strFilePath);
                strWork = new StringBuilder(ModuleScan.MAX_PATH);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "Stream3GammaFile", "", strWork, ModuleScan.MAX_PATH, ModuleScan.strFilePath);
                if (rcl > 0)
                {
                    this.txtStream3GammaFile.Text = strWork.ToString();
                }
                this.txtStream3Brightness.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3Brightness", 128, ModuleScan.strFilePath).ToString();
                this.txtStream3Contrast.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3Contrast", 128, ModuleScan.strFilePath).ToString();
                strWork = new StringBuilder(10);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "Stream3CustomGamma", "2.2", strWork, 10, ModuleScan.strFilePath);
                if (rcl > 0)
                {
                    this.txtStream3CustomGamma.Text = strWork.ToString();
                }
                else
                {
                    this.txtStream3CustomGamma.Text = "2.2";
                }
                this.cboStream3Background.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream3Background", ModuleScan.MODE_OFF, ModuleScan.strFilePath);
                this.cboStream3Sharpness.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream3Sharpness", ModuleScan.SH_NONE, ModuleScan.strFilePath);
                this.txtStream3Threshold.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3Threshold", 128, ModuleScan.strFilePath).ToString();
                this.txtStream3DTCSensitivity.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3DTCSensitivity", 50, ModuleScan.strFilePath).ToString();
                this.txtStream3BackgroundThreshold.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3BackgroundThreshold", 50, ModuleScan.strFilePath).ToString();
                this.txtStream3CharacterThickness.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3CharacterThickness", 5, ModuleScan.strFilePath).ToString();
                this.txtStream3FadingCompensation.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3FadingCompensation", 0, ModuleScan.strFilePath).ToString();
                this.txtStream3NoiseRejection.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3NoiseRejection", 0, ModuleScan.strFilePath).ToString();
                this.cboStream3PatternRemoval.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream3PatternRemoval", 1, ModuleScan.strFilePath);
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream3CharacterExtraction", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream3CharacterExtraction.Checked = true;
                }
                else
                {
                    this.chkStream3CharacterExtraction.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream3ReversedTypeExtraction", 1, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream3ReversedTypeExtraction.Checked = true;
                }
                else
                {
                    this.chkStream3ReversedTypeExtraction.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream3HalftoneRemoval", 1, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream3HalftoneRemoval.Checked = true;
                }
                else
                {
                    this.chkStream3HalftoneRemoval.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream3StampRemoval", 1, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream3StampRemoval.Checked = true;
                }
                else
                {
                    this.chkStream3StampRemoval.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream3SimpleSlicePatternRemoval", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream3SimpleSlicePatternRemoval.Checked = true;
                }
                else
                {
                    this.chkStream3SimpleSlicePatternRemoval.Checked = false;
                }
                this.txtStream3ADTCThreshold.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3ADTCThreshold", 83, ModuleScan.strFilePath).ToString();
                this.txtStream3SDTCSensitivity.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3SDTCSensitivity", 2, ModuleScan.strFilePath).ToString();
                this.cboStream3Halftone.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream3Halftone", ModuleScan.NONE, ModuleScan.strFilePath);
                strWork = new StringBuilder(ModuleScan.MAX_PATH);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "Stream3HalftoneFile", "", strWork, ModuleScan.MAX_PATH, ModuleScan.strFilePath);
                if (rcl > 0)
                {
                    this.txtStream3HalftoneFile.Text = strWork.ToString();
                }
                this.cboStream3SEE.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream3SEE", ModuleScan.SEE_OFF, ModuleScan.strFilePath);
                this.cboStream3Filter.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream3Filter", ModuleScan.FILTER_GREEN, ModuleScan.strFilePath);
                this.txtStream3FilterSaturationSensitivity.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3FilterSaturationSensitivity", 50, ModuleScan.strFilePath).ToString();
                this.txtStream3Highlight.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3Highlight", 230, ModuleScan.strFilePath).ToString();
                this.txtStream3Shadow.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3Shadow", 10, ModuleScan.strFilePath).ToString();
                this.cboStream3BackgroundSmoothing.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream3BackgroundSmoothing", 0, ModuleScan.strFilePath);
                this.txtStream3BackgroundSmoothness.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3BackgroundSmoothness", 5, ModuleScan.strFilePath).ToString();
                this.cboStream3ColorReproduction.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "Stream3ColorReproduction", ModuleScan.CR_CONTRAST, ModuleScan.strFilePath);
                this.txtStream3ColorReproductionBrightness.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3ColorReproductionBrightness", 128, ModuleScan.strFilePath).ToString();
                this.txtStream3ColorReproductionContrast.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3ColorReproductionContrast", 128, ModuleScan.strFilePath).ToString();
                this.txtStream3ColorReproductionHighlight.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3ColorReproductionHighlight", 255, ModuleScan.strFilePath).ToString();
                this.txtStream3ColorReproductionShadow.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3ColorReproductionShadow", 0, ModuleScan.strFilePath).ToString();
                strWork = new StringBuilder(10);
                rcl = ModuleScan.GetPrivateProfileString("Scan", "Stream3ColorReproductionCustomGamma", "1.0", strWork, 10, ModuleScan.strFilePath);
                if (rcl > 0)
                {
                    this.txtStream3ColorReproductionCustomGamma.Text = strWork.ToString();
                }
                else
                {
                    this.txtStream3ColorReproductionCustomGamma.Text = "1.0";
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream3AdjustRGB", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream3AdjustRGB.Checked = true;
                }
                else
                {
                    this.chkStream3AdjustRGB.Checked = false;
                }
                rcl = ModuleScan.GetPrivateProfileInt("Scan", "Stream3sRGB", 0, ModuleScan.strFilePath);
                if (rcl == 1)
                {
                    this.chkStream3sRGB.Checked = true;
                }
                else
                {
                    this.chkStream3sRGB.Checked = false;
                }
                this.txtStream3AdjustRGBR.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3AdjustRGBR", 128, ModuleScan.strFilePath).ToString();
                this.txtStream3AdjustRGBG.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3AdjustRGBG", 128, ModuleScan.strFilePath).ToString();
                this.txtStream3AdjustRGBB.Text = ModuleScan.GetPrivateProfileInt("Scan", "Stream3AdjustRGBB", 128, ModuleScan.strFilePath).ToString();

                formAutoProfile.cboAutoProfile.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "AutoProfile", ModuleScan.AP_DISABLED, ModuleScan.strFilePath);
                formAutoProfile.txtAutoProfileSensitivity.Text = ModuleScan.GetPrivateProfileInt("Scan", "AutoProfileSensitivity", 3, ModuleScan.strFilePath).ToString();
                this.cboManualFeedMode.SelectedIndex = ModuleScan.GetPrivateProfileInt("Scan", "ManualFeedMode ", ModuleScan.MFM_HARDWARESETTING, ModuleScan.strFilePath);

                ModuleScan.bInitialFileRead = true;
                CarrierSheetSet();
            }
            catch (System.Exception)
            {
                //A default value is used when reading of a ini file goes wrong.
                DefaultSet();
            }
            
        }

        //----------------------------------------------------------------------------
        //  Function    : Writing to the ini file of parameter information
        //  Argument    : Nothing
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void  WriteScanINIFile()
        {
            if(ModuleScan.strFilePath == null || ModuleScan.strFilePath.Equals("") == true)
            {
                MessageBox.Show("It cannot write in a file.", "fiScanTest");
                return;
            }

            try
            {
                //Display position information on a dialog
                ModuleScan.WritePrivateProfileString("Form", "Left", this.Left.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Form", "Top", this.Top.ToString(), ModuleScan.strFilePath);

                //Write configuration parameter
                ModuleScan.WritePrivateProfileString("Scan", "ScanToType", this.cboScanTo.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "FileType", this.cboFileType.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "FileName", this.txtFileName.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Overwrite", this.cboOverwrite.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "FileCounter", this.txtFileCounter.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "CompressionType", this.cboCompType.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "JpegQuality", this.cboJpegQuality.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "ScanMode", this.cboScanMode.SelectedIndex.ToString(), ModuleScan.strFilePath);
                if (this.chkScanContinue.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "ScanContinue", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "ScanContinue", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "ScanContinueMode", this.cboScanContinueMode.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "PaperSupply", this.cboPaperSupply.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "ScanCount", this.txtScanCount.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "PaperSize", this.cboPaperSize.SelectedIndex.ToString(), ModuleScan.strFilePath);
                if(this.chkLongPage.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "LongPage", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "LongPage", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "Orientation", this.cboOrientation.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "CustomPaperWidth", double.Parse(this.txtCustomPaperWidth.Text).ToString("F3"), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "CustomPaperLength", double.Parse(this.txtCustomPaperLength.Text).ToString("F3"), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "RegionLeft", double.Parse(this.txtRegionLeft.Text).ToString("F3"), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "RegionTop", double.Parse(this.txtRegionTop.Text).ToString("F3"), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "RegionWidth", double.Parse(this.txtRegionWidth.Text).ToString("F3"), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "RegionLength", double.Parse(this.txtRegionLength.Text).ToString("F3"), ModuleScan.strFilePath);
                if(chkUndefinedScanning.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "UndefinedScanning", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "UndefinedScanning", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "BackgroundColor", this.cboBackgroundColor.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "PixelType", this.cboPixelType.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "AutomaticColorSensitivity", this.txtAutomaticColorSensitivity.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "AutomaticColorBackground", this.cboAutomaticColorBackground.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Resolution", this.cboResolution.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "CustomResolution", this.txtCustomResolution.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Brightness", this.txtBrightness.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Contrast", this.txtContrast.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Threshold", this.txtThreshold.Text, ModuleScan.strFilePath);
                if(this.chkReverse.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Reverse", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Reverse", "0", ModuleScan.strFilePath);
                }
                if(chkMirroring.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Mirroring", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Mirroring", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "Rotation", this.cboRotation.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "AutomaticRotateMode", this.cboAutomaticRotateMode.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Background", this.cboBackground.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Outline", this.cboOutline.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Halftone", this.cboHalftone.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "HalftoneFile", this.txtHalftoneFile.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Gamma", this.cboGamma.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "GammaFile", this.txtGammaFile.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "CustomGamma", this.txtCustomGamma.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "AutoSeparation", this.cboAutoSeparation.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "SEE", this.cboSEE.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "ThresholdCurve", this.cboThresholdCurve.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "NoiseRemoval", this.cboNoiseRemoval.SelectedIndex.ToString(), ModuleScan.strFilePath);
                if(this.chkPreFiltering.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "PreFiltering", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "PreFiltering", "0", ModuleScan.strFilePath);
                }
                if(this.chkSmoothing.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Smoothing", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Smoothing", "0", ModuleScan.strFilePath);
                }
                if(this.chkEndorser.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Endorser", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Endorser", "0", ModuleScan.strFilePath);
                }

                ModuleScan.WritePrivateProfileString("Scan", "EndorserDialog", this.cboEndorserDialog.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "EndorserCounter", this.txtEndorserCounter.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "EndorserString", this.txtEndorserString.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "EndorserOffset", double.Parse(this.txtEndorserOffset.Text).ToString("F3"), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "EndorserDirection", this.cboEndorserDirection.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "EndorserCountStep", this.cboEndorserCountStep.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "EndorserCountDirection", this.cboEndorserCountDirection.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "EndorserFont", this.cboEndorserFont.SelectedIndex.ToString(), ModuleScan.strFilePath);
                if(this.chkSynchronizationDigitalEndorser.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "SynchronizationDigitalEndorser", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "SynchronizationDigitalEndorser", "0", ModuleScan.strFilePath);
                }
                if(this.chkDigitalEndorser.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "DigitalEndorser", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "DigitalEndorser", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "DigitalEndorserCounter", this.txtDigitalEndorserCounter.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "DigitalEndorserString", this.txtDigitalEndorserString.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "DigitalEndorserXOffset", double.Parse(this.txtDigitalEndorserXOffset.Text).ToString("F3"), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "DigitalEndorserYOffset", double.Parse(this.txtDigitalEndorserYOffset.Text).ToString("F3"), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "DigitalEndorserDirection", this.cboDigitalEndorserDirection.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "DigitalEndorserCountStep", this.cboDigitalEndorserCountStep.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "DigitalEndorserCountDirection", this.cboDigitalEndorserCountDirection.SelectedIndex.ToString(), ModuleScan.strFilePath);

                ModuleScan.WritePrivateProfileString("Scan", "JobControl", this.cboJobControl.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Binding", this.cboBinding.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "DoubleFeed", this.cboMultiFeed.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Filter", this.cboFilter.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "FilterSaturationSensitivity", this.txtFilterSaturationSensitivity.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "SkipWhitePage", this.txtSkipWhitePage.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "SkipBlackPage", this.txtSkipBlackPage.Text, ModuleScan.strFilePath);
                if(this.chkAutomaticSenseMedium.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "AutomaticSenseMedium", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "AutomaticSenseMedium", "0", ModuleScan.strFilePath);
                }
                if(this.chkAutoBright.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "AutoBright", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "AutoBright", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "BackgroundSmoothing", this.cboBackgroundSmoothing.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "BlankPageSkip", this.txtBlankPageSkip.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "JobControlMode", this.cboJobControlMode.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "DTCSensitivity", this.txtDTCSensitivity.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "BackgroundThreshold", this.txtBackgroundThreshold.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "CharacterThickness", this.txtCharacterThickness.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "SDTCSensitivity", this.txtSDTCSensitivity.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "NoiseRejection", this.txtNoiseRejection.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "ADTCThreshold", this.txtADTCThreshold.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "FadingCompensation", this.txtFadingCompensation.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Sharpness", this.cboSharpness.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "PunchHoleRemoval", this.cboPunchHoleRemoval.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "PunchHoleRemovalMode", this.cboPunchHoleRemovalMode.SelectedIndex.ToString(), ModuleScan.strFilePath);
                if(this.chksRGB.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "sRGB", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "sRGB", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "PatternRemoval", this.cboPatternRemoval.SelectedIndex.ToString(), ModuleScan.strFilePath);
                if(this.chkVerticalLineReduction.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "VerticalLineReduction", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "VerticalLineReduction", "0", ModuleScan.strFilePath);
                }
                if(this.chkAIQCNotice.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "AIQCNotice", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "AIQCNotice", "0", ModuleScan.strFilePath);
                }
                if (this.chkMultiFeedNotice.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "MultiFeedNotice", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "MultiFeedNotice", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "BackgroundSmoothness", this.txtBackgroundSmoothness.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "CropPriority", this.cboCropPriority.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Deskew", this.cboDeskew.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "DeskewBackground", this.cboDeskewBackground.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "DeskewMode", this.cboDeskewMode.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "BlankPageSkipMode", this.cboBlankPageSkipMode.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "BlankPageSkipTabPage", this.cboBlankPageSkipTabPage.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "BlankPageIgnoreAreaSize", this.txtBlankPageIgnoreAreaSize.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "CropMarginSize", double.Parse(this.txtCropMarginSize.Text).ToString("F1"), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "SelectOutputSize", this.cboSelectOutputSize.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "MultiFeedModeChangeSize", double.Parse(this.txtMultiFeedModeChangeSize.Text).ToString("F3"), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "LengthDetection", this.cboLengthDetection.SelectedIndex.ToString(), ModuleScan.strFilePath);

                if(this.chkAutoBorderDetection.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "AutoBorderDetection", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "AutoBorderDetection", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "BlankPageNotice", this.cboBlankPageNotice.SelectedIndex.ToString(), ModuleScan.strFilePath);
                if (this.chkHwCompression.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "HwCompression", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "HwCompression", "0", ModuleScan.strFilePath);
                }
                if (this.chkFrontBackMergingEnabled.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "FrontBackMergingEnabled", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "FrontBackMergingEnabled", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "FrontBackMergingLocation", this.cboFrontBackMergingLocation.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "FrontBackMergingRotation", this.cboFrontBackMergingRotation.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "FrontBackMergingTarget", this.cboFrontBackMergingTarget.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "FrontBackMergingTargetMode", this.cboFrontBackMergingTargetMode.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "FrontBackMergingTargetSize", double.Parse(this.txtFrontBackMergingTargetSize.Text).ToString("F3"), ModuleScan.strFilePath);
                if (this.chkDivideLongPage.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "DivideLongPage", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "DivideLongPage", "0", ModuleScan.strFilePath);
                }
                if (this.chkCharacterExtraction.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "CharacterExtraction", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "CharacterExtraction", "0", ModuleScan.strFilePath);
                }
                if (this.chkReversedTypeExtraction.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "ReversedTypeExtraction", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "ReversedTypeExtraction", "0", ModuleScan.strFilePath);
                }
                if (this.chkHalftoneRemoval.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "HalftoneRemoval", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "HalftoneRemoval", "0", ModuleScan.strFilePath);
                }
                if (this.chkStampRemoval.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "StampRemoval", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "StampRemoval", "0", ModuleScan.strFilePath);
                }
                if (this.chkSimpleSlicePatternRemoval.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "SimpleSlicePatternRemoval", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "SimpleSlicePatternRemoval", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "FrontBackDetection", this.cboFrontBackDetection.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "PaperProtection", this.cboPaperProtection.SelectedIndex.ToString(), ModuleScan.strFilePath);

                ModuleScan.WritePrivateProfileString("Scan", "ColorReproduction", this.cboColorReproduction.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "ColorReproductionBrightness", this.txtColorReproductionBrightness.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "ColorReproductionContrast", this.txtColorReproductionContrast.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "ColorReproductionHighlight", txtColorReproductionHighlight.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "ColorReproductionShadow", txtColorReproductionShadow.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "ColorReproductionCustomGamma", this.txtColorReproductionCustomGamma.Text, ModuleScan.strFilePath);
                if (this.chkAdjustRGB.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "AdjustRGB", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "AdjustRGB", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "AdjustRGBR", this.txtAdjustRGBR.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "AdjustRGBG", this.txtAdjustRGBG.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "AdjustRGBB", this.txtAdjustRGBB.Text, ModuleScan.strFilePath);

                if(this.MenuItemShowSourceUI.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "ShowSourceUI", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "ShowSourceUI", "0", ModuleScan.strFilePath);
                }
                if(this.MenuItemCloseSourceUI.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "CloseSourceUI", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "CloseSourceUI", "0", ModuleScan.strFilePath);
                }
                if(this.MenuItemSourceCurrentScan.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "SourceCurrentScan", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "SourceCurrentScan", "0", ModuleScan.strFilePath);
                }
                if(this.MenuItemSilentMode.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "SilentMode", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "SilentMode", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "CarrierSheetClippingMode", ModuleScan.intCarrierSheetClippingMode.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Report", ModuleScan.intReport.ToString(), ModuleScan.strFilePath);
                if(this.MenuItemIndicator.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Indicator", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Indicator", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "Highlight", txtHighlight.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Shadow", txtShadow.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "OverScan", cboOverScan.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Unit", cboUnit.SelectedIndex.ToString(), ModuleScan.strFilePath);

                if(this.chkBarcodeDetection.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeDetection", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeDetection", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "BarcodeDirection", this.cboBarcodeDirection.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "BarcodeRegionLeft", double.Parse(this.txtBarcodeRegionLeft.Text).ToString("F3"), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "BarcodeRegionTop", double.Parse(this.txtBarcodeRegionTop.Text).ToString("F3"), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "BarcodeRegionWidth", double.Parse(this.txtBarcodeRegionWidth.Text).ToString("F3"), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "BarcodeRegionLength", double.Parse(this.txtBarcodeRegionLength.Text).ToString("F3"), ModuleScan.strFilePath);
                if(this.chkEAN8.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_EAN8", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_EAN8", "0", ModuleScan.strFilePath);
                }
                if(this.chkEAN13.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_EAN13", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_EAN13", "0", ModuleScan.strFilePath);
                }
                if(this.chkCode3of9.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_Code3of9", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_Code3of9", "0", ModuleScan.strFilePath);
                }
                if(this.chkCode128.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_Code128", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_Code128", "0", ModuleScan.strFilePath);
                }
                if(this.chkITF.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_ITF", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_ITF", "0", ModuleScan.strFilePath);
                }
                if(this.chkUPCA.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_UPC-A", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_UPC-A", "0", ModuleScan.strFilePath);
                }
                if(this.chkCodabar.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_Codabar", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_Codabar", "0", ModuleScan.strFilePath);
                }
                if(this.chkPDF417.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_PDF417", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_PDF417", "0", ModuleScan.strFilePath);
                }
                if(this.chkQRCode.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_QRCode", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_QRCode", "0", ModuleScan.strFilePath);
                }
                if (this.chkDataMatrix.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_DataMatrix", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_DataMatrix", "0", ModuleScan.strFilePath);
                }
                if (this.chkAztecCode.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_AztecCode", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeType_AztecCode", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "BarcodeMaxSearchPriorities", this.txtBarcodeMaxSearchPriorities.Text, ModuleScan.strFilePath);
                if (this.chkBarcodeNotDetectionNotice.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeNotDetectionNotice", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "BarcodeNotDetectionNotice", "0", ModuleScan.strFilePath);
                }

                if(this.chkPatchCodeDetection.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "PatchCodeDetection", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "PatchCodeDetection", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "PatchCodeDirection", this.cboPatchCodeDirection.SelectedIndex.ToString(), ModuleScan.strFilePath);
                if(this.chkPatch1.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "PatchCodeType_Patch1", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "PatchCodeType_Patch1", "0", ModuleScan.strFilePath);
                }
                if(this.chkPatch2.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "PatchCodeType_Patch2", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "PatchCodeType_Patch2", "0", ModuleScan.strFilePath);
                }
                if(this.chkPatch3.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "PatchCodeType_Patch3", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "PatchCodeType_Patch3", "0", ModuleScan.strFilePath);
                }
                if(this.chkPatch4.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "PatchCodeType_Patch4", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "PatchCodeType_Patch4", "0", ModuleScan.strFilePath);
                }
                if(this.chkPatch6.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "PatchCodeType_Patch6", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "PatchCodeType_Patch6", "0", ModuleScan.strFilePath);
                }
                if(this.chkPatchT.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "PatchCodeType_PatchT", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "PatchCodeType_PatchT", "0", ModuleScan.strFilePath);
                }

                ModuleScan.WritePrivateProfileString("Scan", "EdgeFiller", this.cboEdgeFiller.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "EdgeFillerTop", double.Parse(this.txtEdgeFillerTop.Text).ToString("F3"), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "EdgeFillerBottom", double.Parse(this.txtEdgeFillerBottom.Text).ToString("F3"), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "EdgeFillerLeft", double.Parse(this.txtEdgeFillerLeft.Text).ToString("F3"), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "EdgeFillerRight", double.Parse(this.txtEdgeFillerRight.Text).ToString("F3"), ModuleScan.strFilePath);
                if(this.chkEdgeRepair.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "EdgeRepair", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "EdgeRepair", "0", ModuleScan.strFilePath);
                }

                ModuleScan.WritePrivateProfileString("Scan", "MultiStreamMode", this.cboMultiStreamMode.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "MultiStreamFileNameMode", this.cboMultiStreamFileNameMode.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "MultiStreamDefaultValueMode", this.cboMultiStreamDefaultValueMode.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1PixelType", this.cboStream1PixelType.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1FileType", this.cboStream1FileType.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1CompressionType", this.cboStream1CompressionType.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1Resolution", this.cboStream1Resolution.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1CustomResolution", this.txtStream1CustomResolution.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "FileCounter1", this.txtFileCounter1.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "FileName1", this.txtFileName1.Text, ModuleScan.strFilePath);
                if (this.chkStream1AutoBright.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream1AutoBright", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream1AutoBright", "0", ModuleScan.strFilePath);
                }
                if (this.chkStream1Reverse.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream1Reverse", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream1Reverse", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "Stream1Gamma", this.cboStream1Gamma.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1GammaFile", this.txtStream1GammaFile.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1Brightness", this.txtStream1Brightness.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1Contrast", this.txtStream1Contrast.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1CustomGamma", this.txtStream1CustomGamma.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1Background", this.cboStream1Background.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1Sharpness", this.cboStream1Sharpness.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1Threshold", this.txtStream1Threshold.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1DTCSensitivity", this.txtStream1DTCSensitivity.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1BackgroundThreshold", this.txtStream1BackgroundThreshold.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1CharacterThickness", this.txtStream1CharacterThickness.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1FadingCompensation", this.txtStream1FadingCompensation.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1NoiseRejection", this.txtStream1NoiseRejection.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1PatternRemoval", this.cboStream1PatternRemoval.SelectedIndex.ToString(), ModuleScan.strFilePath);
                if (this.chkStream1CharacterExtraction.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream1CharacterExtraction", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream1CharacterExtraction", "0", ModuleScan.strFilePath);
                }
                if (this.chkStream1ReversedTypeExtraction.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream1ReversedTypeExtraction", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream1ReversedTypeExtraction", "0", ModuleScan.strFilePath);
                }
                if (this.chkStream1HalftoneRemoval.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream1HalftoneRemoval", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream1HalftoneRemoval", "0", ModuleScan.strFilePath);
                }
                if (this.chkStream1StampRemoval.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream1StampRemoval", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream1StampRemoval", "0", ModuleScan.strFilePath);
                }
                if (this.chkStream1SimpleSlicePatternRemoval.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream1SimpleSlicePatternRemoval", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream1SimpleSlicePatternRemoval", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "Stream1ADTCThreshold", this.txtStream1ADTCThreshold.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1SDTCSensitivity", this.txtStream1SDTCSensitivity.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1Halftone", this.cboStream1Halftone.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1HalftoneFile", this.txtStream1HalftoneFile.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1SEE", this.cboStream1SEE.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1Filter", this.cboStream1Filter.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1FilterSaturationSensitivity", this.txtStream1FilterSaturationSensitivity.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1Highlight", txtStream1Highlight.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1Shadow", txtStream1Shadow.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1BackgroundSmoothing", this.cboStream1BackgroundSmoothing.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1BackgroundSmoothness", this.txtStream1BackgroundSmoothness.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1ColorReproduction", this.cboStream1ColorReproduction.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1ColorReproductionBrightness", this.txtStream1ColorReproductionBrightness.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1ColorReproductionContrast", this.txtStream1ColorReproductionContrast.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1ColorReproductionHighlight", txtStream1ColorReproductionHighlight.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1ColorReproductionShadow", txtStream1ColorReproductionShadow.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1ColorReproductionCustomGamma", this.txtStream1ColorReproductionCustomGamma.Text, ModuleScan.strFilePath);
                if (this.chkStream1AdjustRGB.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream1AdjustRGB", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream1AdjustRGB", "0", ModuleScan.strFilePath);
                }
                if (this.chkStream1sRGB.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream1sRGB", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream1sRGB", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "Stream1AdjustRGBR", this.txtStream1AdjustRGBR.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1AdjustRGBG", this.txtStream1AdjustRGBG.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream1AdjustRGBB", this.txtStream1AdjustRGBB.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2PixelType", this.cboStream2PixelType.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2FileType", this.cboStream2FileType.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2CompressionType", this.cboStream2CompressionType.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2Resolution", this.cboStream2Resolution.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2CustomResolution", this.txtStream2CustomResolution.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "FileCounter2", this.txtFileCounter2.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "FileName2", this.txtFileName2.Text, ModuleScan.strFilePath);
                if (this.chkStream2AutoBright.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream2AutoBright", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream2AutoBright", "0", ModuleScan.strFilePath);
                }
                if (this.chkStream2Reverse.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream2Reverse", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream2Reverse", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "Stream2Gamma", this.cboStream2Gamma.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2GammaFile", this.txtStream2GammaFile.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2Brightness", this.txtStream2Brightness.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2Contrast", this.txtStream2Contrast.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2CustomGamma", this.txtStream2CustomGamma.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2Background", this.cboStream2Background.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2Sharpness", this.cboStream2Sharpness.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2Threshold", this.txtStream2Threshold.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2DTCSensitivity", this.txtStream2DTCSensitivity.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2BackgroundThreshold", this.txtStream2BackgroundThreshold.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2CharacterThickness", this.txtStream2CharacterThickness.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2FadingCompensation", this.txtStream2FadingCompensation.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2NoiseRejection", this.txtStream2NoiseRejection.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2PatternRemoval", this.cboStream2PatternRemoval.SelectedIndex.ToString(), ModuleScan.strFilePath);
                if (this.chkStream2CharacterExtraction.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream2CharacterExtraction", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream2CharacterExtraction", "0", ModuleScan.strFilePath);
                }
                if (this.chkStream2ReversedTypeExtraction.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream2ReversedTypeExtraction", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream2ReversedTypeExtraction", "0", ModuleScan.strFilePath);
                }
                if (this.chkStream2HalftoneRemoval.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream2HalftoneRemoval", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream2HalftoneRemoval", "0", ModuleScan.strFilePath);
                }
                if (this.chkStream2StampRemoval.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream2StampRemoval", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream2StampRemoval", "0", ModuleScan.strFilePath);
                }
                if (this.chkStream2SimpleSlicePatternRemoval.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream2SimpleSlicePatternRemoval", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream2SimpleSlicePatternRemoval", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "Stream2ADTCThreshold", this.txtStream2ADTCThreshold.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2SDTCSensitivity", this.txtStream2SDTCSensitivity.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2Halftone", this.cboStream2Halftone.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2HalftoneFile", this.txtStream2HalftoneFile.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2SEE", this.cboStream2SEE.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2Filter", this.cboStream2Filter.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2FilterSaturationSensitivity", this.txtStream2FilterSaturationSensitivity.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2Highlight", txtStream2Highlight.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2Shadow", txtStream2Shadow.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2BackgroundSmoothing", this.cboStream2BackgroundSmoothing.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2BackgroundSmoothness", this.txtStream2BackgroundSmoothness.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2ColorReproduction", this.cboStream2ColorReproduction.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2ColorReproductionBrightness", this.txtStream2ColorReproductionBrightness.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2ColorReproductionContrast", this.txtStream2ColorReproductionContrast.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2ColorReproductionHighlight", txtStream2ColorReproductionHighlight.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2ColorReproductionShadow", txtStream2ColorReproductionShadow.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2ColorReproductionCustomGamma", this.txtStream2ColorReproductionCustomGamma.Text, ModuleScan.strFilePath);
                if (this.chkStream2AdjustRGB.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream2AdjustRGB", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream2AdjustRGB", "0", ModuleScan.strFilePath);
                }
                if (this.chkStream2sRGB.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream2sRGB", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream2sRGB", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "Stream2AdjustRGBR", this.txtStream2AdjustRGBR.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2AdjustRGBG", this.txtStream2AdjustRGBG.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream2AdjustRGBB", this.txtStream2AdjustRGBB.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3PixelType", this.cboStream3PixelType.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3FileType", this.cboStream3FileType.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3CompressionType", this.cboStream3CompressionType.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3Resolution", this.cboStream3Resolution.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3CustomResolution", this.txtStream3CustomResolution.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "FileCounter3", this.txtFileCounter3.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "FileName3", this.txtFileName3.Text, ModuleScan.strFilePath);
                if (this.chkStream3AutoBright.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream3AutoBright", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream3AutoBright", "0", ModuleScan.strFilePath);
                }
                if (this.chkStream3Reverse.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream3Reverse", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream3Reverse", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "Stream3Gamma", this.cboStream3Gamma.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3GammaFile", this.txtStream3GammaFile.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3Brightness", this.txtStream3Brightness.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3Contrast", this.txtStream3Contrast.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3CustomGamma", this.txtStream3CustomGamma.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3Background", this.cboStream3Background.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3Sharpness", this.cboStream3Sharpness.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3Threshold", this.txtStream3Threshold.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3DTCSensitivity", this.txtStream3DTCSensitivity.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3BackgroundThreshold", this.txtStream3BackgroundThreshold.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3CharacterThickness", this.txtStream3CharacterThickness.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3FadingCompensation", this.txtStream3FadingCompensation.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3NoiseRejection", this.txtStream3NoiseRejection.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3PatternRemoval", this.cboStream3PatternRemoval.SelectedIndex.ToString(), ModuleScan.strFilePath);
                if (this.chkStream3CharacterExtraction.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream3CharacterExtraction", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream3CharacterExtraction", "0", ModuleScan.strFilePath);
                }
                if (this.chkStream3ReversedTypeExtraction.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream3ReversedTypeExtraction", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream3ReversedTypeExtraction", "0", ModuleScan.strFilePath);
                }
                if (this.chkStream3HalftoneRemoval.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream3HalftoneRemoval", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream3HalftoneRemoval", "0", ModuleScan.strFilePath);
                }
                if (this.chkStream3StampRemoval.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream3StampRemoval", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream3StampRemoval", "0", ModuleScan.strFilePath);
                }
                if (this.chkStream3SimpleSlicePatternRemoval.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream3SimpleSlicePatternRemoval", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream3SimpleSlicePatternRemoval", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "Stream3ADTCThreshold", this.txtStream3ADTCThreshold.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3SDTCSensitivity", this.txtStream3SDTCSensitivity.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3Halftone", this.cboStream3Halftone.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3HalftoneFile", this.txtStream3HalftoneFile.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3SEE", this.cboStream3SEE.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3Filter", this.cboStream3Filter.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3FilterSaturationSensitivity", this.txtStream3FilterSaturationSensitivity.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3Highlight", txtStream3Highlight.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3Shadow", txtStream3Shadow.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3BackgroundSmoothing", this.cboStream3BackgroundSmoothing.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3BackgroundSmoothness", this.txtStream3BackgroundSmoothness.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3ColorReproduction", this.cboStream3ColorReproduction.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3ColorReproductionBrightness", this.txtStream3ColorReproductionBrightness.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3ColorReproductionContrast", this.txtStream3ColorReproductionContrast.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3ColorReproductionHighlight", txtStream3ColorReproductionHighlight.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3ColorReproductionShadow", txtStream3ColorReproductionShadow.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3ColorReproductionCustomGamma", this.txtStream3ColorReproductionCustomGamma.Text, ModuleScan.strFilePath);
                if (this.chkStream3AdjustRGB.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream3AdjustRGB", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream3AdjustRGB", "0", ModuleScan.strFilePath);
                }
                if (this.chkStream3sRGB.Checked == true)
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream3sRGB", "1", ModuleScan.strFilePath);
                }
                else
                {
                    ModuleScan.WritePrivateProfileString("Scan", "Stream3sRGB", "0", ModuleScan.strFilePath);
                }
                ModuleScan.WritePrivateProfileString("Scan", "Stream3AdjustRGBR", this.txtStream3AdjustRGBR.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3AdjustRGBG", this.txtStream3AdjustRGBG.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "Stream3AdjustRGBB", this.txtStream3AdjustRGBB.Text, ModuleScan.strFilePath);

                ModuleScan.WritePrivateProfileString("Scan", "AutoProfile", formAutoProfile.cboAutoProfile.SelectedIndex.ToString(), ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "AutoProfileSensitivity", formAutoProfile.txtAutoProfileSensitivity.Text, ModuleScan.strFilePath);
                ModuleScan.WritePrivateProfileString("Scan", "ManualFeedMode", this.cboManualFeedMode.SelectedIndex.ToString(), ModuleScan.strFilePath);

            }
            catch (System.Exception)
            {
                MessageBox.Show("It cannot write in a file.", "fiScanTest");
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : A default value is used when reading of a ini file goes wrong
        //   Argument    : Nothing
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void DefaultSet()
        {
            this.cboScanTo.SelectedIndex = ModuleScan.TYPE_FILE;
            this.cboFileType.SelectedIndex = ModuleScan.FILE_TIF;
            this.txtFileName.Text = ModuleScan.strDirPath + "\\image#####";
            this.cboOverwrite.SelectedIndex = ModuleScan.OW_CONFIRM;
            this.txtFileCounter.Text = "1";
            this.cboCompType.SelectedIndex = ModuleScan.COMP_MMR;
            this.cboJpegQuality.SelectedIndex = ModuleScan.COMP_JPEG4;
            this.cboScanMode.SelectedIndex = ModuleScan.SM_NORMAL;
            this.chkScanContinue.Checked = false;
            this.cboScanContinueMode.SelectedIndex = 0;
            this.cboPaperSupply.SelectedIndex = ModuleScan.ADF;
            this.txtScanCount.Text = "-1";
            this.cboPaperSize.SelectedIndex = ModuleScan.PSIZE_A4;
            this.chkLongPage.Checked = false;
            this.cboOrientation.SelectedIndex = ModuleScan.PORTRAIT;
            this.txtCustomPaperWidth.Text = "8.268";
            this.txtCustomPaperLength.Text = "11.693";
            this.txtRegionLeft.Text = "0";
            this.txtRegionTop.Text = "0";
            this.txtRegionWidth.Text = "0";
            this.txtRegionLength.Text = "0";
            this.chkUndefinedScanning.Checked = false;
            this.cboBackgroundColor.SelectedIndex = ModuleScan.NONE;
            this.cboPixelType.SelectedIndex = ModuleScan.PIXEL_BLACK_WHITE;
            this.txtAutomaticColorSensitivity.Text = "0";
            this.cboAutomaticColorBackground.SelectedIndex = 0;
            this.cboResolution.SelectedIndex = ModuleScan.RS_300;
            this.txtCustomResolution.Text = "300";
            this.txtBrightness.Text = "128";
            this.txtContrast.Text = "128";
            this.txtThreshold.Text = "128";
            this.chkReverse.Checked = false;
            this.chkMirroring.Checked = false;
            this.cboRotation.SelectedIndex = ModuleScan.RT_NONE;
            this.cboAutomaticRotateMode.SelectedIndex = ModuleScan.ARM_STANDARD;
            this.cboBackground.SelectedIndex = ModuleScan.MODE_OFF;
            this.cboOutline.SelectedIndex = ModuleScan.NONE;
            this.cboHalftone.SelectedIndex = ModuleScan.NONE;
            this.txtHalftoneFile.Text = "";
            this.cboGamma.SelectedIndex = ModuleScan.NONE;
            this.txtGammaFile.Text = "";
            this.txtCustomGamma.Text = "2.2";
            this.cboAutoSeparation.SelectedIndex = ModuleScan.AS_OFF;
            this.cboSEE.SelectedIndex = ModuleScan.SEE_OFF;
            this.chkVerticalLineReduction.Checked = false;
            this.cboThresholdCurve.SelectedIndex = ModuleScan.TH_CURVE1;
            this.cboNoiseRemoval.SelectedIndex = 0;
            this.chkPreFiltering.Checked = false;
            this.chkSmoothing.Checked = false;
            this.chkAIQCNotice.Checked = false;
            this.chkMultiFeedNotice.Checked = false;
            this.txtBackgroundSmoothness.Text = "5";
            this.cboCropPriority.SelectedIndex = 0;
            this.cboDeskew.SelectedIndex = 2;
            this.cboDeskewBackground.SelectedIndex = 1;
            this.cboDeskewMode.SelectedIndex = 1;
            this.cboBlankPageSkipMode.SelectedIndex = 0;
            this.cboBlankPageSkipTabPage.SelectedIndex = 0;
            this.txtBlankPageIgnoreAreaSize.Text = "16";
            this.txtCropMarginSize.Text = "0";
            this.cboSelectOutputSize.SelectedIndex = ModuleScan.SOS_MARGIN;
            this.txtMultiFeedModeChangeSize.Text = "0";
            this.cboLengthDetection.SelectedIndex = 0;
            this.chkEndorser.Checked = false;
            this.cboEndorserDialog.SelectedIndex = ModuleScan.EDD_OFF;
            this.txtEndorserCounter.Text = "0";
            this.txtEndorserString.Text = "";
            this.txtEndorserOffset.Text = "0";
            this.cboEndorserDirection.SelectedIndex = 1;
            this.cboEndorserCountStep.SelectedIndex = 1;
            this.cboEndorserCountDirection.SelectedIndex = 0;
            this.cboEndorserFont.SelectedIndex = ModuleScan.EDF_HORIZONTAL;
            this.chkSynchronizationDigitalEndorser.Checked = false;
            this.chkEndorser.Enabled = true;
            this.cboEndorserDialog.Enabled = false;
            this.txtEndorserCounter.Enabled = false;
            this.txtEndorserString.Enabled = false;
            this.txtEndorserOffset.Enabled = false;
            this.cboEndorserDirection.Enabled = false;
            this.cboEndorserCountStep.Enabled = false;
            this.cboEndorserCountDirection.Enabled = false;
            this.cboEndorserFont.Enabled = false;
            this.chkSynchronizationDigitalEndorser.Enabled = false;
            this.chkDigitalEndorser.Checked = false;
            this.txtDigitalEndorserCounter.Text = "0";
            this.txtDigitalEndorserString.Text = "";
            this.txtDigitalEndorserXOffset.Text = "0";
            this.txtDigitalEndorserYOffset.Text = "0";
            this.cboDigitalEndorserDirection.SelectedIndex = 0;
            this.cboDigitalEndorserCountStep.SelectedIndex = 1;
            this.cboDigitalEndorserCountDirection.SelectedIndex = 0;
            this.chkDigitalEndorser.Enabled = true;
            this.txtDigitalEndorserCounter.Enabled = false;
            this.txtDigitalEndorserString.Enabled = false;
            this.txtDigitalEndorserXOffset.Enabled = false;
            this.txtDigitalEndorserYOffset.Enabled = false;
            this.cboDigitalEndorserDirection.Enabled = false;
            this.cboDigitalEndorserCountStep.Enabled = false;
            this.cboDigitalEndorserCountDirection.Enabled = false;
            this.cboJobControl.SelectedIndex = ModuleScan.NONE;
            this.cboBinding.SelectedIndex = 0;
            this.cboMultiFeed.SelectedIndex = 0;
            this.cboFilter.SelectedIndex = ModuleScan.FILTER_GREEN;
            this.txtFilterSaturationSensitivity.Text = "50";
            this.txtSkipWhitePage.Text = "0";
            this.txtSkipBlackPage.Text = "0";
            this.chkAutoBorderDetection.Checked = false;
            this.cboBlankPageNotice.SelectedIndex = 0;
            this.chkHwCompression.Checked = false;
            this.chkFrontBackMergingEnabled.Checked = false;
            this.cboFrontBackMergingLocation.SelectedIndex = ModuleScan.FBML_RIGHT;
            this.cboFrontBackMergingRotation.SelectedIndex = ModuleScan.FBMR_NONE;
            this.cboFrontBackMergingTarget.SelectedIndex = ModuleScan.FBMT_ALL;
            this.cboFrontBackMergingTargetMode.SelectedIndex = ModuleScan.FBMTM_INDEX_CUSTOM;
            this.chkDivideLongPage.Checked = false;
            this.chkAutomaticSenseMedium.Checked = false;
            this.cboBackgroundSmoothing.SelectedIndex = 0;
            this.chkAutoBright.Checked = false;
            this.cboJobControlMode.SelectedIndex = ModuleScan.JCM_SPECIAL_DOCUMENT;
            this.txtBlankPageSkip.Text = "0";
            this.txtDTCSensitivity.Text = "50";
            this.txtBackgroundThreshold.Text = "50";
            this.txtCharacterThickness.Text = "5";
            this.txtSDTCSensitivity.Text = "2";
            this.txtNoiseRejection.Text = "0";
            this.txtADTCThreshold.Text = "83";
            this.cboSharpness.SelectedIndex = ModuleScan.SH_NONE;
            this.txtFadingCompensation.Text = "0";
            this.chksRGB.Checked = false;
            this.cboPunchHoleRemoval.SelectedIndex = ModuleScan.PHR_DO_NOT_REMOVE;
            this.cboPunchHoleRemovalMode.SelectedIndex = ModuleScan.PHRM_STANDARD;
            this.cboPatternRemoval.SelectedIndex = 1;
            this.chkCharacterExtraction.Checked = false;
            this.chkReversedTypeExtraction.Checked = true;
            this.chkHalftoneRemoval.Checked = true;
            this.chkStampRemoval.Checked = true;
            this.chkSimpleSlicePatternRemoval.Checked = false;
            this.cboFrontBackDetection.SelectedIndex = ModuleScan.FBD_NONE;
            this.cboPaperProtection.SelectedIndex = ModuleScan.PP_DRIVERSETTING;
            this.cboColorReproduction.SelectedIndex = ModuleScan.CR_CONTRAST;
            this.txtColorReproductionBrightness.Text = "128";
            this.txtColorReproductionContrast.Text = "128";
            this.txtColorReproductionHighlight.Text = "255";
            this.txtColorReproductionShadow.Text = "0";
            this.txtColorReproductionCustomGamma.Text = "1.0";
            this.chkAdjustRGB.Checked = false;
            this.txtAdjustRGBR.Text = "128";
            this.txtAdjustRGBG.Text = "128";
            this.txtAdjustRGBB.Text = "128";
            this.chkBarcodeDetection.Checked = false;
            this.cboBarcodeDirection.SelectedIndex = ModuleScan.BD_HORIZONTAL_VERTICAL;
            this.txtBarcodeRegionLeft.Text = "0";
            this.txtBarcodeRegionTop.Text = "0";
            this.txtBarcodeRegionWidth.Text = "0";
            this.txtBarcodeRegionLength.Text = "0";
            this.chkEAN8.Checked = true;
            this.chkEAN13.Checked = true;
            this.chkCode3of9.Checked = true;
            this.chkCode128.Checked = true;
            this.chkITF.Checked = true;
            this.chkUPCA.Checked = true;
            this.chkCodabar.Checked = true;
            this.chkPDF417.Checked = true;
            this.chkQRCode.Checked = true;
            this.chkDataMatrix.Checked = false;
            this.chkAztecCode.Checked = false;
            this.txtBarcodeMaxSearchPriorities.Text = "1";
            this.chkBarcodeNotDetectionNotice.Checked = false;
            this.cboBarcodeDirection.Enabled = false;
            this.txtBarcodeRegionLeft.Enabled = false;
            this.txtBarcodeRegionTop.Enabled = false;
            this.txtBarcodeRegionWidth.Enabled = false;
            this.txtBarcodeRegionLength.Enabled = false;
            this.chkEAN8.Enabled = false;
            this.chkEAN13.Enabled = false;
            this.chkCode3of9.Enabled = false;
            this.chkCode128.Enabled = false;
            this.chkITF.Enabled = false;
            this.chkUPCA.Enabled = false;
            this.chkCodabar.Enabled = false;
            this.chkPDF417.Enabled = false;
            this.chkQRCode.Enabled = false;
            this.chkDataMatrix.Enabled = false;
            this.chkAztecCode.Enabled = false;
            this.txtBarcodeMaxSearchPriorities.Enabled = false;
            this.chkBarcodeNotDetectionNotice.Enabled = false;
            this.chkPatchCodeDetection.Checked = false;
            this.cboPatchCodeDirection.SelectedIndex = ModuleScan.PD_VERTICAL;
            this.chkPatch1.Checked = true;
            this.chkPatch2.Checked = true;
            this.chkPatch3.Checked = true;
            this.chkPatch4.Checked = true;
            this.chkPatch6.Checked = true;
            this.chkPatchT.Checked = true;
            this.cboEdgeFiller.SelectedIndex = ModuleScan.EF_OFF;
            this.txtEdgeFillerTop.Text = "0";
            this.txtEdgeFillerBottom.Text = "0";
            this.txtEdgeFillerLeft.Text = "0";
            this.txtEdgeFillerRight.Text = "0";
            this.chkEdgeRepair.Checked = false;

            this.MenuItemShowSourceUI.Checked = false;
            this.MenuItemCloseSourceUI.Checked = false;
            this.MenuItemSourceCurrentScan.Checked = false;
            this.MenuItemTWAINTemplate.Enabled = this.MenuItemSourceCurrentScan.Checked;
            this.MenuItemSilentMode.Checked = false;
            ModuleScan.intCarrierSheetClippingMode = ModuleScan.CSCM_DRIVERSETTING;
            this.MenuItemCarrierSheetClippingModeContent.Checked = false;
            this.MenuItemCarrierSheetClippingModeEdge.Checked = false;
            this.MenuItemCarrierSheetClippingModeDriverSetting.Checked = true;
            ModuleScan.intReport = ModuleScan.NONE;
            this.MenuItemReportOFF.Checked = true;
            this.MenuItemReportDisplay.Checked = false;
            this.MenuItemReportFile.Checked = false;
            this.MenuItemReportBoth.Checked = false;
            this.MenuItemIndicator.Checked = true;
            this.MenuItemShowEvent.Checked = false;
            this.MenuItemOutputResult.Checked = false;

            if (Int32.Parse(this.txtShadow.Text) >= 230)
            {
                this.txtShadow.Text = "10";
                this.txtHighlight.Text = "230";
            }
            else
            {
                this.txtHighlight.Text = "230";
                this.txtShadow.Text = "10";
            }
            this.txtHighlight.Enabled = false;
            this.txtShadow.Enabled = false;
            this.cboOverScan.SelectedIndex = ModuleScan.OVERSCAN_OFF;
            this.cboUnit.SelectedIndex = ModuleScan.UNIT_INCHES;
            this.txtFrontBackMergingTargetSize.Text = "1";

            this.cboMultiStreamMode.SelectedIndex = ModuleScan.MSM_OFF;
            this.cboMultiStreamFileNameMode.SelectedIndex = ModuleScan.MSFNM_OFF;
            this.cboMultiStreamDefaultValueMode.SelectedIndex = ModuleScan.MSDVM_OFF;
            this.cboStream1PixelType.SelectedIndex = ModuleScan.PIXEL_BLACK_WHITE;
            this.cboStream1FileType.SelectedIndex = ModuleScan.FILE_TIF;
            this.cboStream1CompressionType.SelectedIndex = ModuleScan.COMP_MMR;
            this.cboStream1Resolution.SelectedIndex = ModuleScan.RS_300;
            this.txtStream1CustomResolution.Text = "300";
            this.txtFileCounter1.Text = "1";
            this.txtFileName1.Text = ModuleScan.strDirPath + "\\image1_#####";
            this.chkStream1AutoBright.Checked = false;
            this.chkStream1Reverse.Checked = false;
            this.cboStream1Gamma.SelectedIndex = ModuleScan.NONE;
            this.txtStream1GammaFile.Text = "";
            this.txtStream1Brightness.Text = "128";
            this.txtStream1Contrast.Text = "128";
            this.txtStream1CustomGamma.Text = "2.2";
            this.cboStream1Background.SelectedIndex = ModuleScan.MODE_OFF;
            this.cboStream1Sharpness.SelectedIndex = ModuleScan.SH_NONE;
            this.txtStream1Threshold.Text = "128";
            this.txtStream1DTCSensitivity.Text = "50";
            this.txtStream1BackgroundThreshold.Text = "50";
            this.txtStream1CharacterThickness.Text = "5";
            this.txtStream1FadingCompensation.Text = "0";
            this.txtStream1NoiseRejection.Text = "0";
            this.cboStream1PatternRemoval.SelectedIndex = 1;
            this.chkStream1CharacterExtraction.Checked = false;
            this.chkStream1ReversedTypeExtraction.Checked = true;
            this.chkStream1HalftoneRemoval.Checked = true;
            this.chkStream1StampRemoval.Checked = true;
            this.chkStream1SimpleSlicePatternRemoval.Checked = false;
            this.txtStream1ADTCThreshold.Text = "83";
            this.txtStream1SDTCSensitivity.Text = "2";
            this.cboStream1Halftone.SelectedIndex = ModuleScan.NONE;
            this.txtStream1HalftoneFile.Text = "";
            this.cboStream1SEE.SelectedIndex = ModuleScan.SEE_OFF;
            this.cboStream1Filter.SelectedIndex = ModuleScan.FILTER_GREEN;
            this.txtStream1FilterSaturationSensitivity.Text = "50";
            if (Int32.Parse(this.txtStream1Shadow.Text) >= 230)
            {
                this.txtStream1Shadow.Text = "10";
                this.txtStream1Highlight.Text = "230";
            }
            else
            {
                this.txtStream1Highlight.Text = "230";
                this.txtStream1Shadow.Text = "10";
            }
            this.cboStream1BackgroundSmoothing.SelectedIndex = 0;
            this.txtStream1BackgroundSmoothness.Text = "5";
            this.cboStream1ColorReproduction.SelectedIndex = ModuleScan.CR_CONTRAST;
            this.txtStream1ColorReproductionBrightness.Text = "128";
            this.txtStream1ColorReproductionContrast.Text = "128";
            this.txtStream1ColorReproductionHighlight.Text = "255";
            this.txtStream1ColorReproductionShadow.Text = "0";
            this.txtStream1ColorReproductionCustomGamma.Text = "1.0";
            this.chkStream1AdjustRGB.Checked = false;
            this.chkStream1sRGB.Checked = false;
            this.txtStream1AdjustRGBR.Text = "128";
            this.txtStream1AdjustRGBG.Text = "128";
            this.txtStream1AdjustRGBB.Text = "128";
            this.cboStream2PixelType.SelectedIndex = ModuleScan.PIXEL_BLACK_WHITE;
            this.cboStream2FileType.SelectedIndex = ModuleScan.FILE_TIF;
            this.cboStream2CompressionType.SelectedIndex = ModuleScan.COMP_MMR;
            this.cboStream2Resolution.SelectedIndex = ModuleScan.RS_300;
            this.txtStream2CustomResolution.Text = "300";
            this.txtFileCounter2.Text = "1";
            this.txtFileName2.Text = ModuleScan.strDirPath + "\\image2_#####";
            this.chkStream2AutoBright.Checked = false;
            this.chkStream2Reverse.Checked = false;
            this.cboStream2Gamma.SelectedIndex = ModuleScan.NONE;
            this.txtStream2GammaFile.Text = "";
            this.txtStream2Brightness.Text = "128";
            this.txtStream2Contrast.Text = "128";
            this.txtStream2CustomGamma.Text = "2.2";
            this.cboStream2Background.SelectedIndex = ModuleScan.MODE_OFF;
            this.cboStream2Sharpness.SelectedIndex = ModuleScan.SH_NONE;
            this.txtStream2Threshold.Text = "128";
            this.txtStream2DTCSensitivity.Text = "50";
            this.txtStream2BackgroundThreshold.Text = "50";
            this.txtStream2CharacterThickness.Text = "5";
            this.txtStream2FadingCompensation.Text = "0";
            this.txtStream2NoiseRejection.Text = "0";
            this.cboStream2PatternRemoval.SelectedIndex = 1;
            this.chkStream2CharacterExtraction.Checked = false;
            this.chkStream2ReversedTypeExtraction.Checked = true;
            this.chkStream2HalftoneRemoval.Checked = true;
            this.chkStream2StampRemoval.Checked = true;
            this.chkStream2SimpleSlicePatternRemoval.Checked = false;
            this.txtStream2ADTCThreshold.Text = "83";
            this.txtStream2SDTCSensitivity.Text = "2";
            this.cboStream2Halftone.SelectedIndex = ModuleScan.NONE;
            this.txtStream2HalftoneFile.Text = "";
            this.cboStream2SEE.SelectedIndex = ModuleScan.SEE_OFF;
            this.cboStream2Filter.SelectedIndex = ModuleScan.FILTER_GREEN;
            this.txtStream2FilterSaturationSensitivity.Text = "50";
            if (Int32.Parse(this.txtStream2Shadow.Text) >= 230)
            {
                this.txtStream2Shadow.Text = "10";
                this.txtStream2Highlight.Text = "230";
            }
            else
            {
                this.txtStream2Highlight.Text = "230";
                this.txtStream2Shadow.Text = "10";
            }
            this.cboStream2BackgroundSmoothing.SelectedIndex = 0;
            this.txtStream2BackgroundSmoothness.Text = "5";
            this.cboStream2ColorReproduction.SelectedIndex = ModuleScan.CR_CONTRAST;
            this.txtStream2ColorReproductionBrightness.Text = "128";
            this.txtStream2ColorReproductionContrast.Text = "128";
            this.txtStream2ColorReproductionHighlight.Text = "255";
            this.txtStream2ColorReproductionShadow.Text = "0";
            this.txtStream2ColorReproductionCustomGamma.Text = "1.0";
            this.chkStream2AdjustRGB.Checked = false;
            this.chkStream2sRGB.Checked = false;
            this.txtStream2AdjustRGBR.Text = "128";
            this.txtStream2AdjustRGBG.Text = "128";
            this.txtStream2AdjustRGBB.Text = "128";
            this.cboStream3PixelType.SelectedIndex = ModuleScan.PIXEL_BLACK_WHITE;
            this.cboStream3FileType.SelectedIndex = ModuleScan.FILE_TIF;
            this.cboStream3CompressionType.SelectedIndex = ModuleScan.COMP_MMR;
            this.cboStream3Resolution.SelectedIndex = ModuleScan.RS_300;
            this.txtStream3CustomResolution.Text = "300";
            this.txtFileCounter3.Text = "1";
            this.txtFileName3.Text = ModuleScan.strDirPath + "\\image3_#####";
            this.chkStream3AutoBright.Checked = false;
            this.chkStream3Reverse.Checked = false;
            this.cboStream3Gamma.SelectedIndex = ModuleScan.NONE;
            this.txtStream3GammaFile.Text = "";
            this.txtStream3Brightness.Text = "128";
            this.txtStream3Contrast.Text = "128";
            this.txtStream3CustomGamma.Text = "2.2";
            this.cboStream3Background.SelectedIndex = ModuleScan.MODE_OFF;
            this.cboStream3Sharpness.SelectedIndex = ModuleScan.SH_NONE;
            this.txtStream3Threshold.Text = "128";
            this.txtStream3DTCSensitivity.Text = "50";
            this.txtStream3BackgroundThreshold.Text = "50";
            this.txtStream3CharacterThickness.Text = "5";
            this.txtStream3FadingCompensation.Text = "0";
            this.txtStream3NoiseRejection.Text = "0";
            this.cboStream3PatternRemoval.SelectedIndex = 1;
            this.chkStream3CharacterExtraction.Checked = false;
            this.chkStream3ReversedTypeExtraction.Checked = true;
            this.chkStream3HalftoneRemoval.Checked = true;
            this.chkStream3StampRemoval.Checked = true;
            this.chkStream3SimpleSlicePatternRemoval.Checked = false;
            this.txtStream3ADTCThreshold.Text = "83";
            this.txtStream3SDTCSensitivity.Text = "2";
            this.cboStream3Halftone.SelectedIndex = ModuleScan.NONE;
            this.txtStream3HalftoneFile.Text = "";
            this.cboStream3SEE.SelectedIndex = ModuleScan.SEE_OFF;
            this.cboStream3Filter.SelectedIndex = ModuleScan.FILTER_GREEN;
            this.txtStream3FilterSaturationSensitivity.Text = "50";
            if (Int32.Parse(this.txtStream3Shadow.Text) >= 230)
            {
                this.txtStream3Shadow.Text = "10";
                this.txtStream3Highlight.Text = "230";
            }
            else
            {
                this.txtStream3Highlight.Text = "230";
                this.txtStream3Shadow.Text = "10";
            }
            this.cboStream3BackgroundSmoothing.SelectedIndex = 0;
            this.txtStream3BackgroundSmoothness.Text = "5";
            this.cboStream3ColorReproduction.SelectedIndex = ModuleScan.CR_CONTRAST;
            this.txtStream3ColorReproductionBrightness.Text = "128";
            this.txtStream3ColorReproductionContrast.Text = "128";
            this.txtStream3ColorReproductionHighlight.Text = "255";
            this.txtStream3ColorReproductionShadow.Text = "0";
            this.txtStream3ColorReproductionCustomGamma.Text = "1.0";
            this.chkStream3AdjustRGB.Checked = false;
            this.chkStream3sRGB.Checked = false;
            this.txtStream3AdjustRGBR.Text = "128";
            this.txtStream3AdjustRGBG.Text = "128";
            this.txtStream3AdjustRGBB.Text = "128";

            formAutoProfile.cboAutoProfile.SelectedIndex = ModuleScan.AP_DISABLED;
            formAutoProfile.txtAutoProfileSensitivity.Text = "3";
            this.cboManualFeedMode.SelectedIndex = ModuleScan.MFM_HARDWARESETTING;
        }

        //----------------------------------------------------------------------------
        //   Function    : Selection of a "FileType" list box was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void cboFileType_SelectedIndexChanged(object sender, System.EventArgs e)
        {
            //The following properties are adjusted according to specified FileType.
            //- PixelType
            //- CompressionType
            //- JpegQuality
            if((this.cboFileType.SelectedIndex == ModuleScan.FILE_MULTIIMAGE_OUTPUT) ||
                (this.cboFileType.SelectedIndex == ModuleScan.FILE_AUTO_COLOR_DETECTION))
            {
                this.cboCompType.SelectedIndex = ModuleScan.COMP_MMR;
                this.cboCompType.Enabled = false;
                this.cboJpegQuality.Enabled = true;
                this.cboPixelType.SelectedIndex = ModuleScan.PIXEL_RGB;
                this.cboPixelType.Enabled = false;
                this.cboScanTo.SelectedIndex = ModuleScan.TYPE_FILE;
                this.cboScanTo.Enabled = false;
            }
            else
            {
                this.cboCompType.Enabled = true;
                this.cboPixelType.Enabled = true;
                this.cboScanTo.Enabled = true;
            }
            if(this.cboFileType.SelectedIndex == ModuleScan.FILE_BMP)
            {
                this.cboCompType.SelectedIndex = ModuleScan.NO_COMP;
                this.cboCompType.Enabled = false;
                this.cboJpegQuality.Enabled = false;
            }
            else if((this.cboFileType.SelectedIndex == ModuleScan.FILE_TIF) || 
                (this.cboFileType.SelectedIndex == ModuleScan.FILE_MULTIF))
            {
                if(this.cboCompType.SelectedIndex == ModuleScan.COMP_JPEG ||
                    this.cboCompType.SelectedIndex == ModuleScan.COMP_OLDJPEG )
                {
                    if(this.cboPixelType.SelectedIndex == ModuleScan.PIXEL_BLACK_WHITE)
                    {
                        this.cboPixelType.SelectedIndex = ModuleScan.PIXEL_GRAYSCALE;
                    }
                    this.cboJpegQuality.Enabled = true;
                }
                else 
                {
                    cboJpegQuality.Enabled = false;
                }
                if((this.cboCompType.SelectedIndex != ModuleScan.NO_COMP) && 
                    (this.cboCompType.SelectedIndex != ModuleScan.COMP_JPEG) &&
                    (this.cboCompType.SelectedIndex != ModuleScan.COMP_OLDJPEG))
                {
                    this.cboPixelType.SelectedIndex = ModuleScan.PIXEL_BLACK_WHITE;
                }

                if(this.cboPixelType.SelectedIndex == ModuleScan.PIXEL_BLACK_WHITE)
                {
                    this.cboCompType.Enabled = true;
                }
                else
                {
                    this.cboCompType.Enabled = false;
                }
            }
            else if(this.cboFileType.SelectedIndex == ModuleScan.FILE_JPEG)
            {
                this.cboCompType.SelectedIndex = ModuleScan.COMP_JPEG;
                this.cboCompType.Enabled = false;
                this.cboJpegQuality.Enabled = true;
                //The following properties are adjusted according to specified PixelType.
                //- Mirroring
                //- Threshold
                //- Halftone
                //- HalftoneFile
                //- AutoSeparation
                //- SEE
                //- ThresholdCurve
                //- NoiseRemoval
                //- PreFiltering
                //- Smoothing
                if(this.cboPixelType.SelectedIndex == ModuleScan.PIXEL_BLACK_WHITE)
                {
                    this.cboPixelType.SelectedIndex = ModuleScan.PIXEL_RGB;
                    this.chkMirroring.Enabled = false;
                    this.txtThreshold.Enabled = false;
                    this.cboHalftone.Enabled = false;
                    this.txtHalftoneFile.Enabled = false;
                    this.cboAutoSeparation.Enabled = false;
                    this.cboSEE.Enabled= false;
                    this.chkPreFiltering.Enabled = false;
                    this.chkSmoothing.Enabled = false;
                    this.cboThresholdCurve.Enabled = false;
                    this.cboNoiseRemoval.Enabled = false;
                }
            }
            else if((this.cboFileType.SelectedIndex == ModuleScan.FILE_PDF) || 
                (this.cboFileType.SelectedIndex == ModuleScan.FILE_MULPDF))
            {
                if(this.cboPixelType.SelectedIndex == ModuleScan.PIXEL_BLACK_WHITE)
                {
                    if(this.cboCompType.SelectedIndex == ModuleScan.COMP_JPEG)
                    {
                        this.cboCompType.SelectedIndex = ModuleScan.COMP_MMR;
                    }
                    this.cboJpegQuality.Enabled = false;
                }
                else
                {
                    this.cboCompType.SelectedIndex = ModuleScan.COMP_JPEG;
                    this.cboCompType.Enabled = false;
                    this.cboJpegQuality.Enabled = true;
                }
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "FileCounter" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtFileCounter_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 0
            if(this.txtFileCounter.Text.Length == 0)
                this.txtFileCounter.Text = "0";
            
            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtFileCounter.Text) == true)
            {
                try
                
                {
                    count = System.Int32.Parse(this.txtFileCounter.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
          
            if(count < -1)
            {
                this.txtFileCounter.Text = "0";
            }
            else if(count > 65535)
            {
                this.txtFileCounter.Text = "65535";
            }
            else
            {
                this.txtFileCounter.Text = count.ToString();
            }    
        }

        //----------------------------------------------------------------------------
        //  Function    : Selection of a "PixelType" list box was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void cboPixelType_SelectedIndexChanged(object sender, System.EventArgs e)
        {
            //Adjustment with the following property
            //- FileType
            //- CompressionType
            //- JpegQuality
            //- Mirroring
            //- Threshold
            //- Halftone
            //- HalftoneFile
            //- AutoSeparation
            //- SEE
            //- PixelType
            //- ThresholdCurve
            //- NoiseRemoval
            //- PreFiltering
            //- Smoothing
            //- Outline
            //- Highlight
            //- Shadow
            if(this.cboPixelType.SelectedIndex == ModuleScan.PIXEL_BLACK_WHITE)
            {
                if(this.cboFileType.SelectedIndex == ModuleScan.FILE_JPEG)
                {
                    this.cboFileType.SelectedIndex = ModuleScan.FILE_TIF;
                }
                if(this.cboCompType.SelectedIndex == ModuleScan.COMP_JPEG ||
                    this.cboCompType.SelectedIndex == ModuleScan.COMP_OLDJPEG) 
                {
                    this.cboCompType.SelectedIndex = ModuleScan.COMP_MMR;
                }
                if(this.cboFileType.SelectedIndex == ModuleScan.FILE_BMP)
                {
                    this.cboCompType.SelectedIndex = ModuleScan.NO_COMP;
                    this.cboCompType.Enabled = false;
                }
                else
                {
                    this.cboCompType.Enabled = true;
                }
                this.cboJpegQuality.Enabled = false;
                this.chkMirroring.Enabled = true;
                if(this.cboHalftone.SelectedIndex == ModuleScan.NONE)
                {
                    this.txtThreshold.Enabled = true;
                }
                else
                {
                    this.txtThreshold.Enabled = false;
                }
                if(this.cboHalftone.SelectedIndex == ModuleScan.DITHER_PATTERN_FILE)
                {
                    this.txtHalftoneFile.Enabled = true;
                }
                this.cboHalftone.Enabled = true;
                this.cboAutoSeparation.Enabled = true;
                this.cboSEE.Enabled = true;
                if((this.cboHalftone.SelectedIndex == ModuleScan.NONE) && 
                    (this.txtThreshold.Text.Length > 0) && 
                    (System.Int32.Parse(this.txtThreshold.Text) == 0))
                {
                    this.chkPreFiltering.Enabled = true;
                    this.chkSmoothing.Enabled = true;
                    this.cboThresholdCurve.Enabled = true;
                    this.cboNoiseRemoval.Enabled = true;
                }
                else
                {
                    this.chkPreFiltering.Enabled = false;
                    this.chkSmoothing.Enabled = false;
                    this.cboThresholdCurve.Enabled = false;
                    this.cboNoiseRemoval.Enabled = false;
                }
                this.cboOutline.Enabled = true;
                int iCount = this.cboOutline.Items.Count - 1;
                for(int i = 4; i <= iCount; i++)
                {
                    this.cboOutline.Items.RemoveAt(4);
                }
                this.cboOutline.Items.Add("Outline Smooth");
                this.cboOutline.Items.Add("Edge Extract");
                this.cboOutline.SelectedIndex = 0;

                if((this.cboFileType.SelectedIndex == ModuleScan.FILE_JPEG) || 
                    (this.cboFileType.SelectedIndex == ModuleScan.FILE_PDF) || 
                    (this.cboFileType.SelectedIndex == ModuleScan.FILE_MULPDF))
                {
                    this.cboCompType.Enabled = true;
                }
                this.txtHighlight.Enabled = false;
                this.txtShadow.Enabled = false;
            }
            else
            {
                if(this.cboFileType.SelectedIndex == ModuleScan.FILE_JPEG)
                {
                    this.cboCompType.Enabled = false;
                    this.cboCompType.SelectedIndex = ModuleScan.COMP_JPEG;
                    this.cboJpegQuality.Enabled = true;
                }
                else if((this.cboFileType.SelectedIndex == ModuleScan.FILE_PDF) || 
                    (this.cboFileType.SelectedIndex == ModuleScan.FILE_MULPDF))
                {
                    this.cboCompType.Enabled = false;
                    this.cboCompType.SelectedIndex = ModuleScan.COMP_JPEG;
                    this.cboJpegQuality.Enabled = true;
                }
                else if((this.cboFileType.SelectedIndex == ModuleScan.FILE_MULTIIMAGE_OUTPUT) ||
                    (this.cboFileType.SelectedIndex == ModuleScan.FILE_AUTO_COLOR_DETECTION))
                {
                    this.cboCompType.Enabled = false;
                    this.cboCompType.SelectedIndex = ModuleScan.COMP_MMR;
                    this.cboJpegQuality.Enabled = true;
                }
                else if(((this.cboFileType.SelectedIndex == ModuleScan.FILE_TIF) ||    (this.cboFileType.SelectedIndex == ModuleScan.FILE_MULTIF)) &&
                    ((this.cboCompType.SelectedIndex == ModuleScan.COMP_JPEG) || (this.cboCompType.SelectedIndex == ModuleScan.COMP_OLDJPEG)))
                {
                    this.cboJpegQuality.Enabled = true;
                    this.cboCompType.Enabled = false;
                }
                else
                {
                    this.cboCompType.Enabled = false;
                    this.cboCompType.SelectedIndex = ModuleScan.NO_COMP;
                    this.cboJpegQuality.Enabled = false;
                }
                this.chkMirroring.Enabled = false;
                this.txtThreshold.Enabled = false;
                this.cboHalftone.Enabled = false;
                this.txtHalftoneFile.Enabled = false;
                this.cboAutoSeparation.Enabled = false;
                this.cboSEE.Enabled = false;
                this.chkPreFiltering.Enabled = false;
                this.chkSmoothing.Enabled = false;
                this.cboThresholdCurve.Enabled = false;
                this.cboNoiseRemoval.Enabled = false;
                if(this.cboPixelType.SelectedIndex == ModuleScan.PIXEL_GRAYSCALE)
                {
                    this.cboOutline.Enabled = false;
                    this.cboOutline.SelectedIndex = 0;
                }
                else
                {
                    int iCount = this.cboOutline.Items.Count - 1;
                    for(int i = 4; i <= iCount; i++)
                        this.cboOutline.Items.RemoveAt(4);
                        this.cboOutline.Items.Add("De-Screen Level1");
                        this.cboOutline.Items.Add("De-Screen Level2");
                        this.cboOutline.Items.Add("De-Screen Level3");
                        this.cboOutline.Items.Add("De-Screen Level4");
                        this.cboOutline.SelectedIndex = 0;
                        this.cboOutline.Enabled = true;
                        this.cboOutline.SelectedIndex = 0;
                }
                this.txtHighlight.Enabled = true;
                this.txtShadow.Enabled = true;
            }

            if((this.cboPaperSupply.SelectedIndex == ModuleScan.ADF_A3CS) || 
                (this.cboPaperSupply.SelectedIndex == ModuleScan.ADF_DLCS) || 
                (this.cboPaperSupply.SelectedIndex == ModuleScan.ADF_B4CS) || 
                (this.cboPaperSupply.SelectedIndex == ModuleScan.ADF_CS))
            {
                this.cboOutline.Enabled = false;
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : Selection of a "Resolution" list box was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void cboResolution_SelectedIndexChanged(object sender, System.EventArgs e)
        {
            int index = this.cboResolution.SelectedIndex;
            int iRes = ResolutionValue(index);
            this.txtCustomResolution.Text = iRes.ToString();            

            UpdateUnit();
            ModuleScan.PreviousReso = iRes;
            //When Resolution is "custom-made", CustomResolution is confirmed and an initial value is set up.
            if(index == this.cboResolution.Items.Count - 1)
            {
                this.txtCustomResolution.Enabled = true;
                return;
            }
            else
            {
                this.txtCustomResolution.Enabled = false;
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "CustomResolution" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtCustomResolution_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 300
            if(this.txtCustomResolution.Text.Length == 0)
            {
                this.txtCustomResolution.Text = "300";
                return;
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtCustomResolution.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtCustomResolution.Text);
                }
                catch (System.Exception)
                {
                    count = 50;
                }
            }
            else
            {
                count = 50;
            }
            
            if(count > 1600)
            {
                this.txtCustomResolution.Text = "1600";
            }
            else if(count < 50)
            {
                this.txtCustomResolution.Text = "50";
            }
            else
            {
                this.txtCustomResolution.Text = count.ToString();
                UpdateUnit();
                ModuleScan.PreviousReso = count;
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "ScanCount" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtScanCount_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 1
            if(this.txtScanCount.Text.Length == 0)
            {
                this.txtScanCount.Text ="1";
                return;
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtScanCount.Text) == true)
            {

                                                                            
                try
                {
                    count = System.Int32.Parse(this.txtScanCount.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
            
            if(count > 32767)
            {
                this.txtScanCount.Text = "32767";
            }
            else if(count < 1)
            {
                this.txtScanCount.Text = "-1";
            }
            else
            {
                this.txtScanCount.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : Selection of a "PaperSupply" list box was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void cboPaperSupply_SelectedIndexChanged(object sender, System.EventArgs e)
        {
            CarrierSheetSet();
            UpdateUnit();
        }

        //----------------------------------------------------------------------------
        //  Function    : Selection of a "PaperSize" list box was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void cboPaperSize_SelectedIndexChanged(object sender, System.EventArgs e)
        {
            string strWork;

            if((this.cboPaperSupply.SelectedIndex == ModuleScan.ADF_CS) && 
                ((this.cboPaperSize.SelectedIndex == ModuleScan.PSIZE_A3) || 
                (this.cboPaperSize.SelectedIndex == ModuleScan.PSIZE_B4) || 
                (this.cboPaperSize.SelectedIndex == ModuleScan.PSIZE_DOUBLELETTER)))
            {
                this.cboPaperSize.SelectedIndex = ModuleScan.PSIZE_A4;
            }
            
            //CustomWidth and CustomLength is enabled when PaperSize is a "custom".
            if(this.cboPaperSize.SelectedIndex == ModuleScan.PSIZE_INDEX_CUSTOM)
            {
                this.txtCustomPaperWidth.Enabled = true;
                this.txtCustomPaperLength.Enabled = true;
                return;
            }
            else
            {
                this.txtCustomPaperWidth.Enabled = false;
                this.txtCustomPaperLength.Enabled = false;
            }
            //The initial value of CustomWidth and CustomLength is adjusted
            //according to specified PaperSize.
            UpdateUnit();
            if(this.cboOrientation.SelectedIndex == ModuleScan.LANDSCAPE)
            {
                strWork = txtCustomPaperWidth.Text;
                this.txtCustomPaperWidth.Text = this.txtCustomPaperLength.Text;
                this.txtCustomPaperLength.Text = strWork;
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : Selection of a "Orientation" list box was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void cboOrientation_SelectedIndexChanged(object sender, System.EventArgs e)
        {
            string strWork;
            int Index;

            //According to the value of Orientation, the CustomWidth and the CustomLength are replaced.
            Index = this.cboOrientation.SelectedIndex;
            if((Index == ModuleScan.LANDSCAPE && ModuleScan.intOrientation == ModuleScan.PORTRAIT) ||
                (Index == ModuleScan.PORTRAIT && ModuleScan.intOrientation == ModuleScan.LANDSCAPE))
            {
                strWork = this.txtCustomPaperWidth.Text;
                txtCustomPaperWidth.Text = txtCustomPaperLength.Text;
                txtCustomPaperLength.Text = strWork;
            }
            ModuleScan.intOrientation = Index;
            
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "CustomPaperWidth" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtCustomPaperWidth_TextChanged(object sender, System.EventArgs e)
        {
            double count;
            //An initial value is set to 0
            if(this.txtCustomPaperWidth.Text.Length == 0)
            {
                this.txtCustomPaperWidth.Text = "0";
                return;
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtCustomPaperWidth.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtCustomPaperWidth.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
            
            
            if(count < 0)
            {
                this.txtCustomPaperWidth.Text = "0";
            }
            else
            {
                this.txtCustomPaperWidth.Text = changeDigitByUnit(count);
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "CustomPaperLength" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtCustomPaperLength_TextChanged(object sender, System.EventArgs e)
        {
            double count;

            //An initial value is set to 0
            if(this.txtCustomPaperLength.Text.Length == 0)
            {
                this.txtCustomPaperLength.Text = "0";
                return;
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtCustomPaperLength.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtCustomPaperLength.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
            
            if(count < 0)
            {
                this.txtCustomPaperLength.Text = "0";
            }
            else
            {
                this.txtCustomPaperLength.Text = changeDigitByUnit(count);
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "RegionLeft" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtRegionLeft_TextChanged(object sender, System.EventArgs e)
        {
            double count;

            //An initial value is set to 0
            if(this.txtRegionLeft.Text.Length == 0)
            {
                this.txtRegionLeft.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtRegionLeft.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtRegionLeft.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
            
            if(count < 0)
            {
                this.txtRegionLeft.Text = "0";
            }
            else
            {
                this.txtRegionLeft.Text = changeDigitByUnit(count);
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "RegionTop" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtRegionTop_TextChanged(object sender, System.EventArgs e)
        {
            double count;

            //An initial value is set to 0
            if(this.txtRegionTop.Text.Length == 0)
            {
                this.txtRegionTop.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtRegionTop.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtRegionTop.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
            
            if(count < 0)
            {
                this.txtRegionTop.Text = "0";
            }
            else
            {
                this.txtRegionTop.Text = changeDigitByUnit(count);
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "RegionWidth" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtRegionWidth_TextChanged(object sender, System.EventArgs e)
        {
            double count;

            //An initial value is set to 0
            if(this.txtRegionWidth.Text.Length == 0)
            {
                this.txtRegionWidth.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtRegionWidth.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtRegionWidth.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
            
            if(count < 0)
            {
                this.txtRegionWidth.Text = "0";
            }
            else
            {
                this.txtRegionWidth.Text = changeDigitByUnit(count);
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "RegionLength" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtRegionLength_TextChanged(object sender, System.EventArgs e)
        {
            double count;

            //An initial value is set to 0
            if(this.txtRegionLength.Text.Length == 0)
            {
                this.txtRegionLength.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtRegionLength.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtRegionLength.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
            
            if(count < 0)
            {
                this.txtRegionLength.Text = "0";
            }
            else
            {
                this.txtRegionLength.Text = changeDigitByUnit(count);
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "Brightness" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtBrightness_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 1
            if(this.txtBrightness.Text.Length == 0)
            {
                this.txtBrightness.Text = "1";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtBrightness.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtBrightness.Text);
                }
                catch (System.Exception)
                {
                    count = 1;
                }
            }
            else
            {
                count = 1;
            }
            
            if(count > 255)
            {
                this.txtBrightness.Text = "255";
            }
            else if(count < 1)
            {
                this.txtBrightness.Text = "1";
            }
            else
            {
                this.txtBrightness.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "Contrast" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtContrast_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 1
            if(this.txtContrast.Text.Length == 0)
            {
                this.txtContrast.Text = "1";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtContrast.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtContrast.Text);
                }
                catch (System.Exception)
                {
                    count = 1;
                }
            }
            else
            {
                count = 1;
            }
            
            if(count > 255)
            {
                this.txtContrast.Text = "255";
            }
            else if(count < 1)
            {
                this.txtContrast.Text = "1";
            }
            else
            {
                this.txtContrast.Text = count.ToString();
            }

        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "Threshold" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtThreshold_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 0
            if(this.txtThreshold.Text.Length == 0)
            {
                this.txtThreshold.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtThreshold.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtThreshold.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
            
            if(count > 255)
            {
                this.txtThreshold.Text = "255";
            }
            else if(count < -2)
            {
                this.txtThreshold.Text = "0";
            }
            else 
            {
                this.txtThreshold.Text = count.ToString();
            }

            //Adjustment with the following property
            //- Halftone
            //- PixelType
            //- ThresholdCurve
            //- NoiseRemoval
            //- PreFiltering
            //- Smoothing
            if((System.Int32.Parse(this.txtThreshold.Text) == 0) && 
                (this.cboPixelType.SelectedIndex == ModuleScan.PIXEL_BLACK_WHITE) && 
                (this.cboHalftone.SelectedIndex == ModuleScan.NONE))
            {
                this.chkPreFiltering.Enabled = true;
                this.chkSmoothing.Enabled = true;
                this.cboThresholdCurve.Enabled = true;
                this.cboNoiseRemoval.Enabled = true;
            }
            else
            {
                this.chkPreFiltering.Enabled = false;
                this.chkSmoothing.Enabled = false;
                this.cboThresholdCurve.Enabled = false;
                this.cboNoiseRemoval.Enabled = false;                
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : Selection of a "Halftone" list box was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void cboHalftone_SelectedIndexChanged(object sender, System.EventArgs e)
        {
            //HalftoneFile is enabled when Halftone is a "dither pattern file."
            if(this.cboHalftone.SelectedIndex == ModuleScan.DITHER_PATTERN_FILE)
            {
                this.txtHalftoneFile.Enabled = true;
            }
            else
            {
                this.txtHalftoneFile.Enabled = false;
            }
            //Threshold is enabled when Halftone is a "nothing".
            //And the following properties are adjusted according to specified Threshold.
            //- ThresholdCurve
            //- NoiseRemoval
            //- PreFiltering
            //- Smoothing
            if(this.cboHalftone.SelectedIndex == ModuleScan.NONE)
            {
                this.txtThreshold.Enabled = true;
                if((this.cboPixelType.SelectedIndex == ModuleScan.PIXEL_BLACK_WHITE) && 
                    (this.txtThreshold.Text.Length > 0) && 
                    (System.Int32.Parse(this.txtThreshold.Text) == 0))
                {
                    this.chkPreFiltering.Enabled = true;
                    this.chkSmoothing.Enabled = true;
                    this.cboThresholdCurve.Enabled = true;
                    this.cboNoiseRemoval.Enabled = true;
                }
                else
                {
                    this.chkPreFiltering.Enabled = false;
                    this.chkSmoothing.Enabled = false;
                    this.cboThresholdCurve.Enabled = false;
                    this.cboNoiseRemoval.Enabled = false;
                }
            }
            else
            {
                this.txtThreshold.Enabled = false;
                this.chkPreFiltering.Enabled = false;
                this.chkSmoothing.Enabled = false;
                this.cboThresholdCurve.Enabled = false;
                this.cboNoiseRemoval.Enabled = false;
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : Selection of a "Gamma" list box was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void cboGamma_SelectedIndexChanged(object sender, System.EventArgs e)
        {
            //Gamma pattern file or other
            if(this.cboGamma.SelectedIndex == ModuleScan.GAMMA_PATTERN_FILE)
            {
                this.txtGammaFile.Enabled = true;
            }
            else
            {
                this.txtGammaFile.Enabled = false;
            }

            //Custom gamma or other
            if(this.cboGamma.SelectedIndex == ModuleScan.GAMMA_CUSTOM)
            {
                this.txtCustomGamma.Enabled = true;
            }
            else
            {
                this.txtCustomGamma.Enabled = false;
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "CustomGamma" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtCustomGamma_TextChanged(object sender, System.EventArgs e)
        {
            double count;

            //An initial value is set to 0
            if(this.txtCustomGamma.Text.Length == 0)
            {
                this.txtCustomGamma.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtCustomGamma.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtCustomGamma.Text);
                }
                catch (System.Exception)
                {
                    count = 0.1;
                }
            }
            else
            {
                count = 0.1;
            }
            
            if(count > 10)
            {
                this.txtCustomGamma.Text = "10";
            }
            else if(count < 0.1)
            {
                this.txtCustomGamma.Text = "0.1";
            }
            else
            {
                this.txtCustomGamma.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "Endorser" check box was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void chkEndorser_CheckedChanged(object sender, System.EventArgs e)
        {
            //1) When an endorser is used
            //     Enable all parameter items.
            //2) When an endorser is not used
            //     Disable all paramter items.
            if(this.chkEndorser.CheckState == CheckState.Checked)
            {
                this.cboEndorserDialog.Enabled = true;
                this.txtEndorserCounter.Enabled = true;
                this.txtEndorserString.Enabled = true;
                this.txtEndorserOffset.Enabled = true;
                this.cboEndorserDirection.Enabled = true;
                this.cboEndorserCountStep.Enabled = true;
                this.cboEndorserCountDirection.Enabled = true;
                this.cboEndorserFont.Enabled = true;
                this.chkSynchronizationDigitalEndorser.Enabled = true;
            }
            else
            {
                this.cboEndorserDialog.Enabled = false;
                this.txtEndorserCounter.Enabled = false;
                this.txtEndorserString.Enabled = false;
                this.txtEndorserOffset.Enabled = false;
                this.cboEndorserDirection.Enabled = false;
                this.cboEndorserCountStep.Enabled = false;
                this.cboEndorserCountDirection.Enabled = false;
                this.cboEndorserFont.Enabled = false;
                this.chkSynchronizationDigitalEndorser.Enabled = false;
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "EndorserCounter" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtEndorserCounter_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 0
            if(this.txtEndorserCounter.Text.Length == 0)
            {
                this.txtEndorserCounter.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtEndorserCounter.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtEndorserCounter.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
            
            if(count > 99999999)
            {
                this.txtEndorserCounter.Text = "99999999";
            }
            else if(count < -1)
            {
                this.txtEndorserCounter.Text = "0";
            }
            else
            {
                this.txtEndorserCounter.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "EndorserString" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtEndorserString_TextChanged(object sender, System.EventArgs e)
        {
            //Do not check if there is no data
            if (this.txtEndorserString.Text.Length == 0)
            {
                return;
            }

            try
            {
                // Uses a blank space in data if a character other than one-byte alphanumeric characters or some symbols is specified
                if (new Regex(@"^[A-Za-z0-9 !""#\$%&'\(\)\*\+,-\./:;<=>\?@\[\\\]\^_`\{\|\}~]+$").IsMatch(this.txtEndorserString.Text) == false)
                {
                    this.txtEndorserString.Text = "";
                }
            }
            catch (System.Exception)
            {
                this.txtEndorserString.Text = "";
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "EndorserOffset" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtEndorserOffset_TextChanged(object sender, System.EventArgs e)
        {
            double count;

            //An initial value is set to 0
            if(this.txtEndorserOffset.Text.Length == 0)
            {
                this.txtEndorserOffset.Text = "0";
                return;
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtEndorserOffset.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtEndorserOffset.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
            
            if(count < 0)
            {
                this.txtEndorserOffset.Text = "0";
            }
            else
            {
                this.txtEndorserOffset.Text = changeDigitByUnit(count);
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "SkipWhitePage" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtSkipWhitePage_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 0
            if(this.txtSkipWhitePage.Text.Length == 0)
            {
                this.txtSkipWhitePage.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtSkipWhitePage.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtSkipWhitePage.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
        
            if(count > 50)
            {
                this.txtSkipWhitePage.Text = "50";
            }
            else if(count < 0)
            {
                this.txtSkipWhitePage.Text = "0";
            }
            else
            {
                this.txtSkipWhitePage.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "SkipBlackPage" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtSkipBlackPage_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 0
            if(this.txtSkipBlackPage.Text.Length == 0)
            {
                this.txtSkipBlackPage.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtSkipBlackPage.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtSkipBlackPage.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
            
            if(count > 50)
            {
                this.txtSkipBlackPage.Text = "50";
            }
            else if(count < 0)
            {
                this.txtSkipBlackPage.Text = "0";
            }
            else
            {
                this.txtSkipBlackPage.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : It notifies having detected the special paper/Patch Code paper by the message.
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void axFiScn1_DetectJobSeparator(object sender, System.EventArgs e)
        {
            if (this.MenuItemShowEvent.Checked)
            {
                MessageBox.Show("The special paper/Patch Code paper was detected.", "fiScanTest", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : CarrierSheet Setting
        //  Argument    : Nothing
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void CarrierSheetSet()
        {
            if((this.cboPaperSupply.SelectedIndex == ModuleScan.ADF_A3CS) || 
                (this.cboPaperSupply.SelectedIndex == ModuleScan.ADF_DLCS) || 
                (this.cboPaperSupply.SelectedIndex == ModuleScan.ADF_B4CS) || 
                (this.cboPaperSupply.SelectedIndex == ModuleScan.ADF_CS))
            {
                if(this.cboScanTo.SelectedIndex == ModuleScan.TYPE_RAW_IMAGE_HANDLE)
                {
                    this.cboScanTo.SelectedIndex = ModuleScan.TYPE_FILE;
                }
                if((this.cboFileType.SelectedIndex == ModuleScan.FILE_JPEG) ||
                    (this.cboFileType.SelectedIndex == ModuleScan.FILE_PDF) ||
                    (this.cboFileType.SelectedIndex == ModuleScan.FILE_MULPDF))
                {
                    this.cboCompType.SelectedIndex = ModuleScan.COMP_JPEG;
                }
                else
                {
                    this.cboCompType.SelectedIndex = ModuleScan.NO_COMP;
                    this.cboJpegQuality.Enabled = false;
                }
                this.cboScanMode.SelectedIndex = ModuleScan.SM_NORMAL;
                this.cboScanMode.Enabled = false;
                this.chkScanContinue.Checked = false;
                this.chkScanContinue.Enabled = false;
                this.cboScanContinueMode.Enabled = false;
                this.chkAutoBorderDetection.Checked = false;
                this.chkAutoBorderDetection.Enabled = false;
                this.cboAutoSeparation.Enabled = false;
                this.cboBackgroundColor.SelectedIndex = 0;
                this.cboBackgroundColor.Enabled = false;
                this.cboBinding.SelectedIndex = 0;
                this.cboBinding.Enabled = false;
                this.txtBrightness.Text = "128";
                this.txtBrightness.Enabled = false;
                this.cboCompType.Enabled = false;
                this.txtContrast.Text = "128";
                this.txtContrast.Enabled = false;
                this.chkEndorser.Checked = false;
                this.chkEndorser.Enabled = false;
                this.cboEndorserDialog.Enabled = false;
                this.txtEndorserCounter.Enabled = false;
                this.txtEndorserString.Enabled = false;
                this.txtEndorserOffset.Enabled = false;
                this.cboEndorserDirection.Enabled = false;
                this.cboEndorserCountStep.Enabled = false;
                this.cboEndorserCountDirection.Enabled = false;
                this.cboEndorserFont.Enabled = false;
                this.chkSynchronizationDigitalEndorser.Enabled = false;
                this.chkDigitalEndorser.Checked = false;
                this.chkDigitalEndorser.Enabled = false;
                this.txtDigitalEndorserCounter.Enabled = false;
                this.txtDigitalEndorserString.Enabled = false;
                this.txtDigitalEndorserXOffset.Enabled = false;
                this.txtDigitalEndorserYOffset.Enabled = false;
                this.cboDigitalEndorserDirection.Enabled = false;
                this.cboDigitalEndorserCountStep.Enabled = false;
                this.cboDigitalEndorserCountDirection.Enabled = false;
                this.cboGamma.Enabled = false;
                this.txtGammaFile.Enabled = false;
                this.txtCustomGamma.Enabled = false;
                this.cboHalftone.Enabled = false;
                this.txtHalftoneFile.Enabled = false;
                this.chkLongPage.Checked = false;
                this.chkLongPage.Enabled = false;
                this.chkMirroring.Enabled = false;
                this.cboMultiFeed.SelectedIndex = 0;
                this.cboMultiFeed.Enabled = false;
                this.cboOrientation.SelectedIndex = ModuleScan.PORTRAIT;
                this.cboOrientation.Enabled = false;
                this.cboOutline.SelectedIndex = ModuleScan.NONE;
                this.cboOutline.Enabled = false;
                this.chkAutomaticSenseMedium.Enabled = false;
                this.cboBackgroundSmoothing.Enabled = false;
                this.chkAutoBright.Enabled = false;
                this.txtBlankPageSkip.Enabled = false;
                this.cboJobControlMode.Enabled = false;
                this.cboBlankPageNotice.Enabled = false;
                this.chkHwCompression.Enabled = false;
                this.txtDTCSensitivity.Enabled = false;
                this.txtBackgroundThreshold.Enabled = false;
                this.txtCharacterThickness.Enabled = false;
                this.txtSDTCSensitivity.Enabled = false;
                this.txtNoiseRejection.Enabled = false;
                this.txtADTCThreshold.Enabled = false;
                this.txtFadingCompensation.Enabled = false;
                this.cboSharpness.Enabled = false;
                this.cboPunchHoleRemoval.Enabled = false;
                this.cboPunchHoleRemovalMode.Enabled = false;
                this.chksRGB.Enabled = false;
                this.cboPatternRemoval.Enabled = false;
                this.chkVerticalLineReduction.Enabled = false;
                this.chkAIQCNotice.Enabled = false;
                this.chkMultiFeedNotice.Enabled = false;
                this.txtBackgroundSmoothness.Enabled = false;
                this.cboCropPriority.Enabled = false;
                this.cboDeskew.Enabled = false;
                this.cboDeskewBackground.Enabled = false;
                this.cboDeskewMode.Enabled = false;
                this.cboBlankPageSkipMode.Enabled = false;
                this.cboBlankPageSkipTabPage.Enabled = false;
                this.txtBlankPageIgnoreAreaSize.Enabled = false;
                this.txtCropMarginSize.Enabled = false;
                this.cboSelectOutputSize.Enabled = false;
                this.txtMultiFeedModeChangeSize.Enabled = false;
                this.cboLengthDetection.Enabled = false;
                this.chkFrontBackMergingEnabled.Enabled = false;
                this.cboFrontBackMergingLocation.Enabled = false;
                this.cboFrontBackMergingRotation.Enabled = false;
                this.cboFrontBackMergingTarget.Enabled = false;
                this.cboFrontBackMergingTargetMode.Enabled = false;
                this.txtFrontBackMergingTargetSize.Enabled = false;
                this.chkDivideLongPage.Enabled = false;
                this.chkCharacterExtraction.Enabled = false;
                this.chkReversedTypeExtraction.Enabled = false;
                this.chkHalftoneRemoval.Enabled = false;
                this.chkStampRemoval.Enabled = false;
                this.chkSimpleSlicePatternRemoval.Enabled = false;
                this.cboFrontBackDetection.Enabled = false;
                this.cboPaperProtection.Enabled = false;

                this.cboColorReproduction.Enabled = false;
                this.txtColorReproductionBrightness.Enabled = false;
                this.txtColorReproductionContrast.Enabled = false;
                this.txtColorReproductionHighlight.Enabled = false;
                this.txtColorReproductionShadow.Enabled = false;
                this.txtColorReproductionCustomGamma.Enabled = false;
                this.chkAdjustRGB.Enabled = false;
                this.txtAdjustRGBR.Enabled = false;
                this.txtAdjustRGBG.Enabled = false;
                this.txtAdjustRGBB.Enabled = false;

                this.chkBarcodeDetection.Checked = false;
                this.chkBarcodeDetection.Enabled = false;
                this.cboBarcodeDirection.SelectedIndex = ModuleScan.BD_HORIZONTAL_VERTICAL;
                this.txtBarcodeRegionLeft.Text = "0";
                this.txtBarcodeRegionTop.Text = "0";
                this.txtBarcodeRegionWidth.Text = "0";
                this.txtBarcodeRegionLength.Text = "0";
                this.chkEAN8.Checked = true;
                this.chkEAN13.Checked = true;
                this.chkCode3of9.Checked = true;
                this.chkCode128.Checked = true;
                this.chkITF.Checked = true;
                this.chkUPCA.Checked = true;
                this.chkCodabar.Checked = true;
                this.chkPDF417.Checked = true;
                this.chkQRCode.Checked = true;
                this.chkDataMatrix.Checked = false;
                this.chkAztecCode.Checked = false;
                this.txtBarcodeMaxSearchPriorities.Text = "1";
                this.chkBarcodeNotDetectionNotice.Checked = false;
                this.cboBarcodeDirection.Enabled = false;
                this.txtBarcodeRegionLeft.Enabled = false;
                this.txtBarcodeRegionTop.Enabled = false;
                this.txtBarcodeRegionWidth.Enabled = false;
                this.txtBarcodeRegionLength.Enabled = false;
                this.chkEAN8.Enabled = false;
                this.chkEAN13.Enabled = false;
                this.chkCode3of9.Enabled = false;
                this.chkCode128.Enabled = false;
                this.chkITF.Enabled = false;
                this.chkUPCA.Enabled = false;
                this.chkCodabar.Enabled = false;
                this.chkPDF417.Enabled = false;
                this.chkQRCode.Enabled = false;
                this.chkDataMatrix.Enabled = false;
                this.chkAztecCode.Enabled = false;
                this.txtBarcodeMaxSearchPriorities.Enabled = false;
                this.chkBarcodeNotDetectionNotice.Enabled = false;

                this.chkPatchCodeDetection.Checked = false;
                this.chkPatchCodeDetection.Enabled = false;
                this.cboPatchCodeDirection.SelectedIndex = ModuleScan.PD_VERTICAL;
                this.cboPatchCodeDirection.Enabled = false;
                this.chkPatch1.Checked = true;
                this.chkPatch1.Enabled = false;
                this.chkPatch2.Checked = true;
                this.chkPatch2.Enabled = false;
                this.chkPatch3.Checked = true;
                this.chkPatch3.Enabled = false;
                this.chkPatch4.Checked = true;
                this.chkPatch4.Enabled = false;
                this.chkPatch6.Checked = true;
                this.chkPatch6.Enabled = false;
                this.chkPatchT.Checked = true;
                this.chkPatchT.Enabled = false;

                this.cboEdgeFiller.SelectedIndex = ModuleScan.EF_OFF;
                this.cboEdgeFiller.Enabled = false;
                this.txtEdgeFillerTop.Text = "0";
                this.txtEdgeFillerBottom.Text = "0";
                this.txtEdgeFillerLeft.Text = "0";
                this.txtEdgeFillerRight.Text = "0";
                this.chkEdgeRepair.Checked = false;
                this.chkEdgeRepair.Enabled = false;

                if(this.cboPaperSupply.SelectedIndex == ModuleScan.ADF_CS)
                {
                    if(this.cboPaperSize.SelectedIndex == ModuleScan.PSIZE_INDEX_CUSTOM)
                    {
                        this.txtCustomPaperWidth.Enabled = true;
                        this.txtCustomPaperLength.Enabled = true;
                    }
                    else
                    {
                        if((this.cboPaperSize.SelectedIndex == ModuleScan.PSIZE_A3) || 
                            (this.cboPaperSize.SelectedIndex == ModuleScan.PSIZE_B4) || 
                            (this.cboPaperSize.SelectedIndex == ModuleScan.PSIZE_DOUBLELETTER))
                        {
                            this.cboPaperSize.SelectedIndex = ModuleScan.PSIZE_A4;
                        }
                        this.txtCustomPaperWidth.Enabled = false;
                        this.txtCustomPaperLength.Enabled = false;
                    }
                    this.cboPaperSize.Enabled = true;
                }
                else
                {
                    this.cboPaperSize.SelectedIndex = ModuleScan.PSIZE_INDEX_CUSTOM;
                    this.cboPaperSize.Enabled = false;
                    this.txtCustomPaperWidth.Enabled = false;
                    this.txtCustomPaperLength.Enabled = false;
                }
                this.cboPixelType.SelectedIndex = ModuleScan.PIXEL_RGB;
                this.cboPixelType.Enabled = false;
                this.txtAutomaticColorSensitivity.Enabled = false;
                this.cboAutomaticColorBackground.Enabled = false;
                this.txtRegionLeft.Text = "0";
                this.txtRegionLeft.Enabled = false;
                this.txtRegionTop.Text = "0";
                this.txtRegionTop.Enabled = false;
                this.txtRegionWidth.Text = "0";
                this.txtRegionWidth.Enabled = false;
                this.txtRegionLength.Text = "0";
                this.txtRegionLength.Enabled = false;
                this.chkReverse.Checked = false;
                this.chkReverse.Enabled = false;
                this.cboRotation.SelectedIndex = ModuleScan.RT_NONE;
                this.cboRotation.Enabled = false;
                this.txtScanCount.Text = "2";
                this.txtScanCount.Enabled = false;
                this.cboSEE.Enabled = false;
                this.txtSkipBlackPage.Text = "0";
                this.txtSkipBlackPage.Enabled = false;
                this.txtSkipWhitePage.Text = "0";
                this.txtSkipWhitePage.Enabled = false;
                this.MenuItemShowSourceUI.Checked = false;
                this.txtThreshold.Enabled = false;
                this.chkUndefinedScanning.Checked = true;
                this.chkUndefinedScanning.Enabled = false;
                this.cboFilter.SelectedIndex = ModuleScan.FILTER_GREEN;
                this.cboFilter.Enabled = false;
                this.txtFilterSaturationSensitivity.Text = "50";
                this.txtFilterSaturationSensitivity.Enabled = false;
                this.cboJobControl.SelectedIndex = 0;
                this.cboJobControl.Enabled = false;
                this.txtHighlight.Text = "230";
                this.txtHighlight.Enabled = false;
                this.txtShadow.Text = "10";
                this.txtShadow.Enabled = false;
                this.cboOverScan.SelectedIndex = 0;
                this.cboOverScan.Enabled = false;
                this.cboBlankPageNotice.SelectedIndex = 0;
                this.cboBlankPageNotice.Enabled = false;
                this.chkHwCompression.Checked = false;
                this.chkHwCompression.Enabled = false;
            }
            else
            {
                if(this.cboPaperSupply.SelectedIndex == ModuleScan.FLATBED)
                    this.txtScanCount.Enabled = false;
                else
                    this.txtScanCount.Enabled = true;
                this.cboScanTo.Enabled = true;
                this.cboScanMode.Enabled = true;
                this.chkScanContinue.Enabled = true;
                this.cboScanContinueMode.Enabled = true;
                this.chkAutoBorderDetection.Enabled = true;
                this.cboBackgroundColor.Enabled = true;
                this.cboBinding.Enabled = true;
                this.txtBrightness.Enabled = true;
                this.txtContrast.Enabled = true;
                this.chkEndorser.Enabled = true;
                if(this.chkEndorser.Checked == true)
                {
                    this.cboEndorserDialog.Enabled = true;
                    this.txtEndorserCounter.Enabled = true;
                    this.txtEndorserString.Enabled = true;
                    this.txtEndorserOffset.Enabled = true;
                    this.cboEndorserDirection.Enabled = true;
                    this.cboEndorserCountStep.Enabled = true;
                    this.cboEndorserCountDirection.Enabled = true;
                    this.cboEndorserFont.Enabled = true;
                    this.chkSynchronizationDigitalEndorser.Enabled = true;
                }
                this.chkDigitalEndorser.Enabled = true;
                if(this.chkDigitalEndorser.Checked == true)
                {
                    this.txtDigitalEndorserCounter.Enabled = true;
                    this.txtDigitalEndorserString.Enabled = true;
                    this.txtDigitalEndorserXOffset.Enabled = true;
                    this.txtDigitalEndorserYOffset.Enabled = true;
                    this.cboDigitalEndorserDirection.Enabled = true;
                    this.cboDigitalEndorserCountStep.Enabled = true;
                    this.cboDigitalEndorserCountDirection.Enabled = true;
                }
                this.cboGamma.Enabled = true;
                if(this.cboGamma.SelectedIndex == ModuleScan.GAMMA_CUSTOM)
                {
                    this.txtCustomGamma.Enabled = true;
                }
                else
                {
                    this.txtCustomGamma.Enabled = false;
                }
                if(this.cboGamma.SelectedIndex == ModuleScan.GAMMA_PATTERN_FILE)
                {
                    this.txtGammaFile.Enabled = true;
                }
                else
                {
                    this.txtGammaFile.Enabled = false;
                }
                this.chkLongPage.Enabled = true;
                this.cboMultiFeed.Enabled = true;
                this.cboOrientation.Enabled = true;
                if(this.cboPixelType.SelectedIndex == ModuleScan.PIXEL_GRAYSCALE)
                {
                    this.cboOutline.Enabled = false;
                }
                else
                {
                    this.cboOutline.Enabled = true;
                }
                this.cboPaperSize.Enabled = true;
                if(this.cboPaperSize.SelectedIndex == ModuleScan.PSIZE_INDEX_CUSTOM)
                {
                    this.txtCustomPaperWidth.Enabled = true;
                    this.txtCustomPaperLength.Enabled = true;
                }
                else
                {
                    this.txtCustomPaperWidth.Enabled = false;
                    this.txtCustomPaperLength.Enabled = false;
                }
                this.cboPixelType.Enabled = true;
                this.txtAutomaticColorSensitivity.Enabled = true;
                this.cboAutomaticColorBackground.Enabled = true;
                this.txtRegionLeft.Enabled = true;
                this.txtRegionTop.Enabled = true;
                this.txtRegionWidth.Enabled = true;
                this.txtRegionLength.Enabled = true;
                this.chkReverse.Enabled = true;
                this.cboRotation.Enabled = true;
                this.txtSkipBlackPage.Enabled = true;
                this.txtSkipWhitePage.Enabled = true;
                this.chkUndefinedScanning.Enabled = true;
                this.cboFilter.Enabled = true;
                this.txtFilterSaturationSensitivity.Enabled = true;
                this.cboJobControl.Enabled = true;
                if(this.cboPixelType.SelectedIndex == ModuleScan.PIXEL_BLACK_WHITE)
                {
                    this.txtHighlight.Enabled = false;
                    this.txtShadow.Enabled = false;
                }
                else
                {
                    this.txtHighlight.Enabled = true;
                    this.txtShadow.Enabled = true;
                }
                this.cboOverScan.Enabled = true;
                this.cboBackground.Enabled = true;
                this.chkAutomaticSenseMedium.Enabled = true;
                this.cboBackgroundSmoothing.Enabled = true;
                this.chkAutoBright.Enabled = true;
                this.txtBlankPageSkip.Enabled = true;
                this.cboJobControlMode.Enabled = true;
                this.cboBlankPageNotice.Enabled = true;
                this.chkHwCompression.Enabled = true;
                this.txtDTCSensitivity.Enabled = true;
                this.txtBackgroundThreshold.Enabled = true;
                this.txtCharacterThickness.Enabled = true;
                this.txtSDTCSensitivity.Enabled = true;
                this.txtNoiseRejection.Enabled = true;
                this.txtADTCThreshold.Enabled = true;
                this.txtFadingCompensation.Enabled = true;
                this.cboSharpness.Enabled = true;
                this.cboPunchHoleRemoval.Enabled = true;
                this.cboPunchHoleRemovalMode.Enabled = true;
                this.chksRGB.Enabled = true;
                this.cboPatternRemoval.Enabled = true;
                this.chkVerticalLineReduction.Enabled = true;
                this.chkAIQCNotice.Enabled = true;
                this.chkMultiFeedNotice.Enabled = true;
                this.txtBackgroundSmoothness.Enabled = true;
                this.cboCropPriority.Enabled = true;
                this.cboDeskew.Enabled = true;
                this.cboDeskewBackground.Enabled = true;
                this.cboDeskewMode.Enabled = true;
                this.cboBlankPageSkipMode.Enabled = true;
                this.cboBlankPageSkipTabPage.Enabled = true;
                this.txtBlankPageIgnoreAreaSize.Enabled = true;
                this.txtCropMarginSize.Enabled = true;
                this.cboSelectOutputSize.Enabled = true;
                this.txtMultiFeedModeChangeSize.Enabled = true;
                this.cboLengthDetection.Enabled = true;
                this.chkFrontBackMergingEnabled.Enabled = true;
                this.cboFrontBackMergingLocation.Enabled = true;
                this.cboFrontBackMergingRotation.Enabled = true;
                this.cboFrontBackMergingTarget.Enabled = true;
                this.cboFrontBackMergingTargetMode.Enabled = true;
                this.txtFrontBackMergingTargetSize.Enabled = true;
                this.chkDivideLongPage.Enabled = true;
                this.chkCharacterExtraction.Enabled = true;
                this.chkReversedTypeExtraction.Enabled = true;
                this.chkHalftoneRemoval.Enabled = true;
                this.chkStampRemoval.Enabled = true;
                this.chkSimpleSlicePatternRemoval.Enabled = true;
                this.cboFrontBackDetection.Enabled = true;
                this.cboPaperProtection.Enabled = true;

                this.cboColorReproduction.Enabled = true;
                this.txtColorReproductionBrightness.Enabled = true;
                this.txtColorReproductionContrast.Enabled = true;
                this.txtColorReproductionHighlight.Enabled = true;
                this.txtColorReproductionShadow.Enabled = true;
                this.txtColorReproductionCustomGamma.Enabled = true;
                this.chkAdjustRGB.Enabled = true;
                this.txtAdjustRGBR.Enabled = true;
                this.txtAdjustRGBG.Enabled = true;
                this.txtAdjustRGBB.Enabled = true;

                this.chkBarcodeDetection.Enabled = true;
                if(this.chkBarcodeDetection.Checked == true)
                {
                    this.cboBarcodeDirection.Enabled = true;
                    this.txtBarcodeRegionLeft.Enabled = true;
                    this.txtBarcodeRegionTop.Enabled = true;
                    this.txtBarcodeRegionWidth.Enabled = true;
                    this.txtBarcodeRegionLength.Enabled = true;
                    this.chkEAN8.Enabled = true;
                    this.chkEAN13.Enabled = true;
                    this.chkCode3of9.Enabled = true;
                    this.chkCode128.Enabled = true;
                    this.chkITF.Enabled = true;
                    this.chkUPCA.Enabled = true;
                    this.chkCodabar.Enabled = true;
                    this.chkPDF417.Enabled = true;
                    this.chkQRCode.Enabled = true;
                    this.chkDataMatrix.Enabled = true;
                    this.chkAztecCode.Enabled = true;
                    this.txtBarcodeMaxSearchPriorities.Enabled = true;
                    this.chkBarcodeNotDetectionNotice.Enabled = true;
                }

                this.chkPatchCodeDetection.Enabled = true;
                this.cboPatchCodeDirection.Enabled = true;
                this.chkPatch1.Enabled = true;
                this.chkPatch2.Enabled = true;
                this.chkPatch3.Enabled = true;
                this.chkPatch4.Enabled = true;
                this.chkPatch6.Enabled = true;
                this.chkPatchT.Enabled = true;

                this.cboEdgeFiller.Enabled = true;
                this.chkEdgeRepair.Enabled = true;
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The "Indicator" menu was chosen
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemIndicator_Click(object sender, System.EventArgs e)
        {
            if((this.MenuItemIndicator.Checked == true) && 
                (this.MenuItemShowSourceUI.Checked == false))
            {
                this.MenuItemIndicator.Checked = false;
            }
            else
            {
                this.MenuItemIndicator.Checked = true;
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "Highlight" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtHighlight_TextChanged(object sender, System.EventArgs e)
        {
            int countHighlight;
            int countShadow;

            //An initial value is set to 230
            if( this.txtHighlight.Text.Length == 0)
            {
                this.txtHighlight.Text = "230";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtHighlight.Text) == true)
            {
                try
                {

                    countHighlight = System.Int32.Parse(this.txtHighlight.Text);
                }
                catch (System.Exception)
                {
                    countHighlight = 1;
                }
            }
            else
            {
                countHighlight = 1;
            }

            if(new Regex(@"^-?\d+$").IsMatch(this.txtShadow.Text) == true)
            {
                try
                {
                    countShadow = System.Int32.Parse(this.txtShadow.Text);
                }
                catch (System.Exception)
                {
                    countShadow = 0;
                }
            }
            else
            {
                countShadow = 0;
            }
            
            if(countHighlight > 255)
            {
                this.txtHighlight.Text = "255";
            }
            else if(countHighlight < 1)
            {
                this.txtHighlight.Text = "1";
            }
            else if(countHighlight <= countShadow)
            {
                this.txtHighlight.Text = Convert.ToString(countShadow + 1);
            }
            else 
            {
                this.txtHighlight.Text = countHighlight.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "Shadow" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtShadow_TextChanged(object sender, System.EventArgs e)
        {
            int countHighlight;
            int countShadow;

            //An initial value is set to 10
            if(txtShadow.Text.Length == 0)
            {
                this.txtShadow.Text = "10";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtHighlight.Text) == true)
            {
                try
                {

                    countHighlight = System.Int32.Parse(this.txtHighlight.Text);
                }
                catch (System.Exception)
                {
                    countHighlight = 1;
                }
            }
            else
            {
                countHighlight = 1;
            }
            

            if(new Regex(@"^-?\d+$").IsMatch(this.txtShadow.Text) == true)
            {
                try
                {
                    countShadow = System.Int32.Parse(this.txtShadow.Text);
                }
                catch (System.Exception)
                {
                    countShadow = 0;
                }
            }
            else
            {
                countShadow = 0;
            }

            if(countShadow > 254)
            {
                this.txtShadow.Text = "254";
            }
            else if(countShadow < 0)
            {
                this.txtShadow.Text = "0";
            }
            else if(countShadow >= countHighlight)
            {
                if(countHighlight - 1 == -1)
                {
                    this.txtShadow.Text = "0";
                }
                else
                {
                    this.txtShadow.Text = Convert.ToString(countHighlight - 1);
                }
            }
            else
            {
                this.txtShadow.Text = countShadow.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : Selection of a "Unit" list box was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void cboUnit_SelectedIndexChanged(object sender, System.EventArgs e)
        {
            string strUnit;

            UpdateUnit();
            ModuleScan.PreviousUnit = this.cboUnit.SelectedIndex;
            if(this.cboUnit.SelectedIndex == ModuleScan.UNIT_INCHES)
            {
                strUnit = "inch";
            }
            else if(this.cboUnit.SelectedIndex == ModuleScan.UNIT_CENTIMETERS)
            {
                strUnit = "cm";
            }
            else
            {
                strUnit = "pixel";
            }
            this.label22.Text = strUnit;
            this.label23.Text = strUnit;
            this.label26.Text = strUnit;
            this.label27.Text = strUnit;
            this.label29.Text = strUnit;
            this.label31.Text = strUnit;
            this.label58.Text = strUnit;
            this.label82.Text = strUnit;
            this.label83.Text = strUnit;
            this.label86.Text = strUnit;
            this.label87.Text = strUnit;
            this.label107.Text = strUnit;
            this.label111.Text = strUnit;
            this.label114.Text = strUnit;
            this.label115.Text = strUnit;
            this.label145.Text = strUnit;
            this.label150.Text = strUnit;
            this.label167.Text = strUnit;
            this.label193.Text = strUnit;
        }

        //----------------------------------------------------------------------------
        //   Function     : Rounds off numerical values.
        //   Argument     : Target numerical value
        //                : Valid digits
        //   Return value : Rounded-off numerical value
        //----------------------------------------------------------------------------
        private double RoundOff(double dValue, int iFigure)
        {
            double dCoef = System.Math.Pow(10, iFigure);

            if(dValue > 0)
            {
                return System.Math.Floor((dValue * dCoef) + 0.5) / dCoef;
            }
            else
            {
                return System.Math.Ceiling((dValue * dCoef) - 0.5) / dCoef;
            }
         }

        //----------------------------------------------------------------------------
        //   Function     : Returns a resolution value.
        //   Argument     : Selected resolution
        //   Return value : Resolution value (dpi)
        //----------------------------------------------------------------------------
        private int ResolutionValue(int reso)
        {
            switch (reso)
            {
                case ModuleScan.RS_200:
                    return 200;
                case ModuleScan.RS_240:
                    return 240;
                case ModuleScan.RS_300:
                    return 300;
                case ModuleScan.RS_400:
                    return 400;
                case ModuleScan.RS_500:
                    return 500;
                case ModuleScan.RS_600:
                    return 600;
                case ModuleScan.RS_700:
                    return 700;
                case ModuleScan.RS_800:
                    return 800;
                case 8:
                    return 1200;
                default:
                    if (txtCustomResolution.Text.Length == 0)
                    {
                        return 300;
                    }
                    else
                    {
                        return System.Int32.Parse(txtCustomResolution.Text);
                    }
            }
        }

        //----------------------------------------------------------------------------
        //   Function     : Returns a resolution value.
        //   Argument     : Selected resolution
        //                : Order of the selected images to be output
        //   Return value : Resolution value (dpi)
        //----------------------------------------------------------------------------
        private int StreamResolutionValue(int reso, int streamNumber)
        {
            switch (reso)
            {
                case ModuleScan.RS_200:
                    return 200;
                case ModuleScan.RS_240:
                    return 240;
                case ModuleScan.RS_300:
                    return 300;
                case ModuleScan.RS_400:
                    return 400;
                case ModuleScan.RS_500:
                    return 500;
                case ModuleScan.RS_600:
                    return 600;
                case ModuleScan.RS_700:
                    return 700;
                case ModuleScan.RS_800:
                    return 800;
                case 8:
                    return 1200;
                default:
                    string strCustomResolution = "";
                    if (streamNumber == 1)
                    {
                        strCustomResolution = this.txtStream1CustomResolution.Text;
                    }
                    else if (streamNumber == 2)
                    {
                        strCustomResolution = this.txtStream2CustomResolution.Text;
                    }
                    else
                    {
                        strCustomResolution = this.txtStream3CustomResolution.Text;
                    }

                    if (strCustomResolution.Length == 0)
                    {
                        return 300;
                    }
                    else
                    {
                        return System.Int32.Parse(strCustomResolution);
                    }
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : Unit conversion
        //   Argument    : Nothing
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void UpdateUnit()
        {
            double dValue;
            int iRreso;
            int iFigure = 0;

            if(ModuleScan.bInitialFileRead == true)
            {
                iRreso = ResolutionValue(this.cboResolution.SelectedIndex);

                if(this.cboUnit.SelectedIndex == ModuleScan.UNIT_INCHES)
                {
                    dValue = 1;
                }
                else if(this.cboUnit.SelectedIndex == ModuleScan.UNIT_CENTIMETERS)
                {
                    iFigure = 1;
                    dValue = ModuleScan.INCH254;
                }
                else
                {
                    iFigure = 0;
                    dValue = iRreso;
                }

                if((cboPaperSupply.SelectedIndex != ModuleScan.ADF_A3CS) &&
                    (cboPaperSupply.SelectedIndex != ModuleScan.ADF_DLCS) &&
                    (cboPaperSupply.SelectedIndex != ModuleScan.ADF_B4CS))
                {
                    switch(cboPaperSize.SelectedIndex)
                    {
                        case ModuleScan.PSIZE_A3:
                            this.txtCustomPaperWidth.Text = Convert.ToString(11.693 * dValue);
                            this.txtCustomPaperLength.Text =Convert.ToString(16.536 * dValue);
                            break;
                        case ModuleScan.PSIZE_A4:
                            this.txtCustomPaperWidth.Text = Convert.ToString(8.268 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(11.693 * dValue);
                            break;
                        case ModuleScan.PSIZE_A5:
                            this.txtCustomPaperWidth.Text = Convert.ToString(5.827 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(8.268 * dValue);
                            break;
                        case ModuleScan.PSIZE_A6:
                            this.txtCustomPaperWidth.Text = Convert.ToString(4.134 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(5.827 * dValue);
                            break;
                        case ModuleScan.PSIZE_B4:
                            this.txtCustomPaperWidth.Text = Convert.ToString(10.119 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(14.331 * dValue);
                            break;
                        case ModuleScan.PSIZE_B5:
                            this.txtCustomPaperWidth.Text = Convert.ToString(7.166 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(10.119 * dValue);
                            break;
                        case ModuleScan.PSIZE_B6:
                            this.txtCustomPaperWidth.Text = Convert.ToString(5.04 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(7.166 * dValue);
                            break;
                        case ModuleScan.PSIZE_LETTER:
                            this.txtCustomPaperWidth.Text = Convert.ToString(8.5 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(11.0 * dValue);
                            break;
                        case ModuleScan.PSIZE_LEGAL:
                            this.txtCustomPaperWidth.Text = Convert.ToString(8.5 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(14.0 * dValue);
                            break;
                        case ModuleScan.PSIZE_EXECUTIVE:
                            this.txtCustomPaperWidth.Text = Convert.ToString(7.25 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(10.5 * dValue);
                            break;
                        case ModuleScan.PSIZE_DOUBLELETTER:
                            this.txtCustomPaperWidth.Text = Convert.ToString(11.0 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(17.0 * dValue);
                            break;
                        case ModuleScan.PSIZE_POSTCARD:
                            this.txtCustomPaperWidth.Text = Convert.ToString(3.938 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(5.866 * dValue);
                            break;
                        case ModuleScan.PSIZE_PHOTO:
                            this.txtCustomPaperWidth.Text = Convert.ToString(3.504 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(5.0 * dValue);
                            break;
                        case ModuleScan.PSIZE_CARD:
                            this.txtCustomPaperWidth.Text = Convert.ToString(2.166 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(3.583 * dValue);
                            break;
                        case ModuleScan.PSIZE_C4:
                            this.txtCustomPaperWidth.Text = Convert.ToString(9.016 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(12.756 * dValue);
                            break;
                        case ModuleScan.PSIZE_C5:
                            this.txtCustomPaperWidth.Text = Convert.ToString(6.378 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(9.016 * dValue);
                            break;
                        case ModuleScan.PSIZE_C6:
                            this.txtCustomPaperWidth.Text = Convert.ToString(4.489 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(6.378 * dValue);
                            break;
                        case ModuleScan.PSIZE_ISO_B4:
                            this.txtCustomPaperWidth.Text = Convert.ToString(9.843 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(13.898 * dValue);
                            break;
                        case ModuleScan.PSIZE_ISO_B5:
                            this.txtCustomPaperWidth.Text = Convert.ToString(6.929 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(9.843 * dValue);
                            break;
                        case ModuleScan.PSIZE_ISO_B6:
                            this.txtCustomPaperWidth.Text = Convert.ToString(4.921 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(6.929 * dValue);
                            break;
                        case ModuleScan.PSIZE_85x170:
                            this.txtCustomPaperWidth.Text = Convert.ToString(8.5 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(17 * dValue);
                            break;
                        case ModuleScan.PSIZE_85x340:
                            this.txtCustomPaperWidth.Text = Convert.ToString(8.5 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(34 * dValue);
                            break;
                        case ModuleScan.PSIZE_85x1063:
                            this.txtCustomPaperWidth.Text = Convert.ToString(8.5 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(106.3 * dValue);
                            break;
                        case ModuleScan.PSIZE_85x1250:
                            this.txtCustomPaperWidth.Text = Convert.ToString(8.5 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(125 * dValue);
                            break;
                        case ModuleScan.PSIZE_85x1600:
                            this.txtCustomPaperWidth.Text = Convert.ToString(8.5 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(160 * dValue);
                            break;
                        case ModuleScan.PSIZE_85x2150:
                            this.txtCustomPaperWidth.Text = Convert.ToString(8.5 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(215 * dValue);
                            break;
                        case ModuleScan.PSIZE_85x2200:
                            this.txtCustomPaperWidth.Text = Convert.ToString(8.5 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(220 * dValue);
                            break;
                        case ModuleScan.PSIZE_117x170:
                            this.txtCustomPaperWidth.Text = Convert.ToString(11.7 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(17 * dValue);
                            break;
                        case ModuleScan.PSIZE_117x340:
                            this.txtCustomPaperWidth.Text = Convert.ToString(11.7 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(34 * dValue);
                            break;
                        case ModuleScan.PSIZE_120x170:
                            this.txtCustomPaperWidth.Text = Convert.ToString(12 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(17 * dValue);
                            break;
                        case ModuleScan.PSIZE_120x340:
                            this.txtCustomPaperWidth.Text = Convert.ToString(12 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(34 * dValue);
                            break;
                        case ModuleScan.PSIZE_120x1250:
                            this.txtCustomPaperWidth.Text = Convert.ToString(12 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(125 * dValue);
                            break;
                        case ModuleScan.PSIZE_120x1063:
                            this.txtCustomPaperWidth.Text = Convert.ToString(12 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(106.3 * dValue);
                            break;
                        case ModuleScan.PSIZE_120x1600:
                            this.txtCustomPaperWidth.Text = Convert.ToString(12 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(160 * dValue);
                            break;
                        case ModuleScan.PSIZE_120x2150:
                            this.txtCustomPaperWidth.Text = Convert.ToString(12 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(215 * dValue);
                            break;
                        case ModuleScan.PSIZE_120x2200:
                            this.txtCustomPaperWidth.Text = Convert.ToString(12 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(220 * dValue);
                            break;
                        case ModuleScan.PSIZE_85x2400:
                            this.txtCustomPaperWidth.Text = Convert.ToString(8.5 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(240 * dValue);
                            break;
                        default:
                            this.txtCustomPaperWidth.Text = ConvertUnit(double.Parse(txtCustomPaperWidth.Text), iRreso).ToString();
                            this.txtCustomPaperLength.Text = ConvertUnit(double.Parse(txtCustomPaperLength.Text), iRreso).ToString();
                            break;
                    }
                }
                else
                {
                    switch(this.cboPaperSupply.SelectedIndex)
                    {
                        case ModuleScan.ADF_A3CS:
                            this.txtCustomPaperWidth.Text = Convert.ToString(11.693 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(16.536 * dValue);
                            break;
                        case ModuleScan.ADF_B4CS:
                            this.txtCustomPaperWidth.Text = Convert.ToString(10.119 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(14.331 * dValue);
                            break;
                        case ModuleScan.ADF_DLCS:
                            this.txtCustomPaperWidth.Text = Convert.ToString(11.0 * dValue);
                            this.txtCustomPaperLength.Text = Convert.ToString(17.0 * dValue);
                            break;
                        default:
                            break;
                    }
                }

                if((cboPaperSupply.SelectedIndex != ModuleScan.ADF_A3CS) &&
                    (cboPaperSupply.SelectedIndex != ModuleScan.ADF_DLCS) &&
                    (cboPaperSupply.SelectedIndex != ModuleScan.ADF_B4CS) &&
                    (cboPaperSupply.SelectedIndex != ModuleScan.ADF_CS))
                {
                    this.txtRegionLeft.Text = ConvertUnit(double.Parse(txtRegionLeft.Text), iRreso).ToString();
                    this.txtRegionTop.Text = ConvertUnit(double.Parse(txtRegionTop.Text), iRreso).ToString();
                    this.txtRegionWidth.Text = ConvertUnit(double.Parse(txtRegionWidth.Text), iRreso).ToString();
                    this.txtRegionLength.Text = ConvertUnit(double.Parse(txtRegionLength.Text), iRreso).ToString();
                }
                this.txtEndorserOffset.Text = ConvertUnit(double.Parse(txtEndorserOffset.Text), iRreso).ToString();
                this.txtDigitalEndorserXOffset.Text = ConvertUnit(double.Parse(txtDigitalEndorserXOffset.Text), iRreso).ToString();
                this.txtDigitalEndorserYOffset.Text = ConvertUnit(double.Parse(txtDigitalEndorserYOffset.Text), iRreso).ToString();
                this.txtBarcodeRegionLeft.Text = ConvertUnit(double.Parse(txtBarcodeRegionLeft.Text), iRreso).ToString();
                this.txtBarcodeRegionTop.Text = ConvertUnit(double.Parse(txtBarcodeRegionTop.Text), iRreso).ToString();
                this.txtBarcodeRegionWidth.Text = ConvertUnit(double.Parse(txtBarcodeRegionWidth.Text), iRreso).ToString();
                this.txtBarcodeRegionLength.Text = ConvertUnit(double.Parse(txtBarcodeRegionLength.Text), iRreso).ToString();
                this.txtEdgeFillerTop.Text = ConvertUnit(double.Parse(txtEdgeFillerTop.Text), iRreso).ToString();
                this.txtEdgeFillerBottom.Text = ConvertUnit(double.Parse(txtEdgeFillerBottom.Text), iRreso).ToString();
                this.txtEdgeFillerLeft.Text = ConvertUnit(double.Parse(txtEdgeFillerLeft.Text), iRreso).ToString();
                this.txtEdgeFillerRight.Text = ConvertUnit(double.Parse(txtEdgeFillerRight.Text), iRreso).ToString();
                this.txtMultiFeedModeChangeSize.Text = ConvertUnit(double.Parse(txtMultiFeedModeChangeSize.Text), iRreso).ToString();
                this.txtFrontBackMergingTargetSize.Text = ConvertUnit(double.Parse(txtFrontBackMergingTargetSize.Text), iRreso).ToString();
                if (cboUnit.SelectedIndex != ModuleScan.UNIT_INCHES)
                {
                    this.txtCustomPaperWidth.Text = RoundOff(double.Parse(txtCustomPaperWidth.Text), iFigure).ToString();
                    this.txtCustomPaperLength.Text = RoundOff(double.Parse(txtCustomPaperLength.Text), iFigure).ToString();
                    this.txtRegionLeft.Text = RoundOff(double.Parse(txtRegionLeft.Text), iFigure).ToString();
                    this.txtRegionTop.Text = RoundOff(double.Parse(txtRegionTop.Text), iFigure).ToString();
                    this.txtRegionWidth.Text = RoundOff(double.Parse(txtRegionWidth.Text), iFigure).ToString();
                    this.txtRegionLength.Text = RoundOff(double.Parse(txtRegionLength.Text), iFigure).ToString();
                    this.txtEndorserOffset.Text = RoundOff(double.Parse(txtEndorserOffset.Text), iFigure).ToString();
                    this.txtDigitalEndorserXOffset.Text = RoundOff(double.Parse(txtDigitalEndorserXOffset.Text), iFigure).ToString();
                    this.txtDigitalEndorserYOffset.Text = RoundOff(double.Parse(txtDigitalEndorserYOffset.Text), iFigure).ToString();
                    this.txtBarcodeRegionLeft.Text = RoundOff(double.Parse(txtBarcodeRegionLeft.Text), iFigure).ToString();
                    this.txtBarcodeRegionTop.Text = RoundOff(double.Parse(txtBarcodeRegionTop.Text), iFigure).ToString();
                    this.txtBarcodeRegionWidth.Text = RoundOff(double.Parse(txtBarcodeRegionWidth.Text), iFigure).ToString();
                    this.txtBarcodeRegionLength.Text = RoundOff(double.Parse(txtBarcodeRegionLength.Text), iFigure).ToString();
                    this.txtEdgeFillerTop.Text = RoundOff(double.Parse(txtEdgeFillerTop.Text), iFigure).ToString();
                    this.txtEdgeFillerBottom.Text = RoundOff(double.Parse(txtEdgeFillerBottom.Text), iFigure).ToString();
                    this.txtEdgeFillerLeft.Text = RoundOff(double.Parse(txtEdgeFillerLeft.Text), iFigure).ToString();
                    this.txtEdgeFillerRight.Text = RoundOff(double.Parse(txtEdgeFillerRight.Text), iFigure).ToString();
                    this.txtMultiFeedModeChangeSize.Text = RoundOff(double.Parse(txtMultiFeedModeChangeSize.Text), iFigure).ToString();
                    this.txtFrontBackMergingTargetSize.Text = RoundOff(double.Parse(txtFrontBackMergingTargetSize.Text), iFigure).ToString();
                }
            }
        }

        //----------------------------------------------------------------------------
        //   Function     : Converts into another unit.
        //   Argument     : Value to be converted into another unit
        //                  Resolution (dpi)
        //   Return value : Result of unit conversion
        //----------------------------------------------------------------------------
        private double ConvertUnit(double dValue, int iReso)
        {
            if(this.cboUnit.SelectedIndex == ModuleScan.UNIT_INCHES)
            {
                if(ModuleScan.PreviousUnit == ModuleScan.UNIT_CENTIMETERS)
                {
                    return dValue / ModuleScan.INCH254;
                }
                else if(ModuleScan.PreviousUnit == ModuleScan.UNIT_PIXELS)
                {
                    return dValue / iReso;
                }
            }
            else if(this.cboUnit.SelectedIndex == ModuleScan.UNIT_CENTIMETERS)
            {
                if(ModuleScan.PreviousUnit == ModuleScan.UNIT_INCHES)
                {
                    return dValue * ModuleScan.INCH254;
                }
                else if(ModuleScan.PreviousUnit == ModuleScan.UNIT_PIXELS)
                {
                    return dValue / iReso * ModuleScan.INCH254;
                }
            }
            else if(this.cboUnit.SelectedIndex == ModuleScan.UNIT_PIXELS)
            {
                if(ModuleScan.PreviousUnit == ModuleScan.UNIT_INCHES)
                {
                    return dValue * iReso;
                }
                else if(ModuleScan.PreviousUnit == ModuleScan.UNIT_CENTIMETERS)
                {
                    return dValue * iReso / ModuleScan.INCH254;
                }
                if(ModuleScan.PreviousReso != System.Int32.Parse(this.txtCustomResolution.Text))
                {
                    return dValue * iReso / ModuleScan.PreviousReso;
                }
            }
            return dValue;
        }

        [STAThread]
        static void Main() 
        {
            try
            {
                Application.Run(new FormScan());
            }
            catch (System.Exception e)
            {
                MessageBox.Show(e.Message.ToString(), "fiScanTest");
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : ScanToFile Event
        //   Argument    : Scanning image count
        //                 Scanning image file name
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void axFiScn1_ScanToFile(object sender, AxFiScnLib._DFiScnEvents_ScanToFileEvent e)
        {
            if (this.chkAIQCNotice.CheckState == CheckState.Checked)
            {
                String[] aiqcResult = { e.scanCount.ToString(), "", "", "", "", "", "", "", "", aiqcResultHashTable[axFiScn1.AIQCResult].ToString(), "", "" };
                resultList.Add(aiqcResult);
            }
            if (axFiScn1.BlankPageSkip != 0 && axFiScn1.BlankPageNotice == 1) 
            {
                String[] blankPageResult = { e.scanCount.ToString(), "", "", "", "", "", "", "", "", "", blankPageResultHashTable[axFiScn1.BlankPageResult].ToString(), "" };
                resultList.Add(blankPageResult);
            }
            if ((axFiScn1.MultiFeed > 0) && (axFiScn1.MultiFeedNotice == true))
            {
                String[] multiResult = { e.scanCount.ToString(), "", "", "", "", "", "", "", "", "", "", multiResultHashTable[axFiScn1.MultiFeedResult].ToString() };
                resultList.Add(multiResult);
            }

            if (ModuleScan.bCancelScan) 
            {
                axFiScn1.CancelScan();
                ModuleScan.bCancelScan = false;
            }
            if (this.MenuItemShowEvent.Checked)
            {
                CreateShowEventMessage("ScanToFile");
            }

            if (this.MenuItemOutputResult.Checked) {
                System.IO.StreamWriter sw = new System.IO.StreamWriter(ModuleScan.strOutputResult, true);
                sw.WriteLine("ScanToFile Event");
                sw.WriteLine("ScanCount            : " + e.scanCount);
                sw.WriteLine("FileName             : " + e.fileName);
                sw.WriteLine("");
                sw.WriteLine("PageNumber Property");
                sw.WriteLine("value                : " + axFiScn1.PageNumber);
                sw.WriteLine("");
                sw.Close();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : Menu click event to notify whether or not a document is loaded on the ADF
        //   Argument    : Nothing
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void menuItemFeederLoaded_Click(object sender, System.EventArgs e)
        {
            int ErrorCode;

            // Process of notifying whether or not a document is loaded on the ADF
            if(axFiScn1.FeederLoaded(this.Handle.ToInt32()))
            {
                MessageBox.Show("The scanner is available.", "fiScanTest");
            }
            else
            {
                ErrorCode = axFiScn1.ErrorCode;
                MessageBox.Show("The scanner is unavailable, or an error ocurred.\n\terror code :" + HexString(ErrorCode), "fiScanTest");
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "BarcodeDetection" check box was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void chkBarcodeDetection_CheckedChanged(object sender, System.EventArgs e)
        {
            if(this.chkBarcodeDetection.CheckState == CheckState.Checked)
            {
                this.cboBarcodeDirection.Enabled = true;
                this.txtBarcodeRegionLeft.Enabled = true;
                this.txtBarcodeRegionTop.Enabled = true;
                this.txtBarcodeRegionWidth.Enabled = true;
                this.txtBarcodeRegionLength.Enabled = true;
                this.chkEAN8.Enabled = true;
                this.chkEAN13.Enabled = true;
                this.chkCode3of9.Enabled = true;
                this.chkCode128.Enabled = true;
                this.chkITF.Enabled = true;
                this.chkUPCA.Enabled = true;
                this.chkCodabar.Enabled = true;
                this.chkPDF417.Enabled = true;
                this.chkQRCode.Enabled = true;
                this.chkDataMatrix.Enabled = true;
                this.chkAztecCode.Enabled = true;
                this.txtBarcodeMaxSearchPriorities.Enabled = true;
                this.chkBarcodeNotDetectionNotice.Enabled = true;
            }
            else
            {
                this.cboBarcodeDirection.Enabled = false;
                this.txtBarcodeRegionLeft.Enabled = false;
                this.txtBarcodeRegionTop.Enabled = false;
                this.txtBarcodeRegionWidth.Enabled = false;
                this.txtBarcodeRegionLength.Enabled = false;
                this.chkEAN8.Enabled = false;
                this.chkEAN13.Enabled = false;
                this.chkCode3of9.Enabled = false;
                this.chkCode128.Enabled = false;
                this.chkITF.Enabled = false;
                this.chkUPCA.Enabled = false;
                this.chkCodabar.Enabled = false;
                this.chkPDF417.Enabled = false;
                this.chkQRCode.Enabled = false;
                this.chkDataMatrix.Enabled = false;
                this.chkAztecCode.Enabled = false;
                this.txtBarcodeMaxSearchPriorities.Enabled = false;
                this.chkBarcodeNotDetectionNotice.Enabled = false;
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "BarcodeRegionLeft" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtBarcodeRegionLeft_TextChanged(object sender, System.EventArgs e)
        {
            double count;
            //An initial value is set to 0
            if(this.txtBarcodeRegionLeft.Text.Length == 0)
            {
                this.txtBarcodeRegionLeft.Text = "0";
                return;
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtBarcodeRegionLeft.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtBarcodeRegionLeft.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }            
            
            if(count < 0)
            {
                this.txtBarcodeRegionLeft.Text = "0";
            }
            else
            {
                this.txtBarcodeRegionLeft.Text = changeDigitByUnit(count);
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "BarcodeRegionTop" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtBarcodeRegionTop_TextChanged(object sender, System.EventArgs e)
        {
            double count;
            //An initial value is set to 0
            if(this.txtBarcodeRegionTop.Text.Length == 0)
            {
                this.txtBarcodeRegionTop.Text = "0";
                return;
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtBarcodeRegionTop.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtBarcodeRegionTop.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }            
            
            if(count < 0)
            {
                this.txtBarcodeRegionTop.Text = "0";
            }
            else
            {
                this.txtBarcodeRegionTop.Text = changeDigitByUnit(count);
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "BarcodeRegionWidth" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtBarcodeRegionWidth_TextChanged(object sender, System.EventArgs e)
        {
            double count;
            //An initial value is set to 0
            if(this.txtBarcodeRegionWidth.Text.Length == 0)
            {
                this.txtBarcodeRegionWidth.Text = "0";
                return;
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtBarcodeRegionWidth.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtBarcodeRegionWidth.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
                
            if(count < 0)
            {
                this.txtBarcodeRegionWidth.Text = "0";
            }
            else
            {
                this.txtBarcodeRegionWidth.Text = changeDigitByUnit(count);
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "BarcodeRegionLength" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtBarcodeRegionLength_TextChanged(object sender, System.EventArgs e)
        {
            double count;
            //An initial value is set to 0
            if(this.txtBarcodeRegionLength.Text.Length == 0)
            {
                this.txtBarcodeRegionLength.Text = "0";
                return;
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtBarcodeRegionLength.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtBarcodeRegionLength.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
                
            if(count < 0)
            {
                this.txtBarcodeRegionLength.Text = "0";
            }
            else
            {
                this.txtBarcodeRegionLength.Text = changeDigitByUnit(count);
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : Selection of a "EdgeFiller" combo box was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void cboEdgeFiller_SelectedIndexChanged(object sender, System.EventArgs e)
        {
            if(this.cboEdgeFiller.SelectedIndex != ModuleScan.EF_OFF)
            {
                this.txtEdgeFillerTop.Enabled = true;
                this.txtEdgeFillerBottom.Enabled = true;
                this.txtEdgeFillerLeft.Enabled = true;
                this.txtEdgeFillerRight.Enabled = true;
            }
            else 
            {
                this.txtEdgeFillerTop.Enabled = false;
                this.txtEdgeFillerBottom.Enabled = false;
                this.txtEdgeFillerLeft.Enabled = false;
                this.txtEdgeFillerRight.Enabled = false;
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "EdgeFillerTop" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtEdgeFillerTop_TextChanged(object sender, System.EventArgs e)
        {
            double count;
            //An initial value is set to 0
            if(this.txtEdgeFillerTop.Text.Length == 0)
            {
                this.txtEdgeFillerTop.Text = "0";
                return;
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtEdgeFillerTop.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtEdgeFillerTop.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
                
            if(count < 0)
            {
                this.txtEdgeFillerTop.Text = "0";
            }
            else
            {
                this.txtEdgeFillerTop.Text = changeDigitByUnit(count);
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "EdgeFillerBottom" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtEdgeFillerBottom_TextChanged(object sender, System.EventArgs e)
        {
            double count;
            //An initial value is set to 0
            if(this.txtEdgeFillerBottom.Text.Length == 0)
            {
                this.txtEdgeFillerBottom.Text = "0";
                return;
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtEdgeFillerBottom.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtEdgeFillerBottom.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
                
            if(count < 0)
            {
                this.txtEdgeFillerBottom.Text = "0";
            }
            else
            {
                this.txtEdgeFillerBottom.Text = changeDigitByUnit(count);
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "EdgeFillerLeft" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtEdgeFillerLeft_TextChanged(object sender, System.EventArgs e)
        {
            double count;
            //An initial value is set to 0
            if(this.txtEdgeFillerLeft.Text.Length == 0)
            {
                this.txtEdgeFillerLeft.Text = "0";
                return;
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtEdgeFillerLeft.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtEdgeFillerLeft.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
                
            if(count < 0)
            {
                this.txtEdgeFillerLeft.Text = "0";
            }
            else
            {
                this.txtEdgeFillerLeft.Text = changeDigitByUnit(count);
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "EdgeFillerRight" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtEdgeFillerRight_TextChanged(object sender, System.EventArgs e)
        {
            double count;
            //An initial value is set to 0
            if(this.txtEdgeFillerRight.Text.Length == 0)
            {
                this.txtEdgeFillerRight.Text = "0";
                return;
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtEdgeFillerRight.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtEdgeFillerRight.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
                
            if(count < 0)
            {
                this.txtEdgeFillerRight.Text = "0";
            }
            else
            {
                this.txtEdgeFillerRight.Text = changeDigitByUnit(count);
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "BlankPageSkip" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtBlankPageSkip_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 0
            if(this.txtBlankPageSkip.Text.Length == 0)
            {
                this.txtBlankPageSkip.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtBlankPageSkip.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtBlankPageSkip.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
        
            if(count > 11)
            {
                this.txtBlankPageSkip.Text = "11";
            }
            else if(count < 0)
            {
                this.txtBlankPageSkip.Text = "0";
            }
            else
            {
                this.txtBlankPageSkip.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The "CheckADF" button was pushed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void ButtonCheckADF_Click(object sender, System.EventArgs e)
        {
            FormFeederLoaded frmFeederLoaded = new FormFeederLoaded();
            frmFeederLoaded.StartPosition = FormStartPosition.Manual;
            frmFeederLoaded.Top = this.Top;
            frmFeederLoaded.Left = this.Left + this.Width;
            frmFeederLoaded.Owner = this;
            if (frmFeederLoaded.ShowDialog() == System.Windows.Forms.DialogResult.OK) 
            {
                this.StartScan();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "DTCSensitivity" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtDTCSensitivity_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 50
            if(this.txtDTCSensitivity.Text.Length == 0)
            {
                this.txtDTCSensitivity.Text = "50";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtDTCSensitivity.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtDTCSensitivity.Text);
                }
                catch (System.Exception)
                {
                    count = 50;
                }
            }
            else
            {
                count = 50;
            }
        
            if(count > 100)
            {
                this.txtDTCSensitivity.Text = "100";
            }
            else if(count < 0)
            {
                this.txtDTCSensitivity.Text = "0";
            }
            else
            {
                this.txtDTCSensitivity.Text = count.ToString();
            }         
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "BackgroundThreshold" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtBackgroundThreshold_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 50
            if(this.txtBackgroundThreshold.Text.Length == 0)
            {
                this.txtBackgroundThreshold.Text = "50";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtBackgroundThreshold.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtBackgroundThreshold.Text);
                }
                catch (System.Exception)
                {
                    count = 50;
                }
            }
            else
            {
                count = 50;
            }
        
            if(count > 100)
            {
                this.txtBackgroundThreshold.Text = "100";
            }
            else if(count < 0)
            {
                this.txtBackgroundThreshold.Text = "0";
            }
            else
            {
                this.txtBackgroundThreshold.Text = count.ToString();
            }         
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "CharacterThickness" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtCharacterThickness_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 5
            if(this.txtCharacterThickness.Text.Length == 0)
            {
                this.txtCharacterThickness.Text = "5";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtCharacterThickness.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtCharacterThickness.Text);
                }
                catch (System.Exception)
                {
                    count = 5;
                }
            }
            else
            {
                count = 5;
            }
        
            if(count > 10)
            {
                this.txtCharacterThickness.Text = "10";
            }
            else if(count < 0)
            {
                this.txtCharacterThickness.Text = "0";
            }
            else
            {
                this.txtCharacterThickness.Text = count.ToString();
            }         
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "NoiseRejection" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtNoiseRejection_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 0
            if(this.txtNoiseRejection.Text.Length == 0)
            {
                this.txtNoiseRejection.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtNoiseRejection.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtNoiseRejection.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
        
            if(count > 20)
            {
                this.txtNoiseRejection.Text = "20";
            }
            else if(count < 0)
            {
                this.txtNoiseRejection.Text = "0";
            }
            else
            {
                this.txtNoiseRejection.Text = count.ToString();
            }         
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "ADTCThreshold" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtADTCThreshold_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 83
            if(this.txtADTCThreshold.Text.Length == 0)
            {
                this.txtADTCThreshold.Text = "83";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtADTCThreshold.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtADTCThreshold.Text);
                }
                catch (System.Exception)
                {
                    count = 83;
                }
            }
            else
            {
                count = 83;
            }
        
            if(count > 255)
            {
                this.txtADTCThreshold.Text = "255";
            }
            else if(count < 1)
            {
                this.txtADTCThreshold.Text = "1";
            }
            else
            {
                this.txtADTCThreshold.Text = count.ToString();
            }         
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "SDTCSensitivity" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtSDTCSensitivity_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 2
            if(this.txtSDTCSensitivity.Text.Length == 0)
            {
                this.txtSDTCSensitivity.Text = "2";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtSDTCSensitivity.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtSDTCSensitivity.Text);
                }
                catch (System.Exception)
                {
                    count = 2;
                }
            }
            else
            {
                count = 2;
            }
        
            if(count > 3)
            {
                this.txtSDTCSensitivity.Text = "3";
            }
            else if(count < 1)
            {
                this.txtSDTCSensitivity.Text = "1";
            }
            else
            {
                this.txtSDTCSensitivity.Text = count.ToString();
            }         
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "FadingCompensation" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtFadingCompensation_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 0
            if(this.txtFadingCompensation.Text.Length == 0)
            {
                this.txtFadingCompensation.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtFadingCompensation.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtFadingCompensation.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
        
            if(count > 5)
            {
                this.txtFadingCompensation.Text = "5";
            }
            else if(count < 0)
            {
                this.txtFadingCompensation.Text = "0";
            }
            else
            {
                this.txtFadingCompensation.Text = count.ToString();
            }         
        }

        //----------------------------------------------------------------------------
        //   Function    : Detection result of Barcode is added to arrangement.
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void axFiScn1_DetectBarcode(object sender, AxFiScnLib._DFiScnEvents_DetectBarcodeEvent e)
        {
            if (this.MenuItemShowEvent.Checked)
            {
                CreateShowEventMessage("DetectBarcode");
            }
            if (this.MenuItemOutputResult.Checked)
            {
                System.IO.StreamWriter sw = new System.IO.StreamWriter(ModuleScan.strOutputResult, true);
                sw.WriteLine("DetectBarcode Event");
                sw.WriteLine("ReadCount              : " + e.readCount);
                sw.WriteLine("BarcodeType            : " + e.barcodeType);
                sw.WriteLine("BarcodeText            : " + e.barcodeText);
                sw.WriteLine("");
                sw.Close();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : Detection result of PatchCode is added to arrangement. 
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void axFiScn1_DetectPatchCode(object sender, AxFiScnLib._DFiScnEvents_DetectPatchCodeEvent e)
        {
            String[] patchCode = { e.readCount.ToString(), "", "", "", "", "", "", "", patchCodeHashTable[e.patchCodeType].ToString(), "", "", "" };
            resultList.Add(patchCode);
            if (this.MenuItemShowEvent.Checked)
            {
                CreateShowEventMessage("DetectPatchCode");
            }
            if (this.MenuItemOutputResult.Checked)
            {
                System.IO.StreamWriter sw = new System.IO.StreamWriter(ModuleScan.strOutputResult, true);
                sw.WriteLine("DetectPatchCode Event");
                sw.WriteLine("ReadCount              : " + e.readCount);
                sw.WriteLine("PatchCodeType          : " + e.patchCodeType);
                sw.WriteLine("");
                sw.Close();
            }
        }


        //----------------------------------------------------------------------------
        //   Function    : Change number of decimals by selected unit
        //   Argument    : double
        //   Return code : string
        //----------------------------------------------------------------------------
        private string changeDigitByUnit(double dValue)
        {
            string result = "";
            if (this.cboUnit.SelectedIndex == ModuleScan.UNIT_INCHES)
            {
                result = dValue.ToString("F3");
            }
            else if (this.cboUnit.SelectedIndex == ModuleScan.UNIT_CENTIMETERS)
            {
                result = dValue.ToString("F1");
            }
            else
            {
                result = dValue.ToString("F0");
            }
            return result;
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "DigitalEndorser" check box was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void chkDigitalEndorser_CheckedChanged(object sender, System.EventArgs e)
        {
            if(this.chkDigitalEndorser.CheckState == CheckState.Checked)
            {
                this.txtDigitalEndorserCounter.Enabled = true;
                this.txtDigitalEndorserString.Enabled = true;
                this.txtDigitalEndorserXOffset.Enabled = true;
                this.txtDigitalEndorserYOffset.Enabled = true;
                this.cboDigitalEndorserDirection.Enabled = true;
                this.cboDigitalEndorserCountStep.Enabled = true;
                this.cboDigitalEndorserCountDirection.Enabled = true;
            }
            else
            {
                this.txtDigitalEndorserCounter.Enabled = false;
                this.txtDigitalEndorserString.Enabled = false;
                this.txtDigitalEndorserXOffset.Enabled = false;
                this.txtDigitalEndorserYOffset.Enabled = false;
                this.cboDigitalEndorserDirection.Enabled = false;
                this.cboDigitalEndorserCountStep.Enabled = false;
                this.cboDigitalEndorserCountDirection.Enabled = false;
            }        
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "DigitalEndorserXOffset" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtDigitalEndorserXOffset_TextChanged(object sender, System.EventArgs e)
        {
            double count;

            //An initial value is set to 0
            if(this.txtDigitalEndorserXOffset.Text.Length == 0)
            {
                this.txtDigitalEndorserXOffset.Text = "0";
                return;
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtDigitalEndorserXOffset.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtDigitalEndorserXOffset.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
            
            if(count < 0)
            {
                this.txtDigitalEndorserXOffset.Text = "0";
            }
            else
            {
                this.txtDigitalEndorserXOffset.Text = changeDigitByUnit(count);
            }        
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "DigitalEndorserYOffset" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtDigitalEndorserYOffset_TextChanged(object sender, System.EventArgs e)
        {
            double count;

            //An initial value is set to 0
            if(this.txtDigitalEndorserYOffset.Text.Length == 0)
            {
                this.txtDigitalEndorserYOffset.Text = "0";
                return;
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtDigitalEndorserYOffset.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtDigitalEndorserYOffset.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
            
            if(count < 0)
            {
                this.txtDigitalEndorserYOffset.Text = "0";
            }
            else
            {
                this.txtDigitalEndorserYOffset.Text = changeDigitByUnit(count);
            }          
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "DigitalEndorserCounter" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtDigitalEndorserCounter_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 0
            if(this.txtDigitalEndorserCounter.Text.Length == 0)
            {
                this.txtDigitalEndorserCounter.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtDigitalEndorserCounter.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtDigitalEndorserCounter.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
            
            if(count > 99999999)
            {
                this.txtDigitalEndorserCounter.Text = "99999999";
            }
            else if(count < -1)
            {
                this.txtDigitalEndorserCounter.Text = "0";
            }
            else
            {
                this.txtDigitalEndorserCounter.Text = count.ToString();
            }        
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "DigitalEndorserString" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtDigitalEndorserString_TextChanged(object sender, System.EventArgs e)
        {
            //Do not check if there is no data
            if (this.txtDigitalEndorserString.Text.Length == 0)
            {
                return;
            }

            try
            {
                // Uses a blank space in data if a character other than one-byte alphanumeric characters or some symbols is specified
                if (new Regex(@"^[A-Za-z0-9 !""#\$%&'\(\)\*\+,-\./:;<=>\?@\[\\\]\^_`\{\|\}~]+$").IsMatch(this.txtDigitalEndorserString.Text) == false)
                {
                    this.txtDigitalEndorserString.Text = "";
                }
            }
            catch (System.Exception)
            {
                this.txtDigitalEndorserString.Text = "";
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "BarcodeMaxSearchPriorities" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtBarcodeMaxSearchPriorities_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 1
            if(this.txtBarcodeMaxSearchPriorities.Text.Length == 0)
            {
                this.txtBarcodeMaxSearchPriorities.Text = "1";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtBarcodeMaxSearchPriorities.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtBarcodeMaxSearchPriorities.Text);
                }
                catch (System.Exception)
                {
                    count = 1;
                }
            }
            else
            {
                count = 1;
            }
        
            if(count > 20)
            {
                this.txtBarcodeMaxSearchPriorities.Text = "20";
            }
            else if(count < 1)
            {
                this.txtBarcodeMaxSearchPriorities.Text = "1";
            }
            else
            {
                this.txtBarcodeMaxSearchPriorities.Text = count.ToString();
            }            
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "FilterSaturationSensitivity" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtFilterSaturationSensitivity_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 50
            if(this.txtFilterSaturationSensitivity.Text.Length == 0)
            {
                this.txtFilterSaturationSensitivity.Text = "50";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtFilterSaturationSensitivity.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtFilterSaturationSensitivity.Text);
                }
                catch (System.Exception)
                {
                    count = 50;
                }
            }
            else
            {
                count = 50;
            }
        
            if(count > 100)
            {
                this.txtFilterSaturationSensitivity.Text = "100";
            }
            else if(count < 0)
            {
                this.txtFilterSaturationSensitivity.Text = "0";
            }
            else
            {
                this.txtFilterSaturationSensitivity.Text = count.ToString();
            }         
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "BackgroundSmoothness" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtBackgroundSmoothness_TextChanged(object sender, System.EventArgs e)
        {
            int count;

            //An initial value is set to 5
            if(this.txtBackgroundSmoothness.Text.Length == 0)
                this.txtBackgroundSmoothness.Text = "5";
            
            //An input value is checked and an invalid value is stored within effective limits
            if(new Regex(@"^-?\d+$").IsMatch(this.txtBackgroundSmoothness.Text) == true)
            {
                try
                
                {
                    count = System.Int32.Parse(this.txtBackgroundSmoothness.Text);
                }
                catch (System.Exception)
                {
                    count = 5;
                }
            }
            else
            {
                count = 5;
            }
          
            if(count < 0)
            {
                this.txtBackgroundSmoothness.Text = "0";
            }
            else if(count > 10)
            {
                this.txtBackgroundSmoothness.Text = "10";
            }
            else
            {
                this.txtBackgroundSmoothness.Text = count.ToString();
            }    
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "CropMarginSize" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtCropMarginSize_TextChanged(object sender, System.EventArgs e)
        {
            double count;

            //An initial value is set to 0
            if(this.txtCropMarginSize.Text.Length == 0)
            {
                this.txtCropMarginSize.Text = "0.0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtCropMarginSize.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtCropMarginSize.Text);
                }
                catch (System.Exception)
                {
                    count = 0.0;
                }
            }
            else
            {
                count = 0.0;
            }
            
            if(count > 5)
            {
                this.txtCropMarginSize.Text = "5.0";
            }
            else if(count < -5)
            {
                this.txtCropMarginSize.Text = "-5.0";
            }
            else
            {
                this.txtCropMarginSize.Text = count.ToString();
            }        
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "MultiFeedModeChangeSize" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtMultiFeedModeChangeSize_TextChanged(object sender, System.EventArgs e)
        {
            double count;
            //An initial value is set to 0
            if(this.txtMultiFeedModeChangeSize.Text.Length == 0)
            {
                this.txtMultiFeedModeChangeSize.Text = "0";
                return;
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtMultiFeedModeChangeSize.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtMultiFeedModeChangeSize.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }
                
            if(count < 0)
            {
                this.txtMultiFeedModeChangeSize.Text = "0";
            }
            else
            {
                this.txtMultiFeedModeChangeSize.Text = changeDigitByUnit(count);
            }        
        }

        private void axFiScn1_DetectBarcodeDetail(object sender, AxFiScnLib._DFiScnEvents_DetectBarcodeDetailEvent e)
        {
            String count = e.barcodeCount + "/" + e.barcodeTotalCount;
            String[] barcode = { e.readCount.ToString(), count, barcodeHashTable[e.barcodeType].ToString(), e.barcodeTextLength.ToString(), e.barcodeText, e.barcodeX.ToString(), e.barcodeY.ToString(), barcodeRotationHashTable[e.barcodeRotation].ToString(), "", "", "", "" };
            resultList.Add(barcode);
            if (this.MenuItemShowEvent.Checked)
            {
                CreateShowEventMessage("DetectBarcodeDetail");
            }
            if (this.MenuItemOutputResult.Checked)
            {
                System.IO.StreamWriter sw = new System.IO.StreamWriter(ModuleScan.strOutputResult, true);
                sw.WriteLine("DetectBarcodeDetail Event");
                sw.WriteLine("ReadCount              : " + e.readCount);
                sw.WriteLine("BarcodeCount           : " + e.barcodeCount);
                sw.WriteLine("BarcodeTotalCount      : " + e.barcodeTotalCount);
                sw.WriteLine("BarcodeType            : " + e.barcodeType);
                sw.WriteLine("BarcodeTextLength      : " + e.barcodeTextLength);
                sw.WriteLine("BarcodeText            : " + e.barcodeText);
                sw.WriteLine("BarcodeX               : " + e.barcodeX);
                sw.WriteLine("BarcodeY               : " + e.barcodeY);
                sw.WriteLine("BarcodeRotation        : " + e.barcodeRotation);
                sw.WriteLine("BarcodeConfidence      : " + e.barcodeConfidence);
                sw.WriteLine("");
                sw.Close();
            }
        }

        //----------------------------------------------------------------------------
        //Function    : The event of NegotiateCapabilities
        //Return code : Nothing
        //----------------------------------------------------------------------------
        private void axFiscn1_NegotiateCapabilities(object sender, EventArgs e)
        {
            //int iReturnCode;
            //int iItemValue;
            //iReturnCode = axFiScn1.SetCapability(ICAP_PIXELTYPE, TWTY_UINT16, TWPT_BW);
            //iReturnCode = axFiScn1.GetCapability(ICAP_PIXELTYPE, MSG_GETCURRENT, TWTY_UINT16, iItemValue);
            if (this.MenuItemShowEvent.Checked)
            {
                CreateShowEventMessage("NegotiateCapabilities");
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "AutomaticColorSensitivity" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtAutomaticColorSensitivity_TextChanged(object sender, EventArgs e)
        {
            int count;
            //An initial value is set to 0
            if (this.txtAutomaticColorSensitivity.Text.Length == 0)
                this.txtAutomaticColorSensitivity.Text = "0";

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtAutomaticColorSensitivity.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtAutomaticColorSensitivity.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }

            if (count < -7)
            {
                this.txtAutomaticColorSensitivity.Text = "-7";
            }
            else if (count > 7)
            {
                this.txtAutomaticColorSensitivity.Text = "7";
            }
            else
            {
                this.txtAutomaticColorSensitivity.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : Detection result of page partition. 
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void axFiscn1_Pagepartition(object sender, EventArgs e)
        {
            if (this.MenuItemShowEvent.Checked)
            {
                CreateShowEventMessage("PagePartition");
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The "ShowEvent" menu was chosen
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemShowEvent_Click(object sender, EventArgs e)
        {
            if (this.MenuItemShowEvent.Checked == true)
            {
                this.MenuItemShowEvent.Checked = false;
            }
            else
            {
                this.MenuItemShowEvent.Checked = true;
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : Create event message
        //  Argument    : Name of event
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void CreateShowEventMessage(string strEventName)
        {
            MessageBox.Show(strEventName + " was detected.", "fiScanTest", MessageBoxButtons.OK, MessageBoxIcon.Asterisk);
        }

        //----------------------------------------------------------------------------
        //  Function    : The "OutputResult" menu was chosen
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemOutputResult_Click(object sender, EventArgs e)
        {
            if (this.MenuItemOutputResult.Checked == true)
            {
                this.MenuItemOutputResult.Checked = false;
            }
            else
            {
                this.MenuItemOutputResult.Checked = true;
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The "Source List..." menu was chosen
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemSourceList_Click(object sender, EventArgs e)
        {
            FormSourceList frmSource = new FormSourceList();
            frmSource.ShowDialog();
        }

        //----------------------------------------------------------------------------
        //  Function    : The "PSIP Default" button was pushed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void ButtonPSIP_Click(object sender, EventArgs e)
        {
            this.DefaultSet();
            this.PSIPDefaultSet();
        }

        private void PSIPDefaultSet()
        {
            this.chkAutoBorderDetection.Checked = true;
            this.chkAutoBright.Checked = true;
            this.cboCompType.SelectedIndex = ModuleScan.NO_COMP;
            this.txtCustomGamma.Text = "1";
            this.cboGamma.SelectedIndex = ModuleScan.GAMMA_CUSTOM;
            this.cboRotation.SelectedIndex = ModuleScan.RT_AUTO;
            this.txtThreshold.Text = "-2";
            this.chkPDF417.Checked = false;
            this.chkQRCode.Checked = false;

            this.chkStream1AutoBright.Checked = true;
            this.cboStream1CompressionType.SelectedIndex = ModuleScan.NO_COMP;
            this.txtStream1CustomGamma.Text = "1";
            this.cboStream1Gamma.SelectedIndex = ModuleScan.GAMMA_CUSTOM;
            this.txtStream1Threshold.Text = "-2";

            this.chkStream2AutoBright.Checked = true;
            this.cboStream2CompressionType.SelectedIndex = ModuleScan.NO_COMP;
            this.txtStream2CustomGamma.Text = "1";
            this.cboStream2Gamma.SelectedIndex = ModuleScan.GAMMA_CUSTOM;
            this.txtStream2Threshold.Text = "-2";

            this.chkStream3AutoBright.Checked = true;
            this.cboStream3CompressionType.SelectedIndex = ModuleScan.NO_COMP;
            this.txtStream3CustomGamma.Text = "1";
            this.cboStream3Gamma.SelectedIndex = ModuleScan.GAMMA_CUSTOM;
            this.txtStream3Threshold.Text = "-2";
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "BlankPageIgnoreAreaSize" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtBlankPageIgnoreAreaSize_TextChanged(object sender, EventArgs e)
        {
            int count;
            //An input value is checked and an invalid value is stored "16"
            if (new Regex(@"^-?\d+$").IsMatch(this.txtBlankPageIgnoreAreaSize.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtBlankPageIgnoreAreaSize.Text);
                }
                catch (System.Exception)
                {
                    count = 16;
                }
            }
            else
            {
                count = 16;
            }
            this.txtBlankPageIgnoreAreaSize.Text = count.ToString();
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "FrontBackMergingTargetSize" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtFrontBackMergingTargetSize_TextChanged(object sender, EventArgs e)
        {
            double count;

            //An input value is checked and an invalid value is stored 1 inch
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtFrontBackMergingTargetSize.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtFrontBackMergingTargetSize.Text);
                }
                catch (System.Exception)
                {
                    count = ModuleScan.FBMTG_DEFAULT;
                }
            }
            else
            {
                count = ModuleScan.FBMTG_DEFAULT;
            }
            this.txtFrontBackMergingTargetSize.Text = changeDigitByUnit(count);
        }

        //----------------------------------------------------------------------------
        //   Function    : Selection of a "ScanTo" combo box was changed
        //   Argument    : Nothing
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void cboScanTo_SelectedIndexChanged(object sender, EventArgs e)
        {
            // When ScanTo is except a "file transfer", restriction is applied to the following property.
            // - FileType (It is always "BMP")
            // - OverWrite (It is always "ON")
            // - CompressionType (It is always "Un-compressing")
            // - JpegQuality (It is disabled)
            if (this.cboScanTo.SelectedIndex == ModuleScan.TYPE_FILE)
            {
                this.cboFileType.Enabled = true;
                this.cboOverwrite.Enabled = true;
            }
            else
            {
                this.cboFileType.Enabled = false;
                this.cboFileType.SelectedIndex = ModuleScan.FILE_BMP;
                this.cboOverwrite.Enabled = false;
                this.cboOverwrite.SelectedIndex = ModuleScan.OW_ON;
                this.cboCompType.Enabled = false;
                this.cboCompType.SelectedIndex = ModuleScan.NO_COMP;
                this.cboJpegQuality.Enabled = false;
            }

            if ((this.cboScanTo.SelectedIndex == ModuleScan.TYPE_RAW_IMAGE_HANDLE) &&
                ((this.cboPaperSupply.SelectedIndex == ModuleScan.ADF_A3CS) || (this.cboPaperSupply.SelectedIndex == ModuleScan.ADF_DLCS) ||
                (this.cboPaperSupply.SelectedIndex == ModuleScan.ADF_B4CS) || (this.cboPaperSupply.SelectedIndex == ModuleScan.ADF_CS)))
            {
                this.cboScanTo.SelectedIndex = ModuleScan.TYPE_FILE;
                this.cboFileType.Enabled = true;
                this.cboOverwrite.Enabled = true;
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : Generation of a save file name
        //   Argument    : Nothing
        //   Return code : Save file name
        //----------------------------------------------------------------------------
        private String SaveFileName()
        {
            String Name, Name2, Path, str;
            int i, pos, count, counter;

            Path = "";
            Name = "image#####";

            if (this.axFiScn1.FileName.Length != 0)
            {
                pos = this.axFiScn1.FileName.LastIndexOf("\\");
                if (pos != -1)
                {
                    Path = this.axFiScn1.FileName.Substring(0, pos);
                    Name = this.axFiScn1.FileName.Substring(pos + 1);
                }
                else
                {
                    Path = "";
                    Name = this.axFiScn1.FileName;
                }
            }
            else
            {
                this.axFiScn1.FileName = Name;
                txtFileName.Text = Name;
            }

            count = 0;
            Name2 = "";
            if ((pos = Name.IndexOf('#')) != -1)
            {
                str = Name.Substring(pos);
                Name = Name.Substring(0, pos);
                for (i = 0; i < str.Length; i++)
                {
                    if (str[i] != '#')
                    {
                        break;
                    }
                    count++;
                }
                if (count < str.Length)
                {
                    Name2 = str.Substring(count);
                }
                if (Name2.IndexOf('#') != -1)
                {
                    Name2 = "";
                }
            }

            counter = this.axFiScn1.FileCounter;
            if (counter > 65535)
            {
                counter = 1;
            }
            str = "";
            switch (count)
            {
                case 0:
                    break;
                case 1:
                    counter = counter % 10;
                    break;
                case 2:
                    counter = counter % 100;
                    if (counter < 10)
                        str = "0";
                    break;
                case 3:
                    counter = counter % 1000;
                    if (counter < 10)
                        str = "00";
                    else if (counter < 100)
                        str = "0";
                    break;
                case 4:
                    counter = counter % 10000;
                    if (counter < 10)
                        str = "000";
                    else if (counter < 100)
                        str = "00";
                    else if (counter < 1000)
                        str = "0";
                    break;
                default:
                    if (counter < 10)
                        str = "0000";
                    else if (counter < 100)
                        str = "000";
                    else if (counter < 1000)
                        str = "00";
                    else if (counter < 10000)
                        str = "0";
                    break;
            }

            if (count > 0)
            {
                if (counter == -1)
                {
                    str = str.Replace("0", "#");
                    Path = Path + "\\" + Name + str + "#" + Name2 + ".bmp";
                }
                else
                {
                    Path = Path + "\\" + Name + str + counter + Name2 + ".bmp";
                }

            }
            else
            {
                Path = Path + "\\" + Name + Name2 + ".bmp";
            }

            return Path;
        }

        //----------------------------------------------------------------------------
        //   Function    : In response to a DIB handle, it saves at a BITMAP file.
        //   Argument    : DIB handle
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void axFiScn1_ScanToDibEx(object sender, AxFiScnLib._DFiScnEvents_ScanToDibExEvent e)
        {
            Bitmap BitMap;
            int fileCounter;
            String Path;
            ConvH2BM Conv = new ConvH2BM();

            if (this.chkAIQCNotice.CheckState == CheckState.Checked)
            {
                String[] aiqcResult = { axFiScn1.PageCount.ToString(), "", "", "", "", "", "", "", "", aiqcResultHashTable[axFiScn1.AIQCResult].ToString(), "", "" };
                resultList.Add(aiqcResult);
            }
            if (axFiScn1.BlankPageSkip != 0 && axFiScn1.BlankPageNotice == 1)
            {
                String[] blankPageResult = { axFiScn1.PageCount.ToString(), "", "", "", "", "", "", "", "", "", blankPageResultHashTable[axFiScn1.BlankPageResult].ToString(), "" };
                resultList.Add(blankPageResult);
            }
            if ((axFiScn1.MultiFeed > 0) && (axFiScn1.MultiFeedNotice == true))
            {
                String[] multiResult = { axFiScn1.PageCount.ToString(), "", "", "", "", "", "", "", "", "", "", multiResultHashTable[axFiScn1.MultiFeedResult].ToString() };
                resultList.Add(multiResult);
            }
            
            Path = SaveFileName();
            ModuleScan.GlobalLock((IntPtr)e.dib);
            
            // Converting the DIB handle into the Bitmap class
            BitMap = Conv.GetBitmapFromDIB(e.dib);
            if (BitMap == null)
            {
                MessageBox.Show("An error occurred during conversion into the Bitmap class. \nError code of the GetBitmapFromDIB:" + HexString(Conv.ErrorCode), "fiScanTest");
                ModuleScan.GlobalUnlock((IntPtr)e.dib);
                ModuleScan.GlobalFree((IntPtr)e.dib);
                return;
            }
            BitMap.Save(Path, System.Drawing.Imaging.ImageFormat.Bmp);
            BitMap.Dispose();
            ModuleScan.GlobalUnlock((IntPtr)e.dib);
            ModuleScan.GlobalFree((IntPtr)e.dib);

            // One value of FileCounter is increased.
            fileCounter = this.axFiScn1.FileCounter;
            if (fileCounter == 65535)
            {
                fileCounter = 1;
            }
            else if (fileCounter != -1)
            {
                fileCounter++;
            }
            this.axFiScn1.FileCounter = fileCounter;

            if (ModuleScan.bCancelScan)
            {
                axFiScn1.CancelScan();
                ModuleScan.bCancelScan = false;
            }
            if (this.MenuItemShowEvent.Checked)
            {
                CreateShowEventMessage("ScanToDibEx");
            }

            if (this.MenuItemOutputResult.Checked)
            {
                System.IO.StreamWriter sw = new System.IO.StreamWriter(ModuleScan.strOutputResult, true);
                sw.WriteLine("ScanToDibEx Event");
                sw.WriteLine("Dib                    : " + e.dib);
                sw.WriteLine("");
                sw.WriteLine("PageNumber Property");
                sw.WriteLine("value                  : " + axFiScn1.PageNumber);
                sw.WriteLine("");
                sw.Close();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : Raw image data is received by memory and it saves at a BITMAP file.
        //   Argument    : resolution
        //                 image width
        //                 image length
        //                 pixel number
        //                 compression type
        //                 image size
        //                 memory handle
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void axFiScn1_ScanToRawEx(object sender, AxFiScnLib._DFiScnEvents_ScanToRawExEvent e)
        {
            Bitmap BitMap;
            int fileCounter;
            String Path;
            ConvH2BM Conv = new ConvH2BM();

            if (this.chkAIQCNotice.CheckState == CheckState.Checked)
            {
                String[] aiqcResult = { axFiScn1.PageCount.ToString(), "", "", "", "", "", "", "", "", aiqcResultHashTable[axFiScn1.AIQCResult].ToString(), "", "" };
                resultList.Add(aiqcResult);
            }
            if (axFiScn1.BlankPageSkip != 0 && axFiScn1.BlankPageNotice == 1)
            {
                String[] blankPageResult = { axFiScn1.PageCount.ToString(), "", "", "", "", "", "", "", "", "", blankPageResultHashTable[axFiScn1.BlankPageResult].ToString(), "" };
                resultList.Add(blankPageResult);
            }
            if ((axFiScn1.MultiFeed > 0) && (axFiScn1.MultiFeedNotice == true))
            {
                String[] multiResult = { axFiScn1.PageCount.ToString(), "", "", "", "", "", "", "", "", "", "", multiResultHashTable[axFiScn1.MultiFeedResult].ToString() };
                resultList.Add(multiResult);
            }
            
            Path = SaveFileName();

            // Converting the memory handle into the Bitmap class
            BitMap = Conv.GetBitmapFromRAW(e.resolution, e.imageWidth, e.imageLength, e.bitPerPixel, e.compressionType, e.size, e.raw);
            if (BitMap == null)
            {
                MessageBox.Show("An error occurred during conversion into the Bitmap class. \nError code of the GetBitmapFromRAW:" + HexString(Conv.ErrorCode), "fiScanTest");
                return;
            }
            BitMap.Save(Path, System.Drawing.Imaging.ImageFormat.Bmp);
            BitMap.Dispose();

            // One value of FileCounter is increased.
            fileCounter = this.axFiScn1.FileCounter;
            if (fileCounter == 65535)
            {
                fileCounter = 1;
            }
            else if (fileCounter != -1)
            {
                fileCounter++;
            }
            this.axFiScn1.FileCounter = fileCounter;

            if (ModuleScan.bCancelScan)
            {
                axFiScn1.CancelScan();
                ModuleScan.bCancelScan = false;
            }
            if (this.MenuItemShowEvent.Checked)
            {
                CreateShowEventMessage("ScanToRawEx");
            }

            if (this.MenuItemOutputResult.Checked)
            {
                System.IO.StreamWriter sw = new System.IO.StreamWriter(ModuleScan.strOutputResult, true);
                sw.WriteLine("ScanToRawEx Event");
                sw.WriteLine("Resolution             : " + e.resolution);
                sw.WriteLine("ImageWidth             : " + e.imageWidth);
                sw.WriteLine("ImageLength            : " + e.imageLength);
                sw.WriteLine("BitPerPixel            : " + e.bitPerPixel);
                sw.WriteLine("CompressionType        : " + e.compressionType);
                sw.WriteLine("Size                   : " + e.size);
                sw.WriteLine("hRaw                   : " + e.raw);
                sw.WriteLine("");
                sw.WriteLine("PageNumber Property");
                sw.WriteLine("value                  : " + axFiScn1.PageNumber);
                sw.WriteLine("");
                sw.Close();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "ColorReproductionBrightness" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtColorReproductionBrightness_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtColorReproductionBrightness.Text.Length == 0)
            {
                this.txtColorReproductionBrightness.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtColorReproductionBrightness.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtColorReproductionBrightness.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtColorReproductionBrightness.Text = "255";
            }
            else if (count < 1)
            {
                this.txtColorReproductionBrightness.Text = "1";
            }
            else
            {
                this.txtColorReproductionBrightness.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "ColorReproductionContrast" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtColorReproductionContrast_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtColorReproductionContrast.Text.Length == 0)
            {
                this.txtColorReproductionContrast.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtColorReproductionContrast.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtColorReproductionContrast.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtColorReproductionContrast.Text = "255";
            }
            else if (count < 1)
            {
                this.txtColorReproductionContrast.Text = "1";
            }
            else
            {
                this.txtColorReproductionContrast.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "ColorReproductionHighlight" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtColorReproductionHighlight_TextChanged(object sender, EventArgs e)
        {
            int countHighlight;
            int countShadow;

            //An initial value is set to 255
            if (this.txtColorReproductionHighlight.Text.Length == 0)
            {
                this.txtColorReproductionHighlight.Text = "255";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtColorReproductionHighlight.Text) == true)
            {
                try
                {
                    countHighlight = System.Int32.Parse(this.txtColorReproductionHighlight.Text);
                }
                catch (System.Exception)
                {
                    countHighlight = 255;
                }
            }
            else
            {
                countHighlight = 255;
            }

            if (new Regex(@"^-?\d+$").IsMatch(this.txtColorReproductionShadow.Text) == true)
            {
                try
                {
                    countShadow = System.Int32.Parse(this.txtColorReproductionShadow.Text);
                }
                catch (System.Exception)
                {
                    countShadow = 0;
                }
            }
            else
            {
                countShadow = 0;
            }

            if (countHighlight > 255)
            {
                this.txtColorReproductionHighlight.Text = "255";
            }
            else if (countHighlight < 1)
            {
                this.txtColorReproductionHighlight.Text = "1";
            }
            else if (countHighlight <= countShadow)
            {
                this.txtColorReproductionHighlight.Text = Convert.ToString(countShadow + 1);
            }
            else
            {
                this.txtColorReproductionHighlight.Text = countHighlight.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "ColorReproductionShadow" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtColorReproductionShadow_TextChanged(object sender, EventArgs e)
        {
            int countHighlight;
            int countShadow;

            //An initial value is set to 0
            if (txtColorReproductionShadow.Text.Length == 0)
            {
                this.txtColorReproductionShadow.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtColorReproductionHighlight.Text) == true)
            {
                try
                {
                    countHighlight = System.Int32.Parse(this.txtColorReproductionHighlight.Text);
                }
                catch (System.Exception)
                {
                    countHighlight = 255;
                }
            }
            else
            {
                countHighlight = 255;
            }


            if (new Regex(@"^-?\d+$").IsMatch(this.txtColorReproductionShadow.Text) == true)
            {
                try
                {
                    countShadow = System.Int32.Parse(this.txtColorReproductionShadow.Text);
                }
                catch (System.Exception)
                {
                    countShadow = 0;
                }
            }
            else
            {
                countShadow = 0;
            }

            if (countShadow > 254)
            {
                this.txtColorReproductionShadow.Text = "254";
            }
            else if (countShadow < 0)
            {
                this.txtColorReproductionShadow.Text = "0";
            }
            else if (countShadow >= countHighlight)
            {
                if (countHighlight - 1 == -1)
                {
                    this.txtColorReproductionShadow.Text = "0";
                }
                else
                {
                    this.txtColorReproductionShadow.Text = Convert.ToString(countHighlight - 1);
                }
            }
            else
            {
                this.txtColorReproductionShadow.Text = countShadow.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "ColorReproductionCustomGamma" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtColorReproductionCustomGamma_TextChanged(object sender, EventArgs e)
        {
            double count;

            //An initial value is set to 1.0
            if (this.txtColorReproductionCustomGamma.Text.Length == 0)
            {
                this.txtColorReproductionCustomGamma.Text = "1.0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtColorReproductionCustomGamma.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtColorReproductionCustomGamma.Text);
                }
                catch (System.Exception)
                {
                    count = 1.0;
                }
            }
            else
            {
                count = 1.0;
            }

            if (count > 10)
            {
                this.txtColorReproductionCustomGamma.Text = "10";
            }
            else if (count < 0.1)
            {
                this.txtColorReproductionCustomGamma.Text = "0.1";
            }
            else
            {
                this.txtColorReproductionCustomGamma.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "AdjustRGBR" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtAdjustRGBR_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtAdjustRGBR.Text.Length == 0)
            {
                this.txtAdjustRGBR.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtAdjustRGBR.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtAdjustRGBR.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtAdjustRGBR.Text = "255";
            }
            else if (count < 1)
            {
                this.txtAdjustRGBR.Text = "1";
            }
            else
            {
                this.txtAdjustRGBR.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "AdjustRGBG" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtAdjustRGBG_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtAdjustRGBG.Text.Length == 0)
            {
                this.txtAdjustRGBG.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtAdjustRGBG.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtAdjustRGBG.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtAdjustRGBG.Text = "255";
            }
            else if (count < 1)
            {
                this.txtAdjustRGBG.Text = "1";
            }
            else
            {
                this.txtAdjustRGBG.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "AdjustRGBB" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtAdjustRGBB_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtAdjustRGBB.Text.Length == 0)
            {
                this.txtAdjustRGBB.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtAdjustRGBB.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtAdjustRGBB.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtAdjustRGBB.Text = "255";
            }
            else if (count < 1)
            {
                this.txtAdjustRGBB.Text = "1";
            }
            else
            {
                this.txtAdjustRGBB.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The "SerialNo" button was pushed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void ButtonSerialNo_Click(object sender, EventArgs e)
        {
            string number = axFiScn1.GetSerialNumber(this.Handle.ToInt32());

            if (number == "")
            {
                MessageBox.Show("The scanner is unavailable, or an error ocurred.\n\terror code : " + HexString(axFiScn1.ErrorCode), "fiScanTest", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            else
            {
                MessageBox.Show("SerialNumber : " + number, "fiScanTest");
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The "AutoProfile..." menu was chosen
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemAutoProfile_Click(object sender, EventArgs e)
        {
            formAutoProfile.ShowDialog();
        }

        //----------------------------------------------------------------------------
        //   Function    : The event of AutoProfileSelection
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void axFiScn1_AutoProfileSelection(object sender, AxFiScnLib._DFiScnEvents_AutoProfileSelectionEvent e)
        {
            if (this.MenuItemShowEvent.Checked)
            {
                CreateShowEventMessage("AutoProfileSelection");
            }
            if (this.MenuItemOutputResult.Checked)
            {
                System.IO.StreamWriter sw = new System.IO.StreamWriter(ModuleScan.strOutputResult, true);
                sw.WriteLine("AutoProfileSelection Event");
                sw.WriteLine("DistResult             : " + e.distResult);
                sw.WriteLine("FormName               : " + e.formName);
                sw.WriteLine("ProfileName            : " + e.profileName);
                sw.WriteLine("");
                sw.Close();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "1stStreamCustomResolution" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1CustomResolution_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 300
            if (this.txtStream1CustomResolution.Text.Length == 0)
            {
                this.txtStream1CustomResolution.Text = "300";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1CustomResolution.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream1CustomResolution.Text);
                }
                catch (System.Exception)
                {
                    count = 300;
                }
            }
            else
            {
                count = 300;
            }

            if (count > 1200)
            {
                this.txtStream1CustomResolution.Text = "1200";
            }
            else if (count < 50)
            {
                this.txtStream1CustomResolution.Text = "50";
            }
            else
            {
                this.txtStream1CustomResolution.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "1stStreamBrightness" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1Brightness_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream1Brightness.Text.Length == 0)
            {
                this.txtStream1Brightness.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1Brightness.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream1Brightness.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream1Brightness.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream1Brightness.Text = "1";
            }
            else
            {
                this.txtStream1Brightness.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "1stStreamContrast" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1Contrast_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream1Contrast.Text.Length == 0)
            {
                this.txtStream1Contrast.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1Contrast.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream1Contrast.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream1Contrast.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream1Contrast.Text = "1";
            }
            else
            {
                this.txtStream1Contrast.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "1stStreamCustomGamma" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1CustomGamma_TextChanged(object sender, EventArgs e)
        {
            double count;

            //An initial value is set to 2.2
            if (this.txtStream1CustomGamma.Text.Length == 0)
            {
                this.txtStream1CustomGamma.Text = "2.2";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtStream1CustomGamma.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtStream1CustomGamma.Text);
                }
                catch (System.Exception)
                {
                    count = 2.2;
                }
            }
            else
            {
                count = 2.2;
            }

            if (count > 10)
            {
                this.txtStream1CustomGamma.Text = "10";
            }
            else if (count < 0.1)
            {
                this.txtStream1CustomGamma.Text = "0.1";
            }
            else
            {
                this.txtStream1CustomGamma.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "1stStreamThreshold" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1Threshold_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream1Threshold.Text.Length == 0)
            {
                this.txtStream1Threshold.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1Threshold.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream1Threshold.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream1Threshold.Text = "255";
            }
            else if (count < -2)
            {
                this.txtStream1Threshold.Text = "-2";
            }
            else
            {
                this.txtStream1Threshold.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "1stStreamDTCSensitivity" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1DTCSensitivity_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 50
            if (this.txtStream1DTCSensitivity.Text.Length == 0)
            {
                this.txtStream1DTCSensitivity.Text = "50";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1DTCSensitivity.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream1DTCSensitivity.Text);
                }
                catch (System.Exception)
                {
                    count = 50;
                }
            }
            else
            {
                count = 50;
            }

            if (count > 100)
            {
                this.txtStream1DTCSensitivity.Text = "100";
            }
            else if (count < 0)
            {
                this.txtStream1DTCSensitivity.Text = "0";
            }
            else
            {
                this.txtStream1DTCSensitivity.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "1stStreamBackgroundThreshold" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1BackgroundThreshold_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 50
            if (this.txtStream1BackgroundThreshold.Text.Length == 0)
            {
                this.txtStream1BackgroundThreshold.Text = "50";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1BackgroundThreshold.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream1BackgroundThreshold.Text);
                }
                catch (System.Exception)
                {
                    count = 50;
                }
            }
            else
            {
                count = 50;
            }

            if (count > 100)
            {
                this.txtStream1BackgroundThreshold.Text = "100";
            }
            else if (count < 0)
            {
                this.txtStream1BackgroundThreshold.Text = "0";
            }
            else
            {
                this.txtStream1BackgroundThreshold.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "1stStreamCharacterThickness" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1CharacterThickness_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 5
            if (this.txtStream1CharacterThickness.Text.Length == 0)
            {
                this.txtStream1CharacterThickness.Text = "5";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1CharacterThickness.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream1CharacterThickness.Text);
                }
                catch (System.Exception)
                {
                    count = 5;
                }
            }
            else
            {
                count = 5;
            }

            if (count > 10)
            {
                this.txtStream1CharacterThickness.Text = "10";
            }
            else if (count < 0)
            {
                this.txtStream1CharacterThickness.Text = "0";
            }
            else
            {
                this.txtStream1CharacterThickness.Text = count.ToString();
            }        
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "1stStreamFadingCompensation" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1FadingCompensation_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 0
            if (this.txtStream1FadingCompensation.Text.Length == 0)
            {
                this.txtStream1FadingCompensation.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1FadingCompensation.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream1FadingCompensation.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }

            if (count > 5)
            {
                this.txtStream1FadingCompensation.Text = "5";
            }
            else if (count < 0)
            {
                this.txtStream1FadingCompensation.Text = "0";
            }
            else
            {
                this.txtStream1FadingCompensation.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "1stStreamNoiseRejection" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1NoiseRejection_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 0
            if (this.txtStream1NoiseRejection.Text.Length == 0)
            {
                this.txtStream1NoiseRejection.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1NoiseRejection.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream1NoiseRejection.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }

            if (count > 20)
            {
                this.txtStream1NoiseRejection.Text = "20";
            }
            else if (count < 0)
            {
                this.txtStream1NoiseRejection.Text = "0";
            }
            else
            {
                this.txtStream1NoiseRejection.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "1stStreamADTCThreshold" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1ADTCThreshold_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 83
            if (this.txtStream1ADTCThreshold.Text.Length == 0)
            {
                this.txtStream1ADTCThreshold.Text = "83";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1ADTCThreshold.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream1ADTCThreshold.Text);
                }
                catch (System.Exception)
                {
                    count = 83;
                }
            }
            else
            {
                count = 83;
            }

            if (count > 255)
            {
                this.txtStream1ADTCThreshold.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream1ADTCThreshold.Text = "1";
            }
            else
            {
                this.txtStream1ADTCThreshold.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "1stStreamSDTCSensitivity" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1SDTCSensitivity_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 2
            if (this.txtStream1SDTCSensitivity.Text.Length == 0)
            {
                this.txtStream1SDTCSensitivity.Text = "2";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1SDTCSensitivity.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream1SDTCSensitivity.Text);
                }
                catch (System.Exception)
                {
                    count = 2;
                }
            }
            else
            {
                count = 2;
            }

            if (count > 3)
            {
                this.txtStream1SDTCSensitivity.Text = "3";
            }
            else if (count < 1)
            {
                this.txtStream1SDTCSensitivity.Text = "1";
            }
            else
            {
                this.txtStream1SDTCSensitivity.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "1stStreamFilterSaturationSensitivity" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1FilterSaturationSensitivity_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 50
            if (this.txtStream1FilterSaturationSensitivity.Text.Length == 0)
            {
                this.txtStream1FilterSaturationSensitivity.Text = "50";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1FilterSaturationSensitivity.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream1FilterSaturationSensitivity.Text);
                }
                catch (System.Exception)
                {
                    count = 50;
                }
            }
            else
            {
                count = 50;
            }

            if (count > 100)
            {
                this.txtStream1FilterSaturationSensitivity.Text = "100";
            }
            else if (count < 0)
            {
                this.txtStream1FilterSaturationSensitivity.Text = "0";
            }
            else
            {
                this.txtStream1FilterSaturationSensitivity.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "1stStreamHighlight" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1Highlight_TextChanged(object sender, EventArgs e)
        {
            int countStream1Highlight;
            int countStream1Shadow;

            //An initial value is set to 230
            if (this.txtStream1Highlight.Text.Length == 0)
            {
                this.txtStream1Highlight.Text = "230";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1Highlight.Text) == true)
            {
                try
                {
                    countStream1Highlight = System.Int32.Parse(this.txtStream1Highlight.Text);
                }
                catch (System.Exception)
                {
                    countStream1Highlight = 230;
                }
            }
            else
            {
                countStream1Highlight = 230;
            }

            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1Shadow.Text) == true)
            {
                try
                {
                    countStream1Shadow = System.Int32.Parse(this.txtStream1Shadow.Text);
                }
                catch (System.Exception)
                {
                    countStream1Shadow = 10;
                }
            }
            else
            {
                countStream1Shadow = 10;
            }

            if (countStream1Highlight > 255)
            {
                this.txtStream1Highlight.Text = "255";
            }
            else if (countStream1Highlight < 1)
            {
                this.txtStream1Highlight.Text = "1";
            }
            else if (countStream1Highlight <= countStream1Shadow)
            {
                this.txtStream1Highlight.Text = Convert.ToString(countStream1Shadow + 1);
            }
            else
            {
                this.txtStream1Highlight.Text = countStream1Highlight.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "1stStreamShadow" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1Shadow_TextChanged(object sender, EventArgs e)
        {
            int countStream1Highlight;
            int countStream1Shadow;

            //An initial value is set to 10
            if (this.txtStream1Shadow.Text.Length == 0)
            {
                this.txtStream1Shadow.Text = "10";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1Highlight.Text) == true)
            {
                try
                {

                    countStream1Highlight = System.Int32.Parse(this.txtStream1Highlight.Text);
                }
                catch (System.Exception)
                {
                    countStream1Highlight = 230;
                }
            }
            else
            {
                countStream1Highlight = 230;
            }


            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1Shadow.Text) == true)
            {
                try
                {
                    countStream1Shadow = System.Int32.Parse(this.txtStream1Shadow.Text);
                }
                catch (System.Exception)
                {
                    countStream1Shadow = 10;
                }
            }
            else
            {
                countStream1Shadow = 10;
            }

            if (countStream1Shadow > 254)
            {
                this.txtStream1Shadow.Text = "254";
            }
            else if (countStream1Shadow < 0)
            {
                this.txtStream1Shadow.Text = "0";
            }
            else if (countStream1Shadow >= countStream1Highlight)
            {
                if (countStream1Highlight - 1 == -1)
                {
                    this.txtStream1Shadow.Text = "0";
                }
                else
                {
                    this.txtStream1Shadow.Text = Convert.ToString(countStream1Highlight - 1);
                }
            }
            else
            {
                this.txtStream1Shadow.Text = countStream1Shadow.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "1stStreamBackgroundSmoothness" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1BackgroundSmoothness_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 5
            if (this.txtStream1BackgroundSmoothness.Text.Length == 0)
            {
                this.txtStream1BackgroundSmoothness.Text = "5";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1BackgroundSmoothness.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream1BackgroundSmoothness.Text);
                }
                catch (System.Exception)
                {
                    count = 5;
                }
            }
            else
            {
                count = 5;
            }

            if (count > 10)
            {
                this.txtStream1BackgroundSmoothness.Text = "10";
            }
            else if (count < 0)
            {
                this.txtStream1BackgroundSmoothness.Text = "0";
            }
            else
            {
                this.txtStream1BackgroundSmoothness.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "1stStreamColorReproductionBrightness" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1ColorReproductionBrightness_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream1ColorReproductionBrightness.Text.Length == 0)
            {
                this.txtStream1ColorReproductionBrightness.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1ColorReproductionBrightness.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream1ColorReproductionBrightness.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream1ColorReproductionBrightness.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream1ColorReproductionBrightness.Text = "1";
            }
            else
            {
                this.txtStream1ColorReproductionBrightness.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "1stStreamColorReproductionContrast" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1ColorReproductionContrast_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream1ColorReproductionContrast.Text.Length == 0)
            {
                this.txtStream1ColorReproductionContrast.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1ColorReproductionContrast.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream1ColorReproductionContrast.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream1ColorReproductionContrast.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream1ColorReproductionContrast.Text = "1";
            }
            else
            {
                this.txtStream1ColorReproductionContrast.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "1stStreamColorReproductionCustomGamma" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1ColorReproductionCustomGamma_TextChanged(object sender, EventArgs e)
        {
            double count;

            //An initial value is set to 1.0
            if (this.txtStream1ColorReproductionCustomGamma.Text.Length == 0)
            {
                this.txtStream1ColorReproductionCustomGamma.Text = "1.0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtStream1ColorReproductionCustomGamma.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtStream1ColorReproductionCustomGamma.Text);
                }
                catch (System.Exception)
                {
                    count = 1.0;
                }
            }
            else
            {
                count = 1.0;
            }

            if (count > 10)
            {
                this.txtStream1ColorReproductionCustomGamma.Text = "10";
            }
            else if (count < 0.1)
            {
                this.txtStream1ColorReproductionCustomGamma.Text = "0.1";
            }
            else
            {
                this.txtStream1ColorReproductionCustomGamma.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "1stStreamColorReproductionHighlight" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1ColorReproductionHighlight_TextChanged(object sender, EventArgs e)
        {
            int countStream1Highlight;
            int countStream1Shadow;

            //An initial value is set to 255
            if (this.txtStream1ColorReproductionHighlight.Text.Length == 0)
            {
                this.txtStream1ColorReproductionHighlight.Text = "255";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1ColorReproductionHighlight.Text) == true)
            {
                try
                {
                    countStream1Highlight = System.Int32.Parse(this.txtStream1ColorReproductionHighlight.Text);
                }
                catch (System.Exception)
                {
                    countStream1Highlight = 255;
                }
            }
            else
            {
                countStream1Highlight = 255;
            }

            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1ColorReproductionShadow.Text) == true)
            {
                try
                {
                    countStream1Shadow = System.Int32.Parse(this.txtStream1ColorReproductionShadow.Text);
                }
                catch (System.Exception)
                {
                    countStream1Shadow = 0;
                }
            }
            else
            {
                countStream1Shadow = 0;
            }

            if (countStream1Highlight > 255)
            {
                this.txtStream1ColorReproductionHighlight.Text = "255";
            }
            else if (countStream1Highlight < 1)
            {
                this.txtStream1ColorReproductionHighlight.Text = "1";
            }
            else if (countStream1Highlight <= countStream1Shadow)
            {
                this.txtStream1ColorReproductionHighlight.Text = Convert.ToString(countStream1Shadow + 1);
            }
            else
            {
                this.txtStream1ColorReproductionHighlight.Text = countStream1Highlight.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "1stStreamColorReproductionShadow" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1ColorReproductionShadow_TextChanged(object sender, EventArgs e)
        {
            int countStream1Highlight;
            int countStream1Shadow;

            //An initial value is set to 0
            if (this.txtStream1ColorReproductionShadow.Text.Length == 0)
            {
                this.txtStream1ColorReproductionShadow.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1ColorReproductionHighlight.Text) == true)
            {
                try
                {
                    countStream1Highlight = System.Int32.Parse(this.txtStream1ColorReproductionHighlight.Text);
                }
                catch (System.Exception)
                {
                    countStream1Highlight = 255;
                }
            }
            else
            {
                countStream1Highlight = 255;
            }


            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1ColorReproductionShadow.Text) == true)
            {
                try
                {
                    countStream1Shadow = System.Int32.Parse(this.txtStream1ColorReproductionShadow.Text);
                }
                catch (System.Exception)
                {
                    countStream1Shadow = 0;
                }
            }
            else
            {
                countStream1Shadow = 0;
            }

            if (countStream1Shadow > 254)
            {
                this.txtStream1ColorReproductionShadow.Text = "254";
            }
            else if (countStream1Shadow < 0)
            {
                this.txtStream1ColorReproductionShadow.Text = "0";
            }
            else if (countStream1Shadow >= countStream1Highlight)
            {
                if (countStream1Highlight - 1 == -1)
                {
                    this.txtStream1ColorReproductionShadow.Text = "0";
                }
                else
                {
                    this.txtStream1ColorReproductionShadow.Text = Convert.ToString(countStream1Highlight - 1);
                }
            }
            else
            {
                this.txtStream1ColorReproductionShadow.Text = countStream1Shadow.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "1stStreamAdjustRGBR" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1AdjustRGBR_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream1AdjustRGBR.Text.Length == 0)
            {
                this.txtStream1AdjustRGBR.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1AdjustRGBR.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream1AdjustRGBR.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream1AdjustRGBR.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream1AdjustRGBR.Text = "1";
            }
            else
            {
                this.txtStream1AdjustRGBR.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "1stStreamAdjustRGBG" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1AdjustRGBG_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream1AdjustRGBG.Text.Length == 0)
            {
                this.txtStream1AdjustRGBG.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1AdjustRGBG.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream1AdjustRGBG.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream1AdjustRGBG.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream1AdjustRGBG.Text = "1";
            }
            else
            {
                this.txtStream1AdjustRGBG.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "1stStreamAdjustRGBB" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream1AdjustRGBB_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream1AdjustRGBB.Text.Length == 0)
            {
                this.txtStream1AdjustRGBB.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream1AdjustRGBB.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream1AdjustRGBB.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream1AdjustRGBB.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream1AdjustRGBB.Text = "1";
            }
            else
            {
                this.txtStream1AdjustRGBB.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "2ndStreamCustomResolution" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2CustomResolution_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 300
            if (this.txtStream2CustomResolution.Text.Length == 0)
            {
                this.txtStream2CustomResolution.Text = "300";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2CustomResolution.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream2CustomResolution.Text);
                }
                catch (System.Exception)
                {
                    count = 300;
                }
            }
            else
            {
                count = 300;
            }

            if (count > 1200)
            {
                this.txtStream2CustomResolution.Text = "1200";
            }
            else if (count < 50)
            {
                this.txtStream2CustomResolution.Text = "50";
            }
            else
            {
                this.txtStream2CustomResolution.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "2ndStreamBrightness" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2Brightness_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream2Brightness.Text.Length == 0)
            {
                this.txtStream2Brightness.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2Brightness.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream2Brightness.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream2Brightness.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream2Brightness.Text = "1";
            }
            else
            {
                this.txtStream2Brightness.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "2ndStreamContrast" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2Contrast_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream2Contrast.Text.Length == 0)
            {
                this.txtStream2Contrast.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2Contrast.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream2Contrast.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream2Contrast.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream2Contrast.Text = "1";
            }
            else
            {
                this.txtStream2Contrast.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "2ndStreamCustomGamma" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2CustomGamma_TextChanged(object sender, EventArgs e)
        {
            double count;

            //An initial value is set to 2.2
            if (this.txtStream2CustomGamma.Text.Length == 0)
            {
                this.txtStream2CustomGamma.Text = "2.2";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtStream2CustomGamma.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtStream2CustomGamma.Text);
                }
                catch (System.Exception)
                {
                    count = 2.2;
                }
            }
            else
            {
                count = 2.2;
            }

            if (count > 10)
            {
                this.txtStream2CustomGamma.Text = "10";
            }
            else if (count < 0.1)
            {
                this.txtStream2CustomGamma.Text = "0.1";
            }
            else
            {
                this.txtStream2CustomGamma.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "2ndStreamThreshold" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2Threshold_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream2Threshold.Text.Length == 0)
            {
                this.txtStream2Threshold.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2Threshold.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream2Threshold.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream2Threshold.Text = "255";
            }
            else if (count < -2)
            {
                this.txtStream2Threshold.Text = "-2";
            }
            else
            {
                this.txtStream2Threshold.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "2ndStreamDTCSensitivity" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2DTCSensitivity_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 50
            if (this.txtStream2DTCSensitivity.Text.Length == 0)
            {
                this.txtStream2DTCSensitivity.Text = "50";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2DTCSensitivity.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream2DTCSensitivity.Text);
                }
                catch (System.Exception)
                {
                    count = 50;
                }
            }
            else
            {
                count = 50;
            }

            if (count > 100)
            {
                this.txtStream2DTCSensitivity.Text = "100";
            }
            else if (count < 0)
            {
                this.txtStream2DTCSensitivity.Text = "0";
            }
            else
            {
                this.txtStream2DTCSensitivity.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "2ndStreamBackgroundThreshold" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2BackgroundThreshold_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 50
            if (this.txtStream2BackgroundThreshold.Text.Length == 0)
            {
                this.txtStream2BackgroundThreshold.Text = "50";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2BackgroundThreshold.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream2BackgroundThreshold.Text);
                }
                catch (System.Exception)
                {
                    count = 50;
                }
            }
            else
            {
                count = 50;
            }

            if (count > 100)
            {
                this.txtStream2BackgroundThreshold.Text = "100";
            }
            else if (count < 0)
            {
                this.txtStream2BackgroundThreshold.Text = "0";
            }
            else
            {
                this.txtStream2BackgroundThreshold.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "2ndStreamCharacterThickness" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2CharacterThickness_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 5
            if (this.txtStream2CharacterThickness.Text.Length == 0)
            {
                this.txtStream2CharacterThickness.Text = "5";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2CharacterThickness.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream2CharacterThickness.Text);
                }
                catch (System.Exception)
                {
                    count = 5;
                }
            }
            else
            {
                count = 5;
            }

            if (count > 10)
            {
                this.txtStream2CharacterThickness.Text = "10";
            }
            else if (count < 0)
            {
                this.txtStream2CharacterThickness.Text = "0";
            }
            else
            {
                this.txtStream2CharacterThickness.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "2ndStreamFadingCompensation" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2FadingCompensation_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 0
            if (this.txtStream2FadingCompensation.Text.Length == 0)
            {
                this.txtStream2FadingCompensation.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2FadingCompensation.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream2FadingCompensation.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }

            if (count > 5)
            {
                this.txtStream2FadingCompensation.Text = "5";
            }
            else if (count < 0)
            {
                this.txtStream2FadingCompensation.Text = "0";
            }
            else
            {
                this.txtStream2FadingCompensation.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "2ndStreamNoiseRejection" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2NoiseRejection_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 0
            if (this.txtStream2NoiseRejection.Text.Length == 0)
            {
                this.txtStream2NoiseRejection.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2NoiseRejection.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream2NoiseRejection.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }

            if (count > 20)
            {
                this.txtStream2NoiseRejection.Text = "20";
            }
            else if (count < 0)
            {
                this.txtStream2NoiseRejection.Text = "0";
            }
            else
            {
                this.txtStream2NoiseRejection.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "2ndStreamADTCThreshold" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2ADTCThreshold_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 83
            if (this.txtStream2ADTCThreshold.Text.Length == 0)
            {
                this.txtStream2ADTCThreshold.Text = "83";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2ADTCThreshold.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream2ADTCThreshold.Text);
                }
                catch (System.Exception)
                {
                    count = 83;
                }
            }
            else
            {
                count = 83;
            }

            if (count > 255)
            {
                this.txtStream2ADTCThreshold.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream2ADTCThreshold.Text = "1";
            }
            else
            {
                this.txtStream2ADTCThreshold.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "2ndStreamSDTCSensitivity" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2SDTCSensitivity_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 2
            if (this.txtStream2SDTCSensitivity.Text.Length == 0)
            {
                this.txtStream2SDTCSensitivity.Text = "2";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2SDTCSensitivity.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream2SDTCSensitivity.Text);
                }
                catch (System.Exception)
                {
                    count = 2;
                }
            }
            else
            {
                count = 2;
            }

            if (count > 3)
            {
                this.txtStream2SDTCSensitivity.Text = "3";
            }
            else if (count < 1)
            {
                this.txtStream2SDTCSensitivity.Text = "1";
            }
            else
            {
                this.txtStream2SDTCSensitivity.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "2ndStreamFilterSaturationSensitivity" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2FilterSaturationSensitivity_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 50
            if (this.txtStream2FilterSaturationSensitivity.Text.Length == 0)
            {
                this.txtStream2FilterSaturationSensitivity.Text = "50";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2FilterSaturationSensitivity.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream2FilterSaturationSensitivity.Text);
                }
                catch (System.Exception)
                {
                    count = 50;
                }
            }
            else
            {
                count = 50;
            }

            if (count > 100)
            {
                this.txtStream2FilterSaturationSensitivity.Text = "100";
            }
            else if (count < 0)
            {
                this.txtStream2FilterSaturationSensitivity.Text = "0";
            }
            else
            {
                this.txtStream2FilterSaturationSensitivity.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "2ndStreamHighlight" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2Highlight_TextChanged(object sender, EventArgs e)
        {
            int countStream2Highlight;
            int countStream2Shadow;

            //An initial value is set to 230
            if (this.txtStream2Highlight.Text.Length == 0)
            {
                this.txtStream2Highlight.Text = "230";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2Highlight.Text) == true)
            {
                try
                {
                    countStream2Highlight = System.Int32.Parse(this.txtStream2Highlight.Text);
                }
                catch (System.Exception)
                {
                    countStream2Highlight = 230;
                }
            }
            else
            {
                countStream2Highlight = 230;
            }

            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2Shadow.Text) == true)
            {
                try
                {
                    countStream2Shadow = System.Int32.Parse(this.txtStream2Shadow.Text);
                }
                catch (System.Exception)
                {
                    countStream2Shadow = 10;
                }
            }
            else
            {
                countStream2Shadow = 10;
            }

            if (countStream2Highlight > 255)
            {
                this.txtStream2Highlight.Text = "255";
            }
            else if (countStream2Highlight < 1)
            {
                this.txtStream2Highlight.Text = "1";
            }
            else if (countStream2Highlight <= countStream2Shadow)
            {
                this.txtStream2Highlight.Text = Convert.ToString(countStream2Shadow + 1);
            }
            else
            {
                this.txtStream2Highlight.Text = countStream2Highlight.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "2ndStreamShadow" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2Shadow_TextChanged(object sender, EventArgs e)
        {
            int countStream2Highlight;
            int countStream2Shadow;

            //An initial value is set to 10
            if (this.txtStream2Shadow.Text.Length == 0)
            {
                this.txtStream2Shadow.Text = "10";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2Highlight.Text) == true)
            {
                try
                {

                    countStream2Highlight = System.Int32.Parse(this.txtStream2Highlight.Text);
                }
                catch (System.Exception)
                {
                    countStream2Highlight = 230;
                }
            }
            else
            {
                countStream2Highlight = 230;
            }


            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2Shadow.Text) == true)
            {
                try
                {
                    countStream2Shadow = System.Int32.Parse(this.txtStream2Shadow.Text);
                }
                catch (System.Exception)
                {
                    countStream2Shadow = 10;
                }
            }
            else
            {
                countStream2Shadow = 10;
            }

            if (countStream2Shadow > 254)
            {
                this.txtStream2Shadow.Text = "254";
            }
            else if (countStream2Shadow < 0)
            {
                this.txtStream2Shadow.Text = "0";
            }
            else if (countStream2Shadow >= countStream2Highlight)
            {
                if (countStream2Highlight - 1 == -1)
                {
                    this.txtStream2Shadow.Text = "0";
                }
                else
                {
                    this.txtStream2Shadow.Text = Convert.ToString(countStream2Highlight - 1);
                }
            }
            else
            {
                this.txtStream2Shadow.Text = countStream2Shadow.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "2ndStreamBackgroundSmoothness" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2BackgroundSmoothness_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 5
            if (this.txtStream2BackgroundSmoothness.Text.Length == 0)
            {
                this.txtStream2BackgroundSmoothness.Text = "5";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2BackgroundSmoothness.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream2BackgroundSmoothness.Text);
                }
                catch (System.Exception)
                {
                    count = 5;
                }
            }
            else
            {
                count = 5;
            }

            if (count > 10)
            {
                this.txtStream2BackgroundSmoothness.Text = "10";
            }
            else if (count < 0)
            {
                this.txtStream2BackgroundSmoothness.Text = "0";
            }
            else
            {
                this.txtStream2BackgroundSmoothness.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "2ndStreamColorReproductionBrightness" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2ColorReproductionBrightness_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream2ColorReproductionBrightness.Text.Length == 0)
            {
                this.txtStream2ColorReproductionBrightness.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2ColorReproductionBrightness.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream2ColorReproductionBrightness.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream2ColorReproductionBrightness.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream2ColorReproductionBrightness.Text = "1";
            }
            else
            {
                this.txtStream2ColorReproductionBrightness.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "2ndStreamColorReproductionContrast" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2ColorReproductionContrast_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream2ColorReproductionContrast.Text.Length == 0)
            {
                this.txtStream2ColorReproductionContrast.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2ColorReproductionContrast.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream2ColorReproductionContrast.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream2ColorReproductionContrast.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream2ColorReproductionContrast.Text = "1";
            }
            else
            {
                this.txtStream2ColorReproductionContrast.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "2ndStreamColorReproductionCustomGamma" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2ColorReproductionCustomGamma_TextChanged(object sender, EventArgs e)
        {
            double count;

            //An initial value is set to 1.0
            if (this.txtStream2ColorReproductionCustomGamma.Text.Length == 0)
            {
                this.txtStream2ColorReproductionCustomGamma.Text = "1.0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtStream2ColorReproductionCustomGamma.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtStream2ColorReproductionCustomGamma.Text);
                }
                catch (System.Exception)
                {
                    count = 1.0;
                }
            }
            else
            {
                count = 1.0;
            }

            if (count > 10)
            {
                this.txtStream2ColorReproductionCustomGamma.Text = "10";
            }
            else if (count < 0.1)
            {
                this.txtStream2ColorReproductionCustomGamma.Text = "0.1";
            }
            else
            {
                this.txtStream2ColorReproductionCustomGamma.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "2ndStreamColorReproductionHighlight" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2ColorReproductionHighlight_TextChanged(object sender, EventArgs e)
        {
            int countStream2Highlight;
            int countStream2Shadow;

            //An initial value is set to 255
            if (this.txtStream2ColorReproductionHighlight.Text.Length == 0)
            {
                this.txtStream2ColorReproductionHighlight.Text = "255";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2ColorReproductionHighlight.Text) == true)
            {
                try
                {
                    countStream2Highlight = System.Int32.Parse(this.txtStream2ColorReproductionHighlight.Text);
                }
                catch (System.Exception)
                {
                    countStream2Highlight = 255;
                }
            }
            else
            {
                countStream2Highlight = 255;
            }

            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2ColorReproductionShadow.Text) == true)
            {
                try
                {
                    countStream2Shadow = System.Int32.Parse(this.txtStream2ColorReproductionShadow.Text);
                }
                catch (System.Exception)
                {
                    countStream2Shadow = 0;
                }
            }
            else
            {
                countStream2Shadow = 0;
            }

            if (countStream2Highlight > 255)
            {
                this.txtStream2ColorReproductionHighlight.Text = "255";
            }
            else if (countStream2Highlight < 1)
            {
                this.txtStream2ColorReproductionHighlight.Text = "1";
            }
            else if (countStream2Highlight <= countStream2Shadow)
            {
                this.txtStream2ColorReproductionHighlight.Text = Convert.ToString(countStream2Shadow + 1);
            }
            else
            {
                this.txtStream2ColorReproductionHighlight.Text = countStream2Highlight.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "2ndStreamColorReproductionShadow" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2ColorReproductionShadow_TextChanged(object sender, EventArgs e)
        {
            int countStream2Highlight;
            int countStream2Shadow;

            //An initial value is set to 0
            if (this.txtStream2ColorReproductionShadow.Text.Length == 0)
            {
                this.txtStream2ColorReproductionShadow.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2ColorReproductionHighlight.Text) == true)
            {
                try
                {
                    countStream2Highlight = System.Int32.Parse(this.txtStream2ColorReproductionHighlight.Text);
                }
                catch (System.Exception)
                {
                    countStream2Highlight = 255;
                }
            }
            else
            {
                countStream2Highlight = 255;
            }


            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2ColorReproductionShadow.Text) == true)
            {
                try
                {
                    countStream2Shadow = System.Int32.Parse(this.txtStream2ColorReproductionShadow.Text);
                }
                catch (System.Exception)
                {
                    countStream2Shadow = 0;
                }
            }
            else
            {
                countStream2Shadow = 0;
            }

            if (countStream2Shadow > 254)
            {
                this.txtStream2ColorReproductionShadow.Text = "254";
            }
            else if (countStream2Shadow < 0)
            {
                this.txtStream2ColorReproductionShadow.Text = "0";
            }
            else if (countStream2Shadow >= countStream2Highlight)
            {
                if (countStream2Highlight - 1 == -1)
                {
                    this.txtStream2ColorReproductionShadow.Text = "0";
                }
                else
                {
                    this.txtStream2ColorReproductionShadow.Text = Convert.ToString(countStream2Highlight - 1);
                }
            }
            else
            {
                this.txtStream2ColorReproductionShadow.Text = countStream2Shadow.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "2ndStreamAdjustRGBR" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2AdjustRGBR_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream2AdjustRGBR.Text.Length == 0)
            {
                this.txtStream2AdjustRGBR.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2AdjustRGBR.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream2AdjustRGBR.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream2AdjustRGBR.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream2AdjustRGBR.Text = "1";
            }
            else
            {
                this.txtStream2AdjustRGBR.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "2ndStreamAdjustRGBG" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2AdjustRGBG_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream2AdjustRGBG.Text.Length == 0)
            {
                this.txtStream2AdjustRGBG.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2AdjustRGBG.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream2AdjustRGBG.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream2AdjustRGBG.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream2AdjustRGBG.Text = "1";
            }
            else
            {
                this.txtStream2AdjustRGBG.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "2ndStreamAdjustRGBB" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream2AdjustRGBB_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream2AdjustRGBB.Text.Length == 0)
            {
                this.txtStream2AdjustRGBB.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream2AdjustRGBB.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream2AdjustRGBB.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream2AdjustRGBB.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream2AdjustRGBB.Text = "1";
            }
            else
            {
                this.txtStream2AdjustRGBB.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "3rdStreamCustomResolution" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3CustomResolution_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 300
            if (this.txtStream3CustomResolution.Text.Length == 0)
            {
                this.txtStream3CustomResolution.Text = "300";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3CustomResolution.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream3CustomResolution.Text);
                }
                catch (System.Exception)
                {
                    count = 300;
                }
            }
            else
            {
                count = 300;
            }

            if (count > 1200)
            {
                this.txtStream3CustomResolution.Text = "1200";
            }
            else if (count < 50)
            {
                this.txtStream3CustomResolution.Text = "50";
            }
            else
            {
                this.txtStream3CustomResolution.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "3rdStreamBrightness" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3Brightness_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream3Brightness.Text.Length == 0)
            {
                this.txtStream3Brightness.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3Brightness.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream3Brightness.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream3Brightness.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream3Brightness.Text = "1";
            }
            else
            {
                this.txtStream3Brightness.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "3rdStreamContrast" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3Contrast_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream3Contrast.Text.Length == 0)
            {
                this.txtStream3Contrast.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3Contrast.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream3Contrast.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream3Contrast.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream3Contrast.Text = "1";
            }
            else
            {
                this.txtStream3Contrast.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "3rdStreamCustomGamma" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3CustomGamma_TextChanged(object sender, EventArgs e)
        {
            double count;

            //An initial value is set to 2.2
            if (this.txtStream3CustomGamma.Text.Length == 0)
            {
                this.txtStream3CustomGamma.Text = "2.2";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtStream3CustomGamma.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtStream3CustomGamma.Text);
                }
                catch (System.Exception)
                {
                    count = 2.2;
                }
            }
            else
            {
                count = 2.2;
            }

            if (count > 10)
            {
                this.txtStream3CustomGamma.Text = "10";
            }
            else if (count < 0.1)
            {
                this.txtStream3CustomGamma.Text = "0.1";
            }
            else
            {
                this.txtStream3CustomGamma.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "3rdStreamThreshold" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3Threshold_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream3Threshold.Text.Length == 0)
            {
                this.txtStream3Threshold.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3Threshold.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream3Threshold.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream3Threshold.Text = "255";
            }
            else if (count < -2)
            {
                this.txtStream3Threshold.Text = "-2";
            }
            else
            {
                this.txtStream3Threshold.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "3rdStreamDTCSensitivity" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3DTCSensitivity_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 50
            if (this.txtStream3DTCSensitivity.Text.Length == 0)
            {
                this.txtStream3DTCSensitivity.Text = "50";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3DTCSensitivity.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream3DTCSensitivity.Text);
                }
                catch (System.Exception)
                {
                    count = 50;
                }
            }
            else
            {
                count = 50;
            }

            if (count > 100)
            {
                this.txtStream3DTCSensitivity.Text = "100";
            }
            else if (count < 0)
            {
                this.txtStream3DTCSensitivity.Text = "0";
            }
            else
            {
                this.txtStream3DTCSensitivity.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "3rdStreamBackgroundThreshold" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3BackgroundThreshold_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 50
            if (this.txtStream3BackgroundThreshold.Text.Length == 0)
            {
                this.txtStream3BackgroundThreshold.Text = "50";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3BackgroundThreshold.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream3BackgroundThreshold.Text);
                }
                catch (System.Exception)
                {
                    count = 50;
                }
            }
            else
            {
                count = 50;
            }

            if (count > 100)
            {
                this.txtStream3BackgroundThreshold.Text = "100";
            }
            else if (count < 0)
            {
                this.txtStream3BackgroundThreshold.Text = "0";
            }
            else
            {
                this.txtStream3BackgroundThreshold.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "3rdStreamCharacterThickness" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3CharacterThickness_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 5
            if (this.txtStream3CharacterThickness.Text.Length == 0)
            {
                this.txtStream3CharacterThickness.Text = "5";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3CharacterThickness.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream3CharacterThickness.Text);
                }
                catch (System.Exception)
                {
                    count = 5;
                }
            }
            else
            {
                count = 5;
            }

            if (count > 10)
            {
                this.txtStream3CharacterThickness.Text = "10";
            }
            else if (count < 0)
            {
                this.txtStream3CharacterThickness.Text = "0";
            }
            else
            {
                this.txtStream3CharacterThickness.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "3rdStreamFadingCompensation" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3FadingCompensation_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 0
            if (this.txtStream3FadingCompensation.Text.Length == 0)
            {
                this.txtStream3FadingCompensation.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3FadingCompensation.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream3FadingCompensation.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }

            if (count > 5)
            {
                this.txtStream3FadingCompensation.Text = "5";
            }
            else if (count < 0)
            {
                this.txtStream3FadingCompensation.Text = "0";
            }
            else
            {
                this.txtStream3FadingCompensation.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "3rdStreamNoiseRejection" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3NoiseRejection_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 0
            if (this.txtStream3NoiseRejection.Text.Length == 0)
            {
                this.txtStream3NoiseRejection.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3NoiseRejection.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream3NoiseRejection.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }

            if (count > 20)
            {
                this.txtStream3NoiseRejection.Text = "20";
            }
            else if (count < 0)
            {
                this.txtStream3NoiseRejection.Text = "0";
            }
            else
            {
                this.txtStream3NoiseRejection.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "3rdStreamADTCThreshold" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3ADTCThreshold_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 83
            if (this.txtStream3ADTCThreshold.Text.Length == 0)
            {
                this.txtStream3ADTCThreshold.Text = "83";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3ADTCThreshold.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream3ADTCThreshold.Text);
                }
                catch (System.Exception)
                {
                    count = 83;
                }
            }
            else
            {
                count = 83;
            }

            if (count > 255)
            {
                this.txtStream3ADTCThreshold.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream3ADTCThreshold.Text = "1";
            }
            else
            {
                this.txtStream3ADTCThreshold.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "3rdStreamSDTCSensitivity" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3SDTCSensitivity_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 2
            if (this.txtStream3SDTCSensitivity.Text.Length == 0)
            {
                this.txtStream3SDTCSensitivity.Text = "2";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3SDTCSensitivity.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream3SDTCSensitivity.Text);
                }
                catch (System.Exception)
                {
                    count = 2;
                }
            }
            else
            {
                count = 2;
            }

            if (count > 3)
            {
                this.txtStream3SDTCSensitivity.Text = "3";
            }
            else if (count < 1)
            {
                this.txtStream3SDTCSensitivity.Text = "1";
            }
            else
            {
                this.txtStream3SDTCSensitivity.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "3rdStreamFilterSaturationSensitivity" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3FilterSaturationSensitivity_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 50
            if (this.txtStream3FilterSaturationSensitivity.Text.Length == 0)
            {
                this.txtStream3FilterSaturationSensitivity.Text = "50";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3FilterSaturationSensitivity.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream3FilterSaturationSensitivity.Text);
                }
                catch (System.Exception)
                {
                    count = 50;
                }
            }
            else
            {
                count = 50;
            }

            if (count > 100)
            {
                this.txtStream3FilterSaturationSensitivity.Text = "100";
            }
            else if (count < 0)
            {
                this.txtStream3FilterSaturationSensitivity.Text = "0";
            }
            else
            {
                this.txtStream3FilterSaturationSensitivity.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "3rdStreamHighlight" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3Highlight_TextChanged(object sender, EventArgs e)
        {
            int countStream3Highlight;
            int countStream3Shadow;

            //An initial value is set to 230
            if (this.txtStream3Highlight.Text.Length == 0)
            {
                this.txtStream3Highlight.Text = "230";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3Highlight.Text) == true)
            {
                try
                {
                    countStream3Highlight = System.Int32.Parse(this.txtStream3Highlight.Text);
                }
                catch (System.Exception)
                {
                    countStream3Highlight = 230;
                }
            }
            else
            {
                countStream3Highlight = 230;
            }

            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3Shadow.Text) == true)
            {
                try
                {
                    countStream3Shadow = System.Int32.Parse(this.txtStream3Shadow.Text);
                }
                catch (System.Exception)
                {
                    countStream3Shadow = 10;
                }
            }
            else
            {
                countStream3Shadow = 10;
            }

            if (countStream3Highlight > 255)
            {
                this.txtStream3Highlight.Text = "255";
            }
            else if (countStream3Highlight < 1)
            {
                this.txtStream3Highlight.Text = "1";
            }
            else if (countStream3Highlight <= countStream3Shadow)
            {
                this.txtStream3Highlight.Text = Convert.ToString(countStream3Shadow + 1);
            }
            else
            {
                this.txtStream3Highlight.Text = countStream3Highlight.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "3rdStreamShadow" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3Shadow_TextChanged(object sender, EventArgs e)
        {
            int countStream3Highlight;
            int countStream3Shadow;

            //An initial value is set to 10
            if (this.txtStream3Shadow.Text.Length == 0)
            {
                this.txtStream3Shadow.Text = "10";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3Highlight.Text) == true)
            {
                try
                {

                    countStream3Highlight = System.Int32.Parse(this.txtStream3Highlight.Text);
                }
                catch (System.Exception)
                {
                    countStream3Highlight = 230;
                }
            }
            else
            {
                countStream3Highlight = 230;
            }


            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3Shadow.Text) == true)
            {
                try
                {
                    countStream3Shadow = System.Int32.Parse(this.txtStream3Shadow.Text);
                }
                catch (System.Exception)
                {
                    countStream3Shadow = 10;
                }
            }
            else
            {
                countStream3Shadow = 10;
            }

            if (countStream3Shadow > 254)
            {
                this.txtStream3Shadow.Text = "254";
            }
            else if (countStream3Shadow < 0)
            {
                this.txtStream3Shadow.Text = "0";
            }
            else if (countStream3Shadow >= countStream3Highlight)
            {
                if (countStream3Highlight - 1 == -1)
                {
                    this.txtStream3Shadow.Text = "0";
                }
                else
                {
                    this.txtStream3Shadow.Text = Convert.ToString(countStream3Highlight - 1);
                }
            }
            else
            {
                this.txtStream3Shadow.Text = countStream3Shadow.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The state of a "3rdStreamBackgroundSmoothness" input value was changed
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3BackgroundSmoothness_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 5
            if (this.txtStream3BackgroundSmoothness.Text.Length == 0)
            {
                this.txtStream3BackgroundSmoothness.Text = "5";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3BackgroundSmoothness.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream3BackgroundSmoothness.Text);
                }
                catch (System.Exception)
                {
                    count = 5;
                }
            }
            else
            {
                count = 5;
            }

            if (count > 10)
            {
                this.txtStream3BackgroundSmoothness.Text = "10";
            }
            else if (count < 0)
            {
                this.txtStream3BackgroundSmoothness.Text = "0";
            }
            else
            {
                this.txtStream3BackgroundSmoothness.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "3rdStreamColorReproductionBrightness" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3ColorReproductionBrightness_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream3ColorReproductionBrightness.Text.Length == 0)
            {
                this.txtStream3ColorReproductionBrightness.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3ColorReproductionBrightness.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream3ColorReproductionBrightness.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream3ColorReproductionBrightness.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream3ColorReproductionBrightness.Text = "1";
            }
            else
            {
                this.txtStream3ColorReproductionBrightness.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "3rdStreamColorReproductionContrast" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3ColorReproductionContrast_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream3ColorReproductionContrast.Text.Length == 0)
            {
                this.txtStream3ColorReproductionContrast.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3ColorReproductionContrast.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream3ColorReproductionContrast.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream3ColorReproductionContrast.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream3ColorReproductionContrast.Text = "1";
            }
            else
            {
                this.txtStream3ColorReproductionContrast.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "3rdStreamColorReproductionCustomGamma" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3ColorReproductionCustomGamma_TextChanged(object sender, EventArgs e)
        {
            double count;

            //An initial value is set to 1.0
            if (this.txtStream3ColorReproductionCustomGamma.Text.Length == 0)
            {
                this.txtStream3ColorReproductionCustomGamma.Text = "1.0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^(-?\d+)([\.,]\d+)?$").IsMatch(this.txtStream3ColorReproductionCustomGamma.Text) == true)
            {
                try
                {
                    count = double.Parse(this.txtStream3ColorReproductionCustomGamma.Text);
                }
                catch (System.Exception)
                {
                    count = 1.0;
                }
            }
            else
            {
                count = 1.0;
            }

            if (count > 10)
            {
                this.txtStream3ColorReproductionCustomGamma.Text = "10";
            }
            else if (count < 0.1)
            {
                this.txtStream3ColorReproductionCustomGamma.Text = "0.1";
            }
            else
            {
                this.txtStream3ColorReproductionCustomGamma.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "3rdStreamColorReproductionHighlight" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3ColorReproductionHighlight_TextChanged(object sender, EventArgs e)
        {
            int countStream3Highlight;
            int countStream3Shadow;

            //An initial value is set to 255
            if (this.txtStream3ColorReproductionHighlight.Text.Length == 0)
            {
                this.txtStream3ColorReproductionHighlight.Text = "255";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3ColorReproductionHighlight.Text) == true)
            {
                try
                {
                    countStream3Highlight = System.Int32.Parse(this.txtStream3ColorReproductionHighlight.Text);
                }
                catch (System.Exception)
                {
                    countStream3Highlight = 255;
                }
            }
            else
            {
                countStream3Highlight = 255;
            }

            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3ColorReproductionShadow.Text) == true)
            {
                try
                {
                    countStream3Shadow = System.Int32.Parse(this.txtStream3ColorReproductionShadow.Text);
                }
                catch (System.Exception)
                {
                    countStream3Shadow = 0;
                }
            }
            else
            {
                countStream3Shadow = 0;
            }

            if (countStream3Highlight > 255)
            {
                this.txtStream3ColorReproductionHighlight.Text = "255";
            }
            else if (countStream3Highlight < 1)
            {
                this.txtStream3ColorReproductionHighlight.Text = "1";
            }
            else if (countStream3Highlight <= countStream3Shadow)
            {
                this.txtStream3ColorReproductionHighlight.Text = Convert.ToString(countStream3Shadow + 1);
            }
            else
            {
                this.txtStream3ColorReproductionHighlight.Text = countStream3Highlight.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "3rdStreamColorReproductionShadow" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3ColorReproductionShadow_TextChanged(object sender, EventArgs e)
        {
            int countStream3Highlight;
            int countStream3Shadow;

            //An initial value is set to 0
            if (this.txtStream3ColorReproductionShadow.Text.Length == 0)
            {
                this.txtStream3ColorReproductionShadow.Text = "0";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3ColorReproductionHighlight.Text) == true)
            {
                try
                {
                    countStream3Highlight = System.Int32.Parse(this.txtStream3ColorReproductionHighlight.Text);
                }
                catch (System.Exception)
                {
                    countStream3Highlight = 255;
                }
            }
            else
            {
                countStream3Highlight = 255;
            }


            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3ColorReproductionShadow.Text) == true)
            {
                try
                {
                    countStream3Shadow = System.Int32.Parse(this.txtStream3ColorReproductionShadow.Text);
                }
                catch (System.Exception)
                {
                    countStream3Shadow = 0;
                }
            }
            else
            {
                countStream3Shadow = 0;
            }

            if (countStream3Shadow > 254)
            {
                this.txtStream3ColorReproductionShadow.Text = "254";
            }
            else if (countStream3Shadow < 0)
            {
                this.txtStream3ColorReproductionShadow.Text = "0";
            }
            else if (countStream3Shadow >= countStream3Highlight)
            {
                if (countStream3Highlight - 1 == -1)
                {
                    this.txtStream3ColorReproductionShadow.Text = "0";
                }
                else
                {
                    this.txtStream3ColorReproductionShadow.Text = Convert.ToString(countStream3Highlight - 1);
                }
            }
            else
            {
                this.txtStream3ColorReproductionShadow.Text = countStream3Shadow.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "3rdStreamAdjustRGBR" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3AdjustRGBR_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream3AdjustRGBR.Text.Length == 0)
            {
                this.txtStream3AdjustRGBR.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3AdjustRGBR.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream3AdjustRGBR.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream3AdjustRGBR.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream3AdjustRGBR.Text = "1";
            }
            else
            {
                this.txtStream3AdjustRGBR.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "3rdStreamAdjustRGBG" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3AdjustRGBG_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream3AdjustRGBG.Text.Length == 0)
            {
                this.txtStream3AdjustRGBG.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3AdjustRGBG.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream3AdjustRGBG.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream3AdjustRGBG.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream3AdjustRGBG.Text = "1";
            }
            else
            {
                this.txtStream3AdjustRGBG.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "3rdStreamAdjustRGBB" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtStream3AdjustRGBB_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 128
            if (this.txtStream3AdjustRGBB.Text.Length == 0)
            {
                this.txtStream3AdjustRGBB.Text = "128";
            }

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtStream3AdjustRGBB.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtStream3AdjustRGBB.Text);
                }
                catch (System.Exception)
                {
                    count = 128;
                }
            }
            else
            {
                count = 128;
            }

            if (count > 255)
            {
                this.txtStream3AdjustRGBB.Text = "255";
            }
            else if (count < 1)
            {
                this.txtStream3AdjustRGBB.Text = "1";
            }
            else
            {
                this.txtStream3AdjustRGBB.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //   Function    : The notification event for per-image property settings
        //   Return code : Nothing
        //----------------------------------------------------------------------------
        private void axFiScn1_MultiStreamPropertySetting(object sender, AxFiScnLib._DFiScnEvents_MultiStreamPropertySettingEvent e)
        {
            if (this.MenuItemShowEvent.Checked)
            {
                CreateShowEventMessage("MultiStreamPropertySetting");
            }

            if (e.streamCount == 1)
            {
                this.axFiScn1.PixelType = (short)this.cboStream1PixelType.SelectedIndex;
                this.axFiScn1.FileType = (short)this.cboStream1FileType.SelectedIndex;
                this.axFiScn1.CompressionType = (short)this.cboStream1CompressionType.SelectedIndex;
                if (this.cboStream1Resolution.SelectedIndex == 8)
                {
                    this.axFiScn1.Resolution = ModuleScan.RS_1200;
                }
                else if (this.cboStream1Resolution.SelectedIndex == 9)
                {
                    this.axFiScn1.Resolution = ModuleScan.RS_CUSTM;
                }
                else
                {
                    this.axFiScn1.Resolution = (short)this.cboStream1Resolution.SelectedIndex;
                }
                this.axFiScn1.CustomResolution = short.Parse(this.txtStream1CustomResolution.Text);
                this.axFiScn1.AutoBright = this.chkStream1AutoBright.Checked;
                this.axFiScn1.Reverse = this.chkStream1Reverse.Checked;
                this.axFiScn1.Gamma = (short)this.cboStream1Gamma.SelectedIndex;
                this.axFiScn1.GammaFile = this.txtStream1GammaFile.Text;
                this.axFiScn1.Brightness = short.Parse(this.txtStream1Brightness.Text);
                this.axFiScn1.Contrast = short.Parse(this.txtStream1Contrast.Text);
                float stream1CustomGammaValue;
                try
                {
                    stream1CustomGammaValue = float.Parse(txtStream1CustomGamma.Text);
                }
                catch (FormatException)
                {
                    stream1CustomGammaValue = float.Parse(txtStream1CustomGamma.Text.Replace('.', ','));
                }
                this.axFiScn1.CustomGamma = stream1CustomGammaValue;
                this.axFiScn1.Background = (short)this.cboStream1Background.SelectedIndex;
                this.axFiScn1.Sharpness = (short)this.cboStream1Sharpness.SelectedIndex;
                this.axFiScn1.Threshold = short.Parse(this.txtStream1Threshold.Text);
                this.axFiScn1.DTCSensitivity = short.Parse(this.txtStream1DTCSensitivity.Text);
                this.axFiScn1.BackgroundThreshold = short.Parse(this.txtStream1BackgroundThreshold.Text);
                this.axFiScn1.CharacterThickness = short.Parse(this.txtStream1CharacterThickness.Text);
                this.axFiScn1.FadingCompensation = short.Parse(this.txtStream1FadingCompensation.Text);
                this.axFiScn1.NoiseRejection = short.Parse(this.txtStream1NoiseRejection.Text);
                this.axFiScn1.PatternRemoval = (short)this.cboStream1PatternRemoval.SelectedIndex;
                this.axFiScn1.CharacterExtraction = this.chkStream1CharacterExtraction.Checked;
                int stream1CharacterExtractionMethod = 0;
                if (this.chkStream1ReversedTypeExtraction.Checked)
                {
                    stream1CharacterExtractionMethod += ModuleScan.CEM_REVERSEDTYPEEXTRACTION;
                }
                if (this.chkStream1HalftoneRemoval.Checked)
                {
                    stream1CharacterExtractionMethod += ModuleScan.CEM_HALFTONEREMOVAL;
                }
                if (this.chkStream1StampRemoval.Checked)
                {
                    stream1CharacterExtractionMethod += ModuleScan.CEM_STAMPREMOVAL;
                }
                this.axFiScn1.CharacterExtractionMethod = stream1CharacterExtractionMethod;
                this.axFiScn1.SimpleSlicePatternRemoval = this.chkStream1SimpleSlicePatternRemoval.Checked;
                this.axFiScn1.ADTCThreshold = short.Parse(this.txtStream1ADTCThreshold.Text);
                this.axFiScn1.SDTCSensitivity = short.Parse(this.txtStream1SDTCSensitivity.Text);
                this.axFiScn1.Halftone = (short)this.cboStream1Halftone.SelectedIndex;
                this.axFiScn1.HalftoneFile = this.txtStream1HalftoneFile.Text;
                this.axFiScn1.SEE = (short)this.cboStream1SEE.SelectedIndex;
                if (this.cboStream1Filter.SelectedIndex == 7)
                {
                    this.axFiScn1.Filter = 99;
                }
                else if (cboStream1Filter.SelectedIndex == 8)
                {
                    this.axFiScn1.Filter = 100;
                }
                else if (this.cboStream1Filter.SelectedIndex == 9)
                {
                    this.axFiScn1.Filter = 101;
                }
                else if (this.cboStream1Filter.SelectedIndex == 10)
                {
                    this.axFiScn1.Filter = 102;
                }
                else
                {
                    this.axFiScn1.Filter = (short)this.cboStream1Filter.SelectedIndex;
                }
                this.axFiScn1.FilterSaturationSensitivity = short.Parse(this.txtStream1FilterSaturationSensitivity.Text);
                this.axFiScn1.Highlight = short.Parse(txtStream1Highlight.Text);
                this.axFiScn1.Shadow = short.Parse(txtStream1Shadow.Text);
                this.axFiScn1.BackgroundSmoothing = (short)this.cboStream1BackgroundSmoothing.SelectedIndex;
                this.axFiScn1.BackgroundSmoothness = short.Parse(this.txtStream1BackgroundSmoothness.Text);
                this.axFiScn1.ColorReproduction = (short)this.cboStream1ColorReproduction.SelectedIndex;
                this.axFiScn1.ColorReproductionBrightness = short.Parse(this.txtStream1ColorReproductionBrightness.Text);
                this.axFiScn1.ColorReproductionContrast = short.Parse(this.txtStream1ColorReproductionContrast.Text);
                this.axFiScn1.ColorReproductionHighlight = short.Parse(txtStream1ColorReproductionHighlight.Text);
                this.axFiScn1.ColorReproductionShadow = short.Parse(txtStream1ColorReproductionShadow.Text);
                float stream1ColorReproductionCustomGammaValue;
                try
                {
                    stream1ColorReproductionCustomGammaValue = float.Parse(txtStream1ColorReproductionCustomGamma.Text);
                }
                catch (FormatException)
                {
                    stream1ColorReproductionCustomGammaValue = float.Parse(txtStream1ColorReproductionCustomGamma.Text.Replace('.', ','));
                }
                this.axFiScn1.ColorReproductionCustomGamma = stream1ColorReproductionCustomGammaValue;
                this.axFiScn1.AdjustRGB = this.chkStream1AdjustRGB.Checked;
                this.axFiScn1.sRGB = this.chkStream1sRGB.Checked;
                this.axFiScn1.AdjustRGBR = short.Parse(txtStream1AdjustRGBR.Text);
                this.axFiScn1.AdjustRGBG = short.Parse(txtStream1AdjustRGBG.Text);
                this.axFiScn1.AdjustRGBB = short.Parse(txtStream1AdjustRGBB.Text);
            }
            else if (e.streamCount == 2)
            {
                this.axFiScn1.PixelType = (short)this.cboStream2PixelType.SelectedIndex;
                this.axFiScn1.FileType = (short)this.cboStream2FileType.SelectedIndex;
                this.axFiScn1.CompressionType = (short)this.cboStream2CompressionType.SelectedIndex;
                if (this.cboStream2Resolution.SelectedIndex == 8)
                {
                    this.axFiScn1.Resolution = ModuleScan.RS_1200;
                }
                else if (this.cboStream2Resolution.SelectedIndex == 9)
                {
                    this.axFiScn1.Resolution = ModuleScan.RS_CUSTM;
                }
                else
                {
                    this.axFiScn1.Resolution = (short)this.cboStream2Resolution.SelectedIndex;
                }
                this.axFiScn1.CustomResolution = short.Parse(this.txtStream2CustomResolution.Text);
                this.axFiScn1.AutoBright = this.chkStream2AutoBright.Checked;
                this.axFiScn1.Reverse = this.chkStream2Reverse.Checked;
                this.axFiScn1.Gamma = (short)this.cboStream2Gamma.SelectedIndex;
                this.axFiScn1.GammaFile = this.txtStream2GammaFile.Text;
                this.axFiScn1.Brightness = short.Parse(this.txtStream2Brightness.Text);
                this.axFiScn1.Contrast = short.Parse(this.txtStream2Contrast.Text);
                float stream2CustomGammaValue;
                try
                {
                    stream2CustomGammaValue = float.Parse(txtStream2CustomGamma.Text);
                }
                catch (FormatException)
                {
                    stream2CustomGammaValue = float.Parse(txtStream2CustomGamma.Text.Replace('.', ','));
                }
                this.axFiScn1.CustomGamma = stream2CustomGammaValue;
                this.axFiScn1.Background = (short)this.cboStream2Background.SelectedIndex;
                this.axFiScn1.Sharpness = (short)this.cboStream2Sharpness.SelectedIndex;
                this.axFiScn1.Threshold = short.Parse(this.txtStream2Threshold.Text);
                this.axFiScn1.DTCSensitivity = short.Parse(this.txtStream2DTCSensitivity.Text);
                this.axFiScn1.BackgroundThreshold = short.Parse(this.txtStream2BackgroundThreshold.Text);
                this.axFiScn1.CharacterThickness = short.Parse(this.txtStream2CharacterThickness.Text);
                this.axFiScn1.FadingCompensation = short.Parse(this.txtStream2FadingCompensation.Text);
                this.axFiScn1.NoiseRejection = short.Parse(this.txtStream2NoiseRejection.Text);
                this.axFiScn1.PatternRemoval = (short)this.cboStream2PatternRemoval.SelectedIndex;
                this.axFiScn1.CharacterExtraction = this.chkStream2CharacterExtraction.Checked;
                int stream2CharacterExtractionMethod = 0;
                if (this.chkStream2ReversedTypeExtraction.Checked)
                {
                    stream2CharacterExtractionMethod += ModuleScan.CEM_REVERSEDTYPEEXTRACTION;
                }
                if (this.chkStream2HalftoneRemoval.Checked)
                {
                    stream2CharacterExtractionMethod += ModuleScan.CEM_HALFTONEREMOVAL;
                }
                if (this.chkStream2StampRemoval.Checked)
                {
                    stream2CharacterExtractionMethod += ModuleScan.CEM_STAMPREMOVAL;
                }
                this.axFiScn1.CharacterExtractionMethod = stream2CharacterExtractionMethod;
                this.axFiScn1.SimpleSlicePatternRemoval = this.chkStream2SimpleSlicePatternRemoval.Checked;
                this.axFiScn1.ADTCThreshold = short.Parse(this.txtStream2ADTCThreshold.Text);
                this.axFiScn1.SDTCSensitivity = short.Parse(this.txtStream2SDTCSensitivity.Text);
                this.axFiScn1.Halftone = (short)this.cboStream2Halftone.SelectedIndex;
                this.axFiScn1.HalftoneFile = this.txtStream2HalftoneFile.Text;
                this.axFiScn1.SEE = (short)this.cboStream2SEE.SelectedIndex;
                if (this.cboStream2Filter.SelectedIndex == 7)
                {
                    this.axFiScn1.Filter = 99;
                }
                else if (cboStream2Filter.SelectedIndex == 8)
                {
                    this.axFiScn1.Filter = 100;
                }
                else if (this.cboStream2Filter.SelectedIndex == 9)
                {
                    this.axFiScn1.Filter = 101;
                }
                else if (this.cboStream2Filter.SelectedIndex == 10)
                {
                    this.axFiScn1.Filter = 102;
                }
                else
                {
                    this.axFiScn1.Filter = (short)this.cboStream2Filter.SelectedIndex;
                }
                this.axFiScn1.FilterSaturationSensitivity = short.Parse(this.txtStream2FilterSaturationSensitivity.Text);
                this.axFiScn1.Highlight = short.Parse(txtStream2Highlight.Text);
                this.axFiScn1.Shadow = short.Parse(txtStream2Shadow.Text);
                this.axFiScn1.BackgroundSmoothing = (short)this.cboStream2BackgroundSmoothing.SelectedIndex;
                this.axFiScn1.BackgroundSmoothness = short.Parse(this.txtStream2BackgroundSmoothness.Text);
                this.axFiScn1.ColorReproduction = (short)this.cboStream2ColorReproduction.SelectedIndex;
                this.axFiScn1.ColorReproductionBrightness = short.Parse(this.txtStream2ColorReproductionBrightness.Text);
                this.axFiScn1.ColorReproductionContrast = short.Parse(this.txtStream2ColorReproductionContrast.Text);
                this.axFiScn1.ColorReproductionHighlight = short.Parse(txtStream2ColorReproductionHighlight.Text);
                this.axFiScn1.ColorReproductionShadow = short.Parse(txtStream2ColorReproductionShadow.Text);
                float stream2ColorReproductionCustomGammaValue;
                try
                {
                    stream2ColorReproductionCustomGammaValue = float.Parse(txtStream2ColorReproductionCustomGamma.Text);
                }
                catch (FormatException)
                {
                    stream2ColorReproductionCustomGammaValue = float.Parse(txtStream2ColorReproductionCustomGamma.Text.Replace('.', ','));
                }
                this.axFiScn1.ColorReproductionCustomGamma = stream2ColorReproductionCustomGammaValue;
                this.axFiScn1.AdjustRGB = this.chkStream2AdjustRGB.Checked;
                this.axFiScn1.sRGB = this.chkStream2sRGB.Checked;
                this.axFiScn1.AdjustRGBR = short.Parse(txtStream2AdjustRGBR.Text);
                this.axFiScn1.AdjustRGBG = short.Parse(txtStream2AdjustRGBG.Text);
                this.axFiScn1.AdjustRGBB = short.Parse(txtStream2AdjustRGBB.Text);
            }
            else
            {
                this.axFiScn1.PixelType = (short)this.cboStream3PixelType.SelectedIndex;
                this.axFiScn1.FileType = (short)this.cboStream3FileType.SelectedIndex;
                this.axFiScn1.CompressionType = (short)this.cboStream3CompressionType.SelectedIndex;
                if (this.cboStream3Resolution.SelectedIndex == 8)
                {
                    this.axFiScn1.Resolution = ModuleScan.RS_1200;
                }
                else if (this.cboStream3Resolution.SelectedIndex == 9)
                {
                    this.axFiScn1.Resolution = ModuleScan.RS_CUSTM;
                }
                else
                {
                    this.axFiScn1.Resolution = (short)this.cboStream3Resolution.SelectedIndex;
                }
                this.axFiScn1.CustomResolution = short.Parse(this.txtStream3CustomResolution.Text);
                this.axFiScn1.AutoBright = this.chkStream3AutoBright.Checked;
                this.axFiScn1.Reverse = this.chkStream3Reverse.Checked;
                this.axFiScn1.Gamma = (short)this.cboStream3Gamma.SelectedIndex;
                this.axFiScn1.GammaFile = this.txtStream3GammaFile.Text;
                this.axFiScn1.Brightness = short.Parse(this.txtStream3Brightness.Text);
                this.axFiScn1.Contrast = short.Parse(this.txtStream3Contrast.Text);
                float stream3CustomGammaValue;
                try
                {
                    stream3CustomGammaValue = float.Parse(txtStream3CustomGamma.Text);
                }
                catch (FormatException)
                {
                    stream3CustomGammaValue = float.Parse(txtStream3CustomGamma.Text.Replace('.', ','));
                }
                this.axFiScn1.CustomGamma = stream3CustomGammaValue;
                this.axFiScn1.Background = (short)this.cboStream3Background.SelectedIndex;
                this.axFiScn1.Sharpness = (short)this.cboStream3Sharpness.SelectedIndex;
                this.axFiScn1.Threshold = short.Parse(this.txtStream3Threshold.Text);
                this.axFiScn1.DTCSensitivity = short.Parse(this.txtStream3DTCSensitivity.Text);
                this.axFiScn1.BackgroundThreshold = short.Parse(this.txtStream3BackgroundThreshold.Text);
                this.axFiScn1.CharacterThickness = short.Parse(this.txtStream3CharacterThickness.Text);
                this.axFiScn1.FadingCompensation = short.Parse(this.txtStream3FadingCompensation.Text);
                this.axFiScn1.NoiseRejection = short.Parse(this.txtStream3NoiseRejection.Text);
                this.axFiScn1.PatternRemoval = (short)this.cboStream3PatternRemoval.SelectedIndex;
                this.axFiScn1.CharacterExtraction = this.chkStream3CharacterExtraction.Checked;
                int stream3CharacterExtractionMethod = 0;
                if (this.chkStream3ReversedTypeExtraction.Checked)
                {
                    stream3CharacterExtractionMethod += ModuleScan.CEM_REVERSEDTYPEEXTRACTION;
                }
                if (this.chkStream3HalftoneRemoval.Checked)
                {
                    stream3CharacterExtractionMethod += ModuleScan.CEM_HALFTONEREMOVAL;
                }
                if (this.chkStream3StampRemoval.Checked)
                {
                    stream3CharacterExtractionMethod += ModuleScan.CEM_STAMPREMOVAL;
                }
                this.axFiScn1.CharacterExtractionMethod = stream3CharacterExtractionMethod;
                this.axFiScn1.SimpleSlicePatternRemoval = this.chkStream3SimpleSlicePatternRemoval.Checked;
                this.axFiScn1.ADTCThreshold = short.Parse(this.txtStream3ADTCThreshold.Text);
                this.axFiScn1.SDTCSensitivity = short.Parse(this.txtStream3SDTCSensitivity.Text);
                this.axFiScn1.Halftone = (short)this.cboStream3Halftone.SelectedIndex;
                this.axFiScn1.HalftoneFile = this.txtStream3HalftoneFile.Text;
                this.axFiScn1.SEE = (short)this.cboStream3SEE.SelectedIndex;
                if (this.cboStream3Filter.SelectedIndex == 7)
                {
                    this.axFiScn1.Filter = 99;
                }
                else if (cboStream3Filter.SelectedIndex == 8)
                {
                    this.axFiScn1.Filter = 100;
                }
                else if (this.cboStream3Filter.SelectedIndex == 9)
                {
                    this.axFiScn1.Filter = 101;
                }
                else if (this.cboStream3Filter.SelectedIndex == 10)
                {
                    this.axFiScn1.Filter = 102;
                }
                else
                {
                    this.axFiScn1.Filter = (short)this.cboStream3Filter.SelectedIndex;
                }
                this.axFiScn1.FilterSaturationSensitivity = short.Parse(this.txtStream3FilterSaturationSensitivity.Text);
                this.axFiScn1.Highlight = short.Parse(txtStream3Highlight.Text);
                this.axFiScn1.Shadow = short.Parse(txtStream3Shadow.Text);
                this.axFiScn1.BackgroundSmoothing = (short)this.cboStream3BackgroundSmoothing.SelectedIndex;
                this.axFiScn1.BackgroundSmoothness = short.Parse(this.txtStream3BackgroundSmoothness.Text);
                this.axFiScn1.ColorReproduction = (short)this.cboStream3ColorReproduction.SelectedIndex;
                this.axFiScn1.ColorReproductionBrightness = short.Parse(this.txtStream3ColorReproductionBrightness.Text);
                this.axFiScn1.ColorReproductionContrast = short.Parse(this.txtStream3ColorReproductionContrast.Text);
                this.axFiScn1.ColorReproductionHighlight = short.Parse(txtStream3ColorReproductionHighlight.Text);
                this.axFiScn1.ColorReproductionShadow = short.Parse(txtStream3ColorReproductionShadow.Text);
                float stream3ColorReproductionCustomGammaValue;
                try
                {
                    stream3ColorReproductionCustomGammaValue = float.Parse(txtStream3ColorReproductionCustomGamma.Text);
                }
                catch (FormatException)
                {
                    stream3ColorReproductionCustomGammaValue = float.Parse(txtStream3ColorReproductionCustomGamma.Text.Replace('.', ','));
                }
                this.axFiScn1.ColorReproductionCustomGamma = stream3ColorReproductionCustomGammaValue;
                this.axFiScn1.AdjustRGB = this.chkStream3AdjustRGB.Checked;
                this.axFiScn1.sRGB = this.chkStream3sRGB.Checked;
                this.axFiScn1.AdjustRGBR = short.Parse(txtStream3AdjustRGBR.Text);
                this.axFiScn1.AdjustRGBG = short.Parse(txtStream3AdjustRGBG.Text);
                this.axFiScn1.AdjustRGBB = short.Parse(txtStream3AdjustRGBB.Text);
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : Selection of a "1stStreamResolution" list box was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void cboStream1Resolution_SelectedIndexChanged(object sender, System.EventArgs e)
        {
            int index = this.cboStream1Resolution.SelectedIndex;
            int iRes = StreamResolutionValue(index, 1);
            this.txtStream1CustomResolution.Text = iRes.ToString();
        }

        //----------------------------------------------------------------------------
        //  Function    : Selection of a "2stStreamResolution" list box was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void cboStream2Resolution_SelectedIndexChanged(object sender, EventArgs e)
        {
            int index = this.cboStream2Resolution.SelectedIndex;
            int iRes = StreamResolutionValue(index, 2);
            this.txtStream2CustomResolution.Text = iRes.ToString();
        }

        //----------------------------------------------------------------------------
        //  Function    : Selection of a "3stStreamResolution" list box was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void cboStream3Resolution_SelectedIndexChanged(object sender, EventArgs e)
        {
            int index = this.cboStream3Resolution.SelectedIndex;
            int iRes = StreamResolutionValue(index, 3);
            this.txtStream3CustomResolution.Text = iRes.ToString();
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "FileCounter1" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtFileCounter1_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 0
            if (this.txtFileCounter1.Text.Length == 0)
                this.txtFileCounter1.Text = "0";

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtFileCounter1.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtFileCounter1.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }

            if (count < -1)
            {
                this.txtFileCounter1.Text = "0";
            }
            else if (count > 65535)
            {
                this.txtFileCounter1.Text = "65535";
            }
            else
            {
                this.txtFileCounter1.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "FileCounter2" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtFileCounter2_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 0
            if (this.txtFileCounter2.Text.Length == 0)
                this.txtFileCounter2.Text = "0";

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtFileCounter2.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtFileCounter2.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }

            if (count < -1)
            {
                this.txtFileCounter2.Text = "0";
            }
            else if (count > 65535)
            {
                this.txtFileCounter2.Text = "65535";
            }
            else
            {
                this.txtFileCounter2.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The state of a "FileCounter3" input value was changed
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void txtFileCounter3_TextChanged(object sender, EventArgs e)
        {
            int count;

            //An initial value is set to 0
            if (this.txtFileCounter3.Text.Length == 0)
                this.txtFileCounter3.Text = "0";

            //An input value is checked and an invalid value is stored within effective limits
            if (new Regex(@"^-?\d+$").IsMatch(this.txtFileCounter3.Text) == true)
            {
                try
                {
                    count = System.Int32.Parse(this.txtFileCounter3.Text);
                }
                catch (System.Exception)
                {
                    count = 0;
                }
            }
            else
            {
                count = 0;
            }

            if (count < -1)
            {
                this.txtFileCounter3.Text = "0";
            }
            else if (count > 65535)
            {
                this.txtFileCounter3.Text = "65535";
            }
            else
            {
                this.txtFileCounter3.Text = count.ToString();
            }
        }

        //----------------------------------------------------------------------------
        //  Function    : The "CarrierSheetClippingMode->Content" menu was chosen
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemCarrierSheetClippingModeContent_Click(object sender, EventArgs e)
        {
            this.MenuItemCarrierSheetClippingModeContent.Checked = true;
            this.MenuItemCarrierSheetClippingModeEdge.Checked = false;
            this.MenuItemCarrierSheetClippingModeDriverSetting.Checked = false;
            ModuleScan.intCarrierSheetClippingMode = 0;
        }

        //----------------------------------------------------------------------------
        //  Function    : The "CarrierSheetClippingMode->Edge" menu was chosen
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemCarrierSheetClippingModeEdge_Click(object sender, EventArgs e)
        {
            this.MenuItemCarrierSheetClippingModeEdge.Checked = true;
            this.MenuItemCarrierSheetClippingModeContent.Checked = false;
            this.MenuItemCarrierSheetClippingModeDriverSetting.Checked = false;
            ModuleScan.intCarrierSheetClippingMode = 1;
        }

        //----------------------------------------------------------------------------
        //  Function    : The "CarrierSheetClippingMode->DriverSetting" menu was chosen
        //  Return code : Nothing
        //----------------------------------------------------------------------------
        private void MenuItemCarrierSheetClippingModeDriverSetting_Click(object sender, EventArgs e)
        {
            this.MenuItemCarrierSheetClippingModeDriverSetting.Checked = true;
            this.MenuItemCarrierSheetClippingModeContent.Checked = false;
            this.MenuItemCarrierSheetClippingModeEdge.Checked = false;
            ModuleScan.intCarrierSheetClippingMode = 2;
        }
    }
}
